   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"CNT001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CNT001_Init,"ax",%progbits
  20              		.align	2
  21              		.global	CNT001_Init
  22              		.thumb
  23              		.thumb_func
  25              	CNT001_Init:
  26              	.LFB117:
  27              		.file 1 "../Dave/Generated/src/CNT001/CNT001.c"
   1:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
   2:../Dave/Generated/src/CNT001/CNT001.c **** **  DAVE App Name : CNT001       App Version: 1.0.24               
   3:../Dave/Generated/src/CNT001/CNT001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/CNT001/CNT001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/CNT001/CNT001.c **** *******************************************************************************/
   6:../Dave/Generated/src/CNT001/CNT001.c **** 
   7:../Dave/Generated/src/CNT001/CNT001.c **** 
   8:../Dave/Generated/src/CNT001/CNT001.c **** /*CODE_BLOCK_BEGIN[CNT001.c]*/
   9:../Dave/Generated/src/CNT001/CNT001.c **** 
  10:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
  11:../Dave/Generated/src/CNT001/CNT001.c ****  Copyright (c) 2014, Infineon Technologies AG                                 **
  12:../Dave/Generated/src/CNT001/CNT001.c ****  All rights reserved.                                                         **
  13:../Dave/Generated/src/CNT001/CNT001.c ****                                                                               **
  14:../Dave/Generated/src/CNT001/CNT001.c ****  Redistribution and use in source and binary forms, with or without           **
  15:../Dave/Generated/src/CNT001/CNT001.c ****  modification,are permitted provided that the following conditions are met:   **
  16:../Dave/Generated/src/CNT001/CNT001.c ****                                                                               **
  17:../Dave/Generated/src/CNT001/CNT001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  18:../Dave/Generated/src/CNT001/CNT001.c ****  this list of conditions and the following disclaimer.                        **
  19:../Dave/Generated/src/CNT001/CNT001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  20:../Dave/Generated/src/CNT001/CNT001.c ****  this list of conditions and the following disclaimer in the documentation    **
  21:../Dave/Generated/src/CNT001/CNT001.c ****  and/or other materials provided with the distribution.                       **
  22:../Dave/Generated/src/CNT001/CNT001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  23:../Dave/Generated/src/CNT001/CNT001.c ****  may be used to endorse or promote products derived from this software without**
  24:../Dave/Generated/src/CNT001/CNT001.c ****  specific prior written permission.                                           **
  25:../Dave/Generated/src/CNT001/CNT001.c ****                                                                               **
  26:../Dave/Generated/src/CNT001/CNT001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  27:../Dave/Generated/src/CNT001/CNT001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  28:../Dave/Generated/src/CNT001/CNT001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  29:../Dave/Generated/src/CNT001/CNT001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  30:../Dave/Generated/src/CNT001/CNT001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  31:../Dave/Generated/src/CNT001/CNT001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  32:../Dave/Generated/src/CNT001/CNT001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  33:../Dave/Generated/src/CNT001/CNT001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  34:../Dave/Generated/src/CNT001/CNT001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  35:../Dave/Generated/src/CNT001/CNT001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  36:../Dave/Generated/src/CNT001/CNT001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  37:../Dave/Generated/src/CNT001/CNT001.c ****                                                                               **
  38:../Dave/Generated/src/CNT001/CNT001.c ****  To improve the quality of the software, users are encouraged to share        **
  39:../Dave/Generated/src/CNT001/CNT001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  40:../Dave/Generated/src/CNT001/CNT001.c ****  dave@infineon.com).                                                          **
  41:../Dave/Generated/src/CNT001/CNT001.c ****                                                                               **
  42:../Dave/Generated/src/CNT001/CNT001.c **** ********************************************************************************
  43:../Dave/Generated/src/CNT001/CNT001.c **** **                                                                            **
  44:../Dave/Generated/src/CNT001/CNT001.c **** **                                                                            **
  45:../Dave/Generated/src/CNT001/CNT001.c **** ** PLATFORM : Infineon XMC4000/XMC1000 Series                                 **
  46:../Dave/Generated/src/CNT001/CNT001.c **** **                                                                            **
  47:../Dave/Generated/src/CNT001/CNT001.c **** ** COMPILER : Compiler Independent                                            **
  48:../Dave/Generated/src/CNT001/CNT001.c **** **                                                                            **
  49:../Dave/Generated/src/CNT001/CNT001.c **** ** AUTHOR   : DAVE App Developer                                              **
  50:../Dave/Generated/src/CNT001/CNT001.c **** **                                                                            **
  51:../Dave/Generated/src/CNT001/CNT001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  52:../Dave/Generated/src/CNT001/CNT001.c **** **                                                                            **
  53:../Dave/Generated/src/CNT001/CNT001.c **** ** MODIFICATION DATE : Jan 24, 2014                                           **
  54:../Dave/Generated/src/CNT001/CNT001.c **** *******************************************************************************/
  55:../Dave/Generated/src/CNT001/CNT001.c **** 
  56:../Dave/Generated/src/CNT001/CNT001.c **** 
  57:../Dave/Generated/src/CNT001/CNT001.c **** /**
  58:../Dave/Generated/src/CNT001/CNT001.c ****  * @file CNT001.c
  59:../Dave/Generated/src/CNT001/CNT001.c ****  *
  60:../Dave/Generated/src/CNT001/CNT001.c ****  * @brief This file contains CCU4_EventCounter_CNT001 App API definitions
  61:../Dave/Generated/src/CNT001/CNT001.c ****  * This app counts the number of events. Event could be the rising edge or
  62:../Dave/Generated/src/CNT001/CNT001.c ****  * falling edge or both edges of the input signal.
  63:../Dave/Generated/src/CNT001/CNT001.c ****  * Input signal can be given through GPIO or any other peripheral like ERU,
  64:../Dave/Generated/src/CNT001/CNT001.c ****  * CCU4,8
  65:../Dave/Generated/src/CNT001/CNT001.c ****  */
  66:../Dave/Generated/src/CNT001/CNT001.c **** 
  67:../Dave/Generated/src/CNT001/CNT001.c **** /* Revision History	
  68:../Dave/Generated/src/CNT001/CNT001.c ****  * 01 Nov 2012   v1.0.12   Taken as a base version														     
  69:../Dave/Generated/src/CNT001/CNT001.c ****  * 10 Dec 2012   v1.0.14   DBG002 Macros are added
  70:../Dave/Generated/src/CNT001/CNT001.c ****  * 07 Feb 2013 	 v1.0.16   Repetitive Status updation in Event APIs is removed
  71:../Dave/Generated/src/CNT001/CNT001.c ****  * 23 Jan 2014   v1.0.22   Error codes are added in various functions, that can 
  72:../Dave/Generated/src/CNT001/CNT001.c ****  *                         be logged with DBG002 App.				   
  73:../Dave/Generated/src/CNT001/CNT001.c ****  */
  74:../Dave/Generated/src/CNT001/CNT001.c **** 
  75:../Dave/Generated/src/CNT001/CNT001.c **** /******************************************************************************
  76:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Author(s) Identity                                   **
  77:../Dave/Generated/src/CNT001/CNT001.c ****  *******************************************************************************
  78:../Dave/Generated/src/CNT001/CNT001.c ****  **                                                                           **
  79:../Dave/Generated/src/CNT001/CNT001.c ****  ** Initials     Name                                                         **
  80:../Dave/Generated/src/CNT001/CNT001.c ****  ** SK           DAVE App Developer                                           **
  81:../Dave/Generated/src/CNT001/CNT001.c ****  ** --------------------------------------------------------------------------**
  82:../Dave/Generated/src/CNT001/CNT001.c **** 
  83:../Dave/Generated/src/CNT001/CNT001.c ****  *******************************************************************************/
  84:../Dave/Generated/src/CNT001/CNT001.c **** 
  85:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
  86:../Dave/Generated/src/CNT001/CNT001.c ****  ** INCLUDE FILES                                                             **
  87:../Dave/Generated/src/CNT001/CNT001.c ****  *******************************************************************************/
  88:../Dave/Generated/src/CNT001/CNT001.c **** #include <DAVE3.h>
  89:../Dave/Generated/src/CNT001/CNT001.c **** #include "../../inc/CNT001/CNT001.h"
  90:../Dave/Generated/src/CNT001/CNT001.c **** 
  91:../Dave/Generated/src/CNT001/CNT001.c ****   
  92:../Dave/Generated/src/CNT001/CNT001.c **** /*****************************************************************************
  93:../Dave/Generated/src/CNT001/CNT001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
  94:../Dave/Generated/src/CNT001/CNT001.c **** *****************************************************************************/
  95:../Dave/Generated/src/CNT001/CNT001.c **** /*These definitions are included here to avoid compilation errors,
  96:../Dave/Generated/src/CNT001/CNT001.c ****  since the DBG002 app is not part of the project. All the macros are defined
  97:../Dave/Generated/src/CNT001/CNT001.c ****  as empty*/ 
  98:../Dave/Generated/src/CNT001/CNT001.c **** #ifndef _DBG002_H_
  99:../Dave/Generated/src/CNT001/CNT001.c **** 
 100:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_RegisterCallBack(A,B,C)
 101:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_I(e) 
 102:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IG(e,g) 
 103:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IH(e,h) 
 104:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IP(e,p) 
 105:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IGH(e,g,h) 
 106:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IGP(e,g,p) 
 107:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IHP(e,h,p) 
 108:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IGHP(e,g,h,p) 
 109:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_N(e) 
 110:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NG(e,g) 
 111:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NH(e,h) 
 112:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NP(e,p) 
 113:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NGH(e,g,h) 
 114:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NGP(e,g,p) 
 115:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NHP(e,h,p) 
 116:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_NGHP(e,g,h,p) 
 117:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_ID(e) 
 118:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_IS(e) 
 119:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_ISG(e,g) 
 120:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 121:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 122:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 123:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 124:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 125:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 126:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status) 
 127:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_FUNCTION_EXIT(GID, Status) 
 128:../Dave/Generated/src/CNT001/CNT001.c **** #define DBG002_MESSAGEID_LITERAL 
 129:../Dave/Generated/src/CNT001/CNT001.c **** #endif/* End of defintions of dummy Debug Log macros*/                  
 130:../Dave/Generated/src/CNT001/CNT001.c **** 
 131:../Dave/Generated/src/CNT001/CNT001.c **** #define APP_GID DBG002_GID_CNT001
 132:../Dave/Generated/src/CNT001/CNT001.c **** 
 133:../Dave/Generated/src/CNT001/CNT001.c **** #define CNT001_STATUS_LEN 4U
 134:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 135:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Private Type Definitions                             **
 136:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 137:../Dave/Generated/src/CNT001/CNT001.c **** 
 138:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 139:../Dave/Generated/src/CNT001/CNT001.c ****  **                 Private Function Declarations:
 140:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 141:../Dave/Generated/src/CNT001/CNT001.c **** /**
 142:../Dave/Generated/src/CNT001/CNT001.c ****  * @brief This function initializes the app.
 143:../Dave/Generated/src/CNT001/CNT001.c ****  *
 144:../Dave/Generated/src/CNT001/CNT001.c ****  * @param [in] HandlePtr pointer to the Instance variable<BR>
 145:../Dave/Generated/src/CNT001/CNT001.c ****  *
 146:../Dave/Generated/src/CNT001/CNT001.c ****  * @return  NOne <BR>
 147:../Dave/Generated/src/CNT001/CNT001.c ****  *
 148:../Dave/Generated/src/CNT001/CNT001.c ****  * <b>Reentrancy:  Yes</b><BR>
 149:../Dave/Generated/src/CNT001/CNT001.c ****  * <b>Sync/Async:  Synchronous</b><BR>
 150:../Dave/Generated/src/CNT001/CNT001.c ****  */
 151:../Dave/Generated/src/CNT001/CNT001.c **** 
 152:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_lInit(const CNT001_HandleType *HandlePtr );
 153:../Dave/Generated/src/CNT001/CNT001.c **** 
 154:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 155:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Global Constant Definitions                          **
 156:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 157:../Dave/Generated/src/CNT001/CNT001.c **** 
 158:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 159:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Global Variable Definitions                          **
 160:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 161:../Dave/Generated/src/CNT001/CNT001.c **** 
 162:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 163:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Private Constant Definitions                         **
 164:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 165:../Dave/Generated/src/CNT001/CNT001.c **** 
 166:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 167:../Dave/Generated/src/CNT001/CNT001.c ****  **                 Function like macro definitions                           **
 168:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 169:../Dave/Generated/src/CNT001/CNT001.c **** 
 170:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 171:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Private Function Definitions                         **
 172:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 173:../Dave/Generated/src/CNT001/CNT001.c **** 
 174:../Dave/Generated/src/CNT001/CNT001.c **** /*******************************************************************************
 175:../Dave/Generated/src/CNT001/CNT001.c ****  **                      Public Function Definitions                          **
 176:../Dave/Generated/src/CNT001/CNT001.c ****  ******************************************************************************/
 177:../Dave/Generated/src/CNT001/CNT001.c **** /**
 178:../Dave/Generated/src/CNT001/CNT001.c ****  * @cond INTERNAL_DOCS
 179:../Dave/Generated/src/CNT001/CNT001.c ****  */
 180:../Dave/Generated/src/CNT001/CNT001.c **** 
 181:../Dave/Generated/src/CNT001/CNT001.c **** 
 182:../Dave/Generated/src/CNT001/CNT001.c **** /** This function initializes the app */
 183:../Dave/Generated/src/CNT001/CNT001.c **** void CNT001_Init(void)
 184:../Dave/Generated/src/CNT001/CNT001.c **** {
  28              		.loc 1 184 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 185:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
  43              		.loc 1 185 0
  44 0006 4FF00103 		mov	r3, #1
  45 000a 7B60     		str	r3, [r7, #4]
 186:../Dave/Generated/src/CNT001/CNT001.c **** 
 187:../Dave/Generated/src/CNT001/CNT001.c **** 
 188:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4GLOBAL_Init();
  46              		.loc 1 188 0
  47 000c FFF7FEFF 		bl	CCU4GLOBAL_Init
 189:../Dave/Generated/src/CNT001/CNT001.c ****   status = CNT001_lInit( &CNT001_Handle0);
  48              		.loc 1 189 0
  49 0010 40F20000 		movw	r0, #:lower16:CNT001_Handle0
  50 0014 C0F20000 		movt	r0, #:upper16:CNT001_Handle0
  51 0018 FFF7FEFF 		bl	CNT001_lInit
  52 001c 7860     		str	r0, [r7, #4]
 190:../Dave/Generated/src/CNT001/CNT001.c ****     
 191:../Dave/Generated/src/CNT001/CNT001.c ****     /* Start the app if "Start after initialization" is selected */
 192:../Dave/Generated/src/CNT001/CNT001.c ****   if(status == (uint32_t)DAVEApp_SUCCESS)
  53              		.loc 1 192 0
  54 001e 7B68     		ldr	r3, [r7, #4]
  55 0020 002B     		cmp	r3, #0
  56 0022 0DD1     		bne	.L1
 193:../Dave/Generated/src/CNT001/CNT001.c ****   {
 194:../Dave/Generated/src/CNT001/CNT001.c **** 	DBG002_N(status != DAVEApp_SUCCESS);
 195:../Dave/Generated/src/CNT001/CNT001.c ****     if(CNT001_Handle0.StartControl == (uint8_t)SET)
  57              		.loc 1 195 0
  58 0024 40F20003 		movw	r3, #:lower16:CNT001_Handle0
  59 0028 C0F20003 		movt	r3, #:upper16:CNT001_Handle0
  60 002c 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  61 002e 012B     		cmp	r3, #1
  62 0030 06D1     		bne	.L1
 196:../Dave/Generated/src/CNT001/CNT001.c ****     {
 197:../Dave/Generated/src/CNT001/CNT001.c ****       status = CNT001_Start( &CNT001_Handle0);
  63              		.loc 1 197 0
  64 0032 40F20000 		movw	r0, #:lower16:CNT001_Handle0
  65 0036 C0F20000 		movt	r0, #:upper16:CNT001_Handle0
  66 003a FFF7FEFF 		bl	CNT001_Start
  67 003e 7860     		str	r0, [r7, #4]
  68              	.L1:
 198:../Dave/Generated/src/CNT001/CNT001.c **** 	  DBG002_N(status != DAVEApp_SUCCESS);
 199:../Dave/Generated/src/CNT001/CNT001.c ****     }
 200:../Dave/Generated/src/CNT001/CNT001.c ****   }
 201:../Dave/Generated/src/CNT001/CNT001.c ****   else
 202:../Dave/Generated/src/CNT001/CNT001.c ****   {
 203:../Dave/Generated/src/CNT001/CNT001.c **** 	 DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 204:../Dave/Generated/src/CNT001/CNT001.c ****   }
 205:../Dave/Generated/src/CNT001/CNT001.c **** }
  69              		.loc 1 205 0
  70 0040 07F10807 		add	r7, r7, #8
  71 0044 BD46     		mov	sp, r7
  72 0046 80BD     		pop	{r7, pc}
  73              		.cfi_endproc
  74              	.LFE117:
  76              		.section	.text.CNT001_lInit,"ax",%progbits
  77              		.align	2
  78              		.global	CNT001_lInit
  79              		.thumb
  80              		.thumb_func
  82              	CNT001_lInit:
  83              	.LFB118:
 206:../Dave/Generated/src/CNT001/CNT001.c **** 
 207:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function initializes the CCU4_CCy slice and the App. Local function
 208:../Dave/Generated/src/CNT001/CNT001.c ****  *  is used to initialize all the instances of the app.
 209:../Dave/Generated/src/CNT001/CNT001.c ****  */
 210:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_lInit(const CNT001_HandleType *HandlePtr )
 211:../Dave/Generated/src/CNT001/CNT001.c **** {
  84              		.loc 1 211 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 24
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89 0000 80B4     		push	{r7}
  90              	.LCFI3:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 7, -4
  93 0002 87B0     		sub	sp, sp, #28
  94              	.LCFI4:
  95              		.cfi_def_cfa_offset 32
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI5:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
 212:../Dave/Generated/src/CNT001/CNT001.c **** 
 213:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 100              		.loc 1 213 0
 101 0008 4FF00103 		mov	r3, #1
 102 000c 7B61     		str	r3, [r7, #20]
 214:../Dave/Generated/src/CNT001/CNT001.c **** 
 215:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;          /*Pointer to the CCU4 Structure */
 216:../Dave/Generated/src/CNT001/CNT001.c **** 
 217:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_GLOBAL_TypeDef *CCU4KernelPtr; /* Pointer to the CCU4 Kernel Structure */
 218:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 103              		.loc 1 218 0
 104 000e 7B68     		ldr	r3, [r7, #4]
 105 0010 5B69     		ldr	r3, [r3, #20]
 106 0012 3B61     		str	r3, [r7, #16]
 219:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4KernelPtr = HandlePtr->CC4KernalPtr;
 107              		.loc 1 219 0
 108 0014 7B68     		ldr	r3, [r7, #4]
 109 0016 1B69     		ldr	r3, [r3, #16]
 110 0018 FB60     		str	r3, [r7, #12]
 220:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 221:../Dave/Generated/src/CNT001/CNT001.c **** 
 222:../Dave/Generated/src/CNT001/CNT001.c ****   do
 223:../Dave/Generated/src/CNT001/CNT001.c ****   {
 224:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_1_1>>>*/
 225:../Dave/Generated/src/CNT001/CNT001.c **** 
 226:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State != CNT001_UNINITIALIZED)
 111              		.loc 1 226 0
 112 001a 7B68     		ldr	r3, [r7, #4]
 113 001c DB68     		ldr	r3, [r3, #12]
 114 001e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 115 0020 002B     		cmp	r3, #0
 116 0022 40F0AF80 		bne	.L9
 117              	.L4:
 227:../Dave/Generated/src/CNT001/CNT001.c ****     {
 228:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 229:../Dave/Generated/src/CNT001/CNT001.c ****       break;
 230:../Dave/Generated/src/CNT001/CNT001.c ****     }/* End of "if(HandlePtr->DynamicHandlePtr->State != CNT001_UNINITIALIZED)"*/
 231:../Dave/Generated/src/CNT001/CNT001.c **** 
 232:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_1_2>>>*/
 233:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the Input Selector Register */
 234:../Dave/Generated/src/CNT001/CNT001.c ****     /* Step1: Clear the  EV0EM & LPF0M bit fields */
 235:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->INS &= (uint32_t)~((CCU4_CC4_INS_EV0EM_Msk )| \
 118              		.loc 1 235 0
 119 0026 3B69     		ldr	r3, [r7, #16]
 120 0028 1B68     		ldr	r3, [r3, #0]
 121 002a 23F0C063 		bic	r3, r3, #100663296
 122 002e 23F44033 		bic	r3, r3, #196608
 123 0032 3A69     		ldr	r2, [r7, #16]
 124 0034 1360     		str	r3, [r2, #0]
 236:../Dave/Generated/src/CNT001/CNT001.c ****         (uint32_t)(CCU4_CC4_INS_LPF0M_Msk ) \
 237:../Dave/Generated/src/CNT001/CNT001.c ****     );
 238:../Dave/Generated/src/CNT001/CNT001.c ****     /*Step2: Set the Bit */
 239:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->INS |= (uint32_t)((((uint32_t)HandlePtr->CountingEventEdge <<
 125              		.loc 1 239 0
 126 0036 3B69     		ldr	r3, [r7, #16]
 127 0038 1A68     		ldr	r2, [r3, #0]
 128 003a 7B68     		ldr	r3, [r7, #4]
 129 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 130 003e 4FEA0343 		lsl	r3, r3, #16
 240:../Dave/Generated/src/CNT001/CNT001.c ****         CCU4_CC4_INS_EV0EM_Pos)& (uint32_t)CCU4_CC4_INS_EV0EM_Msk) | \
 131              		.loc 1 240 0
 132 0042 03F44031 		and	r1, r3, #196608
 241:../Dave/Generated/src/CNT001/CNT001.c ****         (((uint32_t)HandlePtr->Lpf   << \
 133              		.loc 1 241 0
 134 0046 7B68     		ldr	r3, [r7, #4]
 135 0048 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 136 004a 4FEA4363 		lsl	r3, r3, #25
 242:../Dave/Generated/src/CNT001/CNT001.c ****             CCU4_CC4_INS_LPF0M_Pos)& (uint32_t)CCU4_CC4_INS_LPF0M_Msk)
 137              		.loc 1 242 0
 138 004e 03F0C063 		and	r3, r3, #100663296
 239:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->INS |= (uint32_t)((((uint32_t)HandlePtr->CountingEventEdge <<
 139              		.loc 1 239 0
 140 0052 0B43     		orrs	r3, r3, r1
 141 0054 1A43     		orrs	r2, r2, r3
 142 0056 3B69     		ldr	r3, [r7, #16]
 143 0058 1A60     		str	r2, [r3, #0]
 243:../Dave/Generated/src/CNT001/CNT001.c ****     );
 244:../Dave/Generated/src/CNT001/CNT001.c **** 
 245:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set CNT001_EVENT0 as External Counting function in CMC Register*/
 246:../Dave/Generated/src/CNT001/CNT001.c ****     WR_REG(CCU4Ptr->CMC, (uint32_t)CCU4_CC4_CMC_CNTS_Msk,\
 144              		.loc 1 246 0
 145 005a 3B69     		ldr	r3, [r7, #16]
 146 005c 5B68     		ldr	r3, [r3, #4]
 147 005e 23F44043 		bic	r3, r3, #49152
 148 0062 43F48042 		orr	r2, r3, #16384
 149 0066 3B69     		ldr	r3, [r7, #16]
 150 0068 5A60     		str	r2, [r3, #4]
 247:../Dave/Generated/src/CNT001/CNT001.c **** 	                   (uint32_t)CCU4_CC4_CMC_CNTS_Pos,(uint32_t)CNT001_EVENT0);
 248:../Dave/Generated/src/CNT001/CNT001.c **** 
 249:../Dave/Generated/src/CNT001/CNT001.c ****     /* If Gating enabled , Set CNT001_EVENT1 as external gating signal*/
 250:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->ExternalGatingSignal)
 151              		.loc 1 250 0
 152 006a 7B68     		ldr	r3, [r7, #4]
 153 006c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 154 006e 002B     		cmp	r3, #0
 155 0070 21D0     		beq	.L6
 251:../Dave/Generated/src/CNT001/CNT001.c ****     {
 252:../Dave/Generated/src/CNT001/CNT001.c ****       CCU4Ptr->INS |= (((uint32_t)HandlePtr->GatingLevel  << CCU4_CC4_INS_EV1LM_Pos )\
 156              		.loc 1 252 0
 157 0072 3B69     		ldr	r3, [r7, #16]
 158 0074 1A68     		ldr	r2, [r3, #0]
 159 0076 7B68     		ldr	r3, [r7, #4]
 160 0078 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 161 007a 4FEAC353 		lsl	r3, r3, #23
 253:../Dave/Generated/src/CNT001/CNT001.c ****           & (uint32_t)CCU4_CC4_INS_EV1LM_Msk);
 162              		.loc 1 253 0
 163 007e 03F40003 		and	r3, r3, #8388608
 252:../Dave/Generated/src/CNT001/CNT001.c ****       CCU4Ptr->INS |= (((uint32_t)HandlePtr->GatingLevel  << CCU4_CC4_INS_EV1LM_Pos )\
 164              		.loc 1 252 0
 165 0082 1A43     		orrs	r2, r2, r3
 166 0084 3B69     		ldr	r3, [r7, #16]
 167 0086 1A60     		str	r2, [r3, #0]
 254:../Dave/Generated/src/CNT001/CNT001.c ****       CCU4Ptr->CMC |= (((uint32_t)CNT001_EVENT1  << CCU4_CC4_CMC_GATES_Pos)\
 168              		.loc 1 254 0
 169 0088 3B69     		ldr	r3, [r7, #16]
 170 008a 5B68     		ldr	r3, [r3, #4]
 171 008c 43F40072 		orr	r2, r3, #512
 172 0090 3B69     		ldr	r3, [r7, #16]
 173 0092 5A60     		str	r2, [r3, #4]
 255:../Dave/Generated/src/CNT001/CNT001.c ****           & (uint32_t)CCU4_CC4_CMC_GATES_Msk);
 256:../Dave/Generated/src/CNT001/CNT001.c ****       if((uint32_t)HandlePtr->GatingLevel == (uint8_t)RESET)
 174              		.loc 1 256 0
 175 0094 7B68     		ldr	r3, [r7, #4]
 176 0096 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 177 0098 002B     		cmp	r3, #0
 178 009a 06D1     		bne	.L7
 257:../Dave/Generated/src/CNT001/CNT001.c ****       {
 258:../Dave/Generated/src/CNT001/CNT001.c ****         CCU4Ptr->INS |= (((uint32_t)0x01  << CCU4_CC4_INS_EV1EM_Pos )\
 179              		.loc 1 258 0
 180 009c 3B69     		ldr	r3, [r7, #16]
 181 009e 1B68     		ldr	r3, [r3, #0]
 182 00a0 43F48022 		orr	r2, r3, #262144
 183 00a4 3B69     		ldr	r3, [r7, #16]
 184 00a6 1A60     		str	r2, [r3, #0]
 185 00a8 05E0     		b	.L6
 186              	.L7:
 259:../Dave/Generated/src/CNT001/CNT001.c ****             & (uint32_t)CCU4_CC4_INS_EV1EM_Msk);
 260:../Dave/Generated/src/CNT001/CNT001.c ****       }
 261:../Dave/Generated/src/CNT001/CNT001.c ****       else
 262:../Dave/Generated/src/CNT001/CNT001.c ****       {
 263:../Dave/Generated/src/CNT001/CNT001.c ****         CCU4Ptr->INS |= (((uint32_t)0x02  << CCU4_CC4_INS_EV1EM_Pos )\
 187              		.loc 1 263 0
 188 00aa 3B69     		ldr	r3, [r7, #16]
 189 00ac 1B68     		ldr	r3, [r3, #0]
 190 00ae 43F40022 		orr	r2, r3, #524288
 191 00b2 3B69     		ldr	r3, [r7, #16]
 192 00b4 1A60     		str	r2, [r3, #0]
 193              	.L6:
 264:../Dave/Generated/src/CNT001/CNT001.c ****             & (uint32_t)CCU4_CC4_INS_EV1EM_Msk);
 265:../Dave/Generated/src/CNT001/CNT001.c ****       }
 266:../Dave/Generated/src/CNT001/CNT001.c ****     }/*End of "if( HandlePtr->ExternalGatingSignal)" */
 267:../Dave/Generated/src/CNT001/CNT001.c **** 
 268:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear the Timer Values( DITC, TCC, TRBC bit fields in TCCLR Register ) */
 269:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->TCCLR |= CNT001_CCU4_TCCLR_CLEAR;
 194              		.loc 1 269 0
 195 00b6 3B69     		ldr	r3, [r7, #16]
 196 00b8 1B69     		ldr	r3, [r3, #16]
 197 00ba 43F00702 		orr	r2, r3, #7
 198 00be 3B69     		ldr	r3, [r7, #16]
 199 00c0 1A61     		str	r2, [r3, #16]
 270:../Dave/Generated/src/CNT001/CNT001.c **** 
 271:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set edge-aligned mode in the TC Register */
 272:../Dave/Generated/src/CNT001/CNT001.c ****     WR_REG(CCU4Ptr->TC,(uint32_t)CCU4_CC4_TC_TCM_Msk,\
 200              		.loc 1 272 0
 201 00c2 3B69     		ldr	r3, [r7, #16]
 202 00c4 5B69     		ldr	r3, [r3, #20]
 203 00c6 23F00102 		bic	r2, r3, #1
 204 00ca 3B69     		ldr	r3, [r7, #16]
 205 00cc 5A61     		str	r2, [r3, #20]
 273:../Dave/Generated/src/CNT001/CNT001.c **** 	         (uint32_t)CCU4_CC4_TC_TCM_Pos,(uint32_t)CNT001_EDGE_ALIGNED_MODE );
 274:../Dave/Generated/src/CNT001/CNT001.c **** 
 275:../Dave/Generated/src/CNT001/CNT001.c ****     /*Set Compare register value with the user defined value */
 276:../Dave/Generated/src/CNT001/CNT001.c ****     WR_REG(CCU4Ptr->CRS, (uint32_t)CCU4_CC4_CRS_CRS_Msk,\
 206              		.loc 1 276 0
 207 00ce 7B68     		ldr	r3, [r7, #4]
 208 00d0 5B68     		ldr	r3, [r3, #4]
 209 00d2 4FEA0342 		lsl	r2, r3, #16
 210 00d6 4FEA1242 		lsr	r2, r2, #16
 211 00da 3B69     		ldr	r3, [r7, #16]
 212 00dc DB6B     		ldr	r3, [r3, #60]
 213 00de 4FEA1343 		lsr	r3, r3, #16
 214 00e2 4FEA0343 		lsl	r3, r3, #16
 215 00e6 1A43     		orrs	r2, r2, r3
 216 00e8 3B69     		ldr	r3, [r7, #16]
 217 00ea DA63     		str	r2, [r3, #60]
 277:../Dave/Generated/src/CNT001/CNT001.c **** 	           (uint32_t)CCU4_CC4_CRS_CRS_Pos, (uint32_t)HandlePtr->CountMatch);
 278:../Dave/Generated/src/CNT001/CNT001.c **** 
 279:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set Period register Value as maximum*/
 280:../Dave/Generated/src/CNT001/CNT001.c ****     WR_REG(CCU4Ptr->PRS, (uint32_t)CCU4_CC4_PRS_PRS_Msk,\
 218              		.loc 1 280 0
 219 00ec 3B69     		ldr	r3, [r7, #16]
 220 00ee 5B6B     		ldr	r3, [r3, #52]
 221 00f0 6FEA1343 		mvn	r3, r3, lsr #16
 222 00f4 6FEA0343 		mvn	r3, r3, lsl #16
 223 00f8 3A69     		ldr	r2, [r7, #16]
 224 00fa 5363     		str	r3, [r2, #52]
 281:../Dave/Generated/src/CNT001/CNT001.c **** 	               (uint32_t)CCU4_CC4_PRS_PRS_Pos, (uint32_t)CNT001_MAX_EVENTS);
 282:../Dave/Generated/src/CNT001/CNT001.c **** 
 283:../Dave/Generated/src/CNT001/CNT001.c ****     /* Request SW shadow transfer */
 284:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4KernelPtr->GCSS |=
 225              		.loc 1 284 0
 226 00fc FB68     		ldr	r3, [r7, #12]
 227 00fe 1A69     		ldr	r2, [r3, #16]
 285:../Dave/Generated/src/CNT001/CNT001.c ****         (uint32_t)(((uint32_t)0x01 << ((uint32_t)4 * (uint32_t)HandlePtr->CCUInUse)) |
 228              		.loc 1 285 0
 229 0100 7B68     		ldr	r3, [r7, #4]
 230 0102 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 231 0104 4FEA8303 		lsl	r3, r3, #2
 232 0108 4FF00101 		mov	r1, #1
 233 010c 01FA03F1 		lsl	r1, r1, r3
 286:../Dave/Generated/src/CNT001/CNT001.c ****             ((uint32_t)0x01 << (((uint32_t)4 * (uint32_t)HandlePtr->CCUInUse) + 1U)) |
 234              		.loc 1 286 0
 235 0110 7B68     		ldr	r3, [r7, #4]
 236 0112 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 237 0114 4FEA8303 		lsl	r3, r3, #2
 238 0118 03F10103 		add	r3, r3, #1
 239 011c 4FF00100 		mov	r0, #1
 240 0120 00FA03F3 		lsl	r3, r0, r3
 285:../Dave/Generated/src/CNT001/CNT001.c ****         (uint32_t)(((uint32_t)0x01 << ((uint32_t)4 * (uint32_t)HandlePtr->CCUInUse)) |
 241              		.loc 1 285 0
 242 0124 1943     		orrs	r1, r1, r3
 287:../Dave/Generated/src/CNT001/CNT001.c ****             ((uint32_t)0x01 << (((uint32_t)4 * (uint32_t)HandlePtr->CCUInUse) + 2U)));
 243              		.loc 1 287 0
 244 0126 7B68     		ldr	r3, [r7, #4]
 245 0128 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 246 012a 4FEA8303 		lsl	r3, r3, #2
 247 012e 03F10203 		add	r3, r3, #2
 248 0132 4FF00100 		mov	r0, #1
 249 0136 00FA03F3 		lsl	r3, r0, r3
 285:../Dave/Generated/src/CNT001/CNT001.c ****         (uint32_t)(((uint32_t)0x01 << ((uint32_t)4 * (uint32_t)HandlePtr->CCUInUse)) |
 250              		.loc 1 285 0
 251 013a 0B43     		orrs	r3, r3, r1
 284:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4KernelPtr->GCSS |=
 252              		.loc 1 284 0
 253 013c 1A43     		orrs	r2, r2, r3
 254 013e FB68     		ldr	r3, [r7, #12]
 255 0140 1A61     		str	r2, [r3, #16]
 288:../Dave/Generated/src/CNT001/CNT001.c **** 
 289:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear all interrupts */
 290:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->SWR = CNT001_ALL_CCU4_INTR_CLEAR;
 256              		.loc 1 290 0
 257 0142 3B69     		ldr	r3, [r7, #16]
 258 0144 40F60F72 		movw	r2, #3855
 259 0148 C3F8B020 		str	r2, [r3, #176]
 291:../Dave/Generated/src/CNT001/CNT001.c **** 
 292:../Dave/Generated/src/CNT001/CNT001.c ****     /* Enable configured interrupts */
 293:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->INTE |= HandlePtr->InterruptControl;
 260              		.loc 1 293 0
 261 014c 3B69     		ldr	r3, [r7, #16]
 262 014e D3F8A420 		ldr	r2, [r3, #164]
 263 0152 7B68     		ldr	r3, [r7, #4]
 264 0154 DB69     		ldr	r3, [r3, #28]
 265 0156 1A43     		orrs	r2, r2, r3
 266 0158 3B69     		ldr	r3, [r7, #16]
 267 015a C3F8A420 		str	r2, [r3, #164]
 294:../Dave/Generated/src/CNT001/CNT001.c **** 
 295:../Dave/Generated/src/CNT001/CNT001.c ****     /*Initialize global variables */
 296:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->EvtCounterValue = 0x00U;
 268              		.loc 1 296 0
 269 015e 7B68     		ldr	r3, [r7, #4]
 270 0160 DB68     		ldr	r3, [r3, #12]
 271 0162 4FF00002 		mov	r2, #0
 272 0166 1A60     		str	r2, [r3, #0]
 297:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->NewCountMatch = HandlePtr->CountMatch;
 273              		.loc 1 297 0
 274 0168 7B68     		ldr	r3, [r7, #4]
 275 016a DB68     		ldr	r3, [r3, #12]
 276 016c 7A68     		ldr	r2, [r7, #4]
 277 016e 5268     		ldr	r2, [r2, #4]
 278 0170 5A60     		str	r2, [r3, #4]
 298:../Dave/Generated/src/CNT001/CNT001.c **** 
 299:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the App State to Initialized */
 300:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->State = CNT001_INITIALIZED;
 279              		.loc 1 300 0
 280 0172 7B68     		ldr	r3, [r7, #4]
 281 0174 DB68     		ldr	r3, [r3, #12]
 282 0176 4FF00102 		mov	r2, #1
 283 017a 1A72     		strb	r2, [r3, #8]
 301:../Dave/Generated/src/CNT001/CNT001.c **** 
 302:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 284              		.loc 1 302 0
 285 017c 4FF00003 		mov	r3, #0
 286 0180 7B61     		str	r3, [r7, #20]
 287 0182 00E0     		b	.L5
 288              	.L9:
 229:../Dave/Generated/src/CNT001/CNT001.c ****       break;
 289              		.loc 1 229 0
 290 0184 00BF     		nop
 291              	.L5:
 303:../Dave/Generated/src/CNT001/CNT001.c ****   }while(0);
 304:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 305:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 292              		.loc 1 305 0
 293 0186 7B69     		ldr	r3, [r7, #20]
 306:../Dave/Generated/src/CNT001/CNT001.c **** }
 294              		.loc 1 306 0
 295 0188 1846     		mov	r0, r3
 296 018a 07F11C07 		add	r7, r7, #28
 297 018e BD46     		mov	sp, r7
 298 0190 80BC     		pop	{r7}
 299 0192 7047     		bx	lr
 300              		.cfi_endproc
 301              	.LFE118:
 303              		.section	.text.CNT001_Deinit,"ax",%progbits
 304              		.align	2
 305              		.global	CNT001_Deinit
 306              		.thumb
 307              		.thumb_func
 309              	CNT001_Deinit:
 310              	.LFB119:
 307:../Dave/Generated/src/CNT001/CNT001.c **** 
 308:../Dave/Generated/src/CNT001/CNT001.c **** 
 309:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function resets the CCU4_CCy slice and the app */
 310:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_Deinit(const CNT001_HandleType *HandlePtr )
 311:../Dave/Generated/src/CNT001/CNT001.c **** {
 311              		.loc 1 311 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 24
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316 0000 80B4     		push	{r7}
 317              	.LCFI6:
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
 320 0002 87B0     		sub	sp, sp, #28
 321              	.LCFI7:
 322              		.cfi_def_cfa_offset 32
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI8:
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
 312:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 327              		.loc 1 312 0
 328 0008 4FF00103 		mov	r3, #1
 329 000c 7B61     		str	r3, [r7, #20]
 313:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;              /* Pointer to the CCU4 Register Set  */
 314:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_GLOBAL_TypeDef *CCU4KernelPtr; /* Pointer to the CCU4 Kernel Register Set */
 315:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 330              		.loc 1 315 0
 331 000e 7B68     		ldr	r3, [r7, #4]
 332 0010 5B69     		ldr	r3, [r3, #20]
 333 0012 3B61     		str	r3, [r7, #16]
 316:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4KernelPtr = HandlePtr->CC4KernalPtr;
 334              		.loc 1 316 0
 335 0014 7B68     		ldr	r3, [r7, #4]
 336 0016 1B69     		ldr	r3, [r3, #16]
 337 0018 FB60     		str	r3, [r7, #12]
 317:../Dave/Generated/src/CNT001/CNT001.c **** 
 318:../Dave/Generated/src/CNT001/CNT001.c **** 
 319:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 320:../Dave/Generated/src/CNT001/CNT001.c **** 
 321:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_2_1>>> */
 322:../Dave/Generated/src/CNT001/CNT001.c ****     /* If current state is running, then stop the App first */
 323:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 338              		.loc 1 323 0
 339 001a 7B68     		ldr	r3, [r7, #4]
 340 001c DB68     		ldr	r3, [r3, #12]
 341 001e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 342 0020 002B     		cmp	r3, #0
 343 0022 42D0     		beq	.L11
 324:../Dave/Generated/src/CNT001/CNT001.c ****     {
 325:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 326:../Dave/Generated/src/CNT001/CNT001.c ****     }
 327:../Dave/Generated/src/CNT001/CNT001.c ****     /*End of "if( HandlePtr->DynamicHandlePtr->State == CNT001_RUNNING )" */
 328:../Dave/Generated/src/CNT001/CNT001.c ****     else
 329:../Dave/Generated/src/CNT001/CNT001.c ****     {
 330:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear the Run Bit  in TCCLR register */
 331:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->TCCLR |= CNT001_CCU4_TCCLR_CLEAR;
 344              		.loc 1 331 0
 345 0024 3B69     		ldr	r3, [r7, #16]
 346 0026 1B69     		ldr	r3, [r3, #16]
 347 0028 43F00702 		orr	r2, r3, #7
 348 002c 3B69     		ldr	r3, [r7, #16]
 349 002e 1A61     		str	r2, [r3, #16]
 332:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear  the Interrupts in SWR register */
 333:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->SWR =  CNT001_ALL_CCU4_INTR_CLEAR ;
 350              		.loc 1 333 0
 351 0030 3B69     		ldr	r3, [r7, #16]
 352 0032 40F60F72 		movw	r2, #3855
 353 0036 C3F8B020 		str	r2, [r3, #176]
 334:../Dave/Generated/src/CNT001/CNT001.c ****     /* Disable the Interrupts in INTE Register */
 335:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->INTE = CNT001_CCUx_INTE_RESET;
 354              		.loc 1 335 0
 355 003a 3B69     		ldr	r3, [r7, #16]
 356 003c 4FF00002 		mov	r2, #0
 357 0040 C3F8A420 		str	r2, [r3, #164]
 336:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_2_2>>> */
 337:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the  IDLE mode */
 338:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4KernelPtr->GIDLS |= (uint32_t)(((uint32_t)0x01 << \
 358              		.loc 1 338 0
 359 0044 FB68     		ldr	r3, [r7, #12]
 360 0046 9A68     		ldr	r2, [r3, #8]
 339:../Dave/Generated/src/CNT001/CNT001.c **** 	          ((uint32_t)CCU4_GIDLS_SS0I_Pos + (uint32_t)HandlePtr->CCUInUse)));
 361              		.loc 1 339 0
 362 0048 7B68     		ldr	r3, [r7, #4]
 363 004a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 338:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4KernelPtr->GIDLS |= (uint32_t)(((uint32_t)0x01 << \
 364              		.loc 1 338 0
 365 004c 4FF00101 		mov	r1, #1
 366 0050 01FA03F3 		lsl	r3, r1, r3
 367 0054 1A43     		orrs	r2, r2, r3
 368 0056 FB68     		ldr	r3, [r7, #12]
 369 0058 9A60     		str	r2, [r3, #8]
 340:../Dave/Generated/src/CNT001/CNT001.c ****     /* Reset Input Selector Register */
 341:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->INS = CNT001_CCUx_INS_RESET;
 370              		.loc 1 341 0
 371 005a 3A69     		ldr	r2, [r7, #16]
 372 005c 4FF00003 		mov	r3, #0
 373 0060 CFF6FF73 		movt	r3, 65535
 374 0064 1360     		str	r3, [r2, #0]
 342:../Dave/Generated/src/CNT001/CNT001.c ****     /* Reset CMC Register */
 343:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->CMC = CNT001_CCUx_CMC_RESET;
 375              		.loc 1 343 0
 376 0066 3B69     		ldr	r3, [r7, #16]
 377 0068 4FF00002 		mov	r2, #0
 378 006c 5A60     		str	r2, [r3, #4]
 344:../Dave/Generated/src/CNT001/CNT001.c ****     /* Reset TC Register */
 345:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->TC = CNT001_CCUx_TC_RESET;
 379              		.loc 1 345 0
 380 006e 3B69     		ldr	r3, [r7, #16]
 381 0070 4FF00002 		mov	r2, #0
 382 0074 5A61     		str	r2, [r3, #20]
 346:../Dave/Generated/src/CNT001/CNT001.c ****     /* Reset CRS Register */
 347:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->CRS =  CNT001_CCUx_CRS_RESET;
 383              		.loc 1 347 0
 384 0076 3B69     		ldr	r3, [r7, #16]
 385 0078 4FF00002 		mov	r2, #0
 386 007c DA63     		str	r2, [r3, #60]
 348:../Dave/Generated/src/CNT001/CNT001.c ****     /* Reset PRS Register */
 349:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->PRS = CNT001_CCUx_PRS_RESET;
 387              		.loc 1 349 0
 388 007e 3B69     		ldr	r3, [r7, #16]
 389 0080 4FF00002 		mov	r2, #0
 390 0084 5A63     		str	r2, [r3, #52]
 350:../Dave/Generated/src/CNT001/CNT001.c ****     /*Clear dynamic structure variables.*/
 351:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->EvtCounterValue = 0x00U;
 391              		.loc 1 351 0
 392 0086 7B68     		ldr	r3, [r7, #4]
 393 0088 DB68     		ldr	r3, [r3, #12]
 394 008a 4FF00002 		mov	r2, #0
 395 008e 1A60     		str	r2, [r3, #0]
 352:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->NewCountMatch  = 0x00U;
 396              		.loc 1 352 0
 397 0090 7B68     		ldr	r3, [r7, #4]
 398 0092 DB68     		ldr	r3, [r3, #12]
 399 0094 4FF00002 		mov	r2, #0
 400 0098 5A60     		str	r2, [r3, #4]
 353:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the state to Uninitialized */
 354:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->State = CNT001_UNINITIALIZED;
 401              		.loc 1 354 0
 402 009a 7B68     		ldr	r3, [r7, #4]
 403 009c DB68     		ldr	r3, [r3, #12]
 404 009e 4FF00002 		mov	r2, #0
 405 00a2 1A72     		strb	r2, [r3, #8]
 355:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 406              		.loc 1 355 0
 407 00a4 4FF00003 		mov	r3, #0
 408 00a8 7B61     		str	r3, [r7, #20]
 409              	.L11:
 356:../Dave/Generated/src/CNT001/CNT001.c ****     }  
 357:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 358:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 410              		.loc 1 358 0
 411 00aa 7B69     		ldr	r3, [r7, #20]
 359:../Dave/Generated/src/CNT001/CNT001.c **** }
 412              		.loc 1 359 0
 413 00ac 1846     		mov	r0, r3
 414 00ae 07F11C07 		add	r7, r7, #28
 415 00b2 BD46     		mov	sp, r7
 416 00b4 80BC     		pop	{r7}
 417 00b6 7047     		bx	lr
 418              		.cfi_endproc
 419              	.LFE119:
 421              		.section	.text.CNT001_Start,"ax",%progbits
 422              		.align	2
 423              		.global	CNT001_Start
 424              		.thumb
 425              		.thumb_func
 427              	CNT001_Start:
 428              	.LFB120:
 360:../Dave/Generated/src/CNT001/CNT001.c **** 
 361:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function starts the CCU4_CCy slice timer and starts the app. */
 362:../Dave/Generated/src/CNT001/CNT001.c **** status_t  CNT001_Start(const CNT001_HandleType * HandlePtr )
 363:../Dave/Generated/src/CNT001/CNT001.c **** {
 429              		.loc 1 363 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 24
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
 435              	.LCFI9:
 436              		.cfi_def_cfa_offset 4
 437              		.cfi_offset 7, -4
 438 0002 87B0     		sub	sp, sp, #28
 439              	.LCFI10:
 440              		.cfi_def_cfa_offset 32
 441 0004 00AF     		add	r7, sp, #0
 442              	.LCFI11:
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 364:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 445              		.loc 1 364 0
 446 0008 4FF00103 		mov	r3, #1
 447 000c 7B61     		str	r3, [r7, #20]
 365:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;              /* Pointer to the CCU4 Register set */
 366:../Dave/Generated/src/CNT001/CNT001.c **** 
 367:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_GLOBAL_TypeDef *CCU4KernelPtr; /* Pointer to the CCU4 Kernel Register set */
 368:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 448              		.loc 1 368 0
 449 000e 7B68     		ldr	r3, [r7, #4]
 450 0010 5B69     		ldr	r3, [r3, #20]
 451 0012 3B61     		str	r3, [r7, #16]
 369:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4KernelPtr = HandlePtr->CC4KernalPtr;
 452              		.loc 1 369 0
 453 0014 7B68     		ldr	r3, [r7, #4]
 454 0016 1B69     		ldr	r3, [r3, #16]
 455 0018 FB60     		str	r3, [r7, #12]
 370:../Dave/Generated/src/CNT001/CNT001.c **** 
 371:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 372:../Dave/Generated/src/CNT001/CNT001.c **** 
 373:../Dave/Generated/src/CNT001/CNT001.c ****   /*<<<DD_CNT001_API_3_1>>> */
 374:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State != CNT001_INITIALIZED)
 456              		.loc 1 374 0
 457 001a 7B68     		ldr	r3, [r7, #4]
 458 001c DB68     		ldr	r3, [r3, #12]
 459 001e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 460 0020 012B     		cmp	r3, #1
 461 0022 18D1     		bne	.L14
 375:../Dave/Generated/src/CNT001/CNT001.c ****     {
 376:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 377:../Dave/Generated/src/CNT001/CNT001.c ****     }/*End of "if( HandlePtr->DynamicHandlePtr->State != CNT001_INITIALIZED )" */
 378:../Dave/Generated/src/CNT001/CNT001.c ****     else
 379:../Dave/Generated/src/CNT001/CNT001.c ****     {
 380:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_3_2>>> */
 381:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear IDLE mode. */
 382:../Dave/Generated/src/CNT001/CNT001.c ****     SET_BIT(CCU4KernelPtr->GIDLC,
 462              		.loc 1 382 0
 463 0024 FB68     		ldr	r3, [r7, #12]
 464 0026 DA68     		ldr	r2, [r3, #12]
 465 0028 7B68     		ldr	r3, [r7, #4]
 466 002a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 467 002c 4FF00101 		mov	r1, #1
 468 0030 01FA03F3 		lsl	r3, r1, r3
 469 0034 1A43     		orrs	r2, r2, r3
 470 0036 FB68     		ldr	r3, [r7, #12]
 471 0038 DA60     		str	r2, [r3, #12]
 383:../Dave/Generated/src/CNT001/CNT001.c ****         ((uint32_t)CCU4_GIDLC_CS0I_Pos + (uint32_t)HandlePtr->CCUInUse));
 384:../Dave/Generated/src/CNT001/CNT001.c **** 
 385:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the Run bit of the Slice in TCSET Register */
 386:../Dave/Generated/src/CNT001/CNT001.c ****     SET_BIT( CCU4Ptr->TCSET,CCU4_CC4_TCSET_TRBS_Pos );
 472              		.loc 1 386 0
 473 003a 3B69     		ldr	r3, [r7, #16]
 474 003c DB68     		ldr	r3, [r3, #12]
 475 003e 43F00102 		orr	r2, r3, #1
 476 0042 3B69     		ldr	r3, [r7, #16]
 477 0044 DA60     		str	r2, [r3, #12]
 387:../Dave/Generated/src/CNT001/CNT001.c **** 
 388:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the App State to Running State */
 389:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->State = CNT001_RUNNING;
 478              		.loc 1 389 0
 479 0046 7B68     		ldr	r3, [r7, #4]
 480 0048 DB68     		ldr	r3, [r3, #12]
 481 004a 4FF00202 		mov	r2, #2
 482 004e 1A72     		strb	r2, [r3, #8]
 390:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 483              		.loc 1 390 0
 484 0050 4FF00003 		mov	r3, #0
 485 0054 7B61     		str	r3, [r7, #20]
 486              	.L14:
 391:../Dave/Generated/src/CNT001/CNT001.c ****     }
 392:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 393:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 487              		.loc 1 393 0
 488 0056 7B69     		ldr	r3, [r7, #20]
 394:../Dave/Generated/src/CNT001/CNT001.c **** }
 489              		.loc 1 394 0
 490 0058 1846     		mov	r0, r3
 491 005a 07F11C07 		add	r7, r7, #28
 492 005e BD46     		mov	sp, r7
 493 0060 80BC     		pop	{r7}
 494 0062 7047     		bx	lr
 495              		.cfi_endproc
 496              	.LFE120:
 498              		.section	.text.CNT001_Stop,"ax",%progbits
 499              		.align	2
 500              		.global	CNT001_Stop
 501              		.thumb
 502              		.thumb_func
 504              	CNT001_Stop:
 505              	.LFB121:
 395:../Dave/Generated/src/CNT001/CNT001.c **** 
 396:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function stops the CCU4_CCy slice timer and stops the app*/
 397:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_Stop(const CNT001_HandleType *HandlePtr )
 398:../Dave/Generated/src/CNT001/CNT001.c **** {
 506              		.loc 1 398 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 24
 509              		@ frame_needed = 1, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 511 0000 80B4     		push	{r7}
 512              	.LCFI12:
 513              		.cfi_def_cfa_offset 4
 514              		.cfi_offset 7, -4
 515 0002 87B0     		sub	sp, sp, #28
 516              	.LCFI13:
 517              		.cfi_def_cfa_offset 32
 518 0004 00AF     		add	r7, sp, #0
 519              	.LCFI14:
 520              		.cfi_def_cfa_register 7
 521 0006 7860     		str	r0, [r7, #4]
 399:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 522              		.loc 1 399 0
 523 0008 4FF00103 		mov	r3, #1
 524 000c 7B61     		str	r3, [r7, #20]
 400:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;              /* Pointer to the CCU4 Register set */
 401:../Dave/Generated/src/CNT001/CNT001.c **** 
 402:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_GLOBAL_TypeDef *CCU4KernelPtr; /* Pointer to the CCU4 Kernel Register set */
 403:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 525              		.loc 1 403 0
 526 000e 7B68     		ldr	r3, [r7, #4]
 527 0010 5B69     		ldr	r3, [r3, #20]
 528 0012 3B61     		str	r3, [r7, #16]
 404:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4KernelPtr = HandlePtr->CC4KernalPtr;
 529              		.loc 1 404 0
 530 0014 7B68     		ldr	r3, [r7, #4]
 531 0016 1B69     		ldr	r3, [r3, #16]
 532 0018 FB60     		str	r3, [r7, #12]
 405:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 406:../Dave/Generated/src/CNT001/CNT001.c **** 
 407:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_4_1>>>*/
 408:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State != CNT001_RUNNING)
 533              		.loc 1 408 0
 534 001a 7B68     		ldr	r3, [r7, #4]
 535 001c DB68     		ldr	r3, [r3, #12]
 536 001e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 537 0020 022B     		cmp	r3, #2
 538 0022 27D1     		bne	.L17
 409:../Dave/Generated/src/CNT001/CNT001.c ****     {
 410:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 411:../Dave/Generated/src/CNT001/CNT001.c ****     }
 412:../Dave/Generated/src/CNT001/CNT001.c ****     else
 413:../Dave/Generated/src/CNT001/CNT001.c ****     {
 414:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_4_2>>>*/
 415:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear the Run Bit  in TCCLR register */
 416:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->TCCLR |= CNT001_CCU4_TCCLR_CLEAR;
 539              		.loc 1 416 0
 540 0024 3B69     		ldr	r3, [r7, #16]
 541 0026 1B69     		ldr	r3, [r3, #16]
 542 0028 43F00702 		orr	r2, r3, #7
 543 002c 3B69     		ldr	r3, [r7, #16]
 544 002e 1A61     		str	r2, [r3, #16]
 417:../Dave/Generated/src/CNT001/CNT001.c ****     /* Clear  the Interrupts in SWR register */
 418:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4Ptr->SWR =  CNT001_ALL_CCU4_INTR_CLEAR ;
 545              		.loc 1 418 0
 546 0030 3B69     		ldr	r3, [r7, #16]
 547 0032 40F60F72 		movw	r2, #3855
 548 0036 C3F8B020 		str	r2, [r3, #176]
 419:../Dave/Generated/src/CNT001/CNT001.c **** 
 420:../Dave/Generated/src/CNT001/CNT001.c ****     /* Set the  IDLE mode in GIDLS Register */
 421:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4KernelPtr->GIDLS |= (uint32_t)(((uint32_t)0x01 << \
 549              		.loc 1 421 0
 550 003a FB68     		ldr	r3, [r7, #12]
 551 003c 9A68     		ldr	r2, [r3, #8]
 422:../Dave/Generated/src/CNT001/CNT001.c **** 	          ((uint32_t)CCU4_GIDLS_SS0I_Pos + (uint32_t)HandlePtr->CCUInUse)));
 552              		.loc 1 422 0
 553 003e 7B68     		ldr	r3, [r7, #4]
 554 0040 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 421:../Dave/Generated/src/CNT001/CNT001.c ****     CCU4KernelPtr->GIDLS |= (uint32_t)(((uint32_t)0x01 << \
 555              		.loc 1 421 0
 556 0042 4FF00101 		mov	r1, #1
 557 0046 01FA03F3 		lsl	r3, r1, r3
 558 004a 1A43     		orrs	r2, r2, r3
 559 004c FB68     		ldr	r3, [r7, #12]
 560 004e 9A60     		str	r2, [r3, #8]
 423:../Dave/Generated/src/CNT001/CNT001.c **** 
 424:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->EvtCounterValue = 0x00U;
 561              		.loc 1 424 0
 562 0050 7B68     		ldr	r3, [r7, #4]
 563 0052 DB68     		ldr	r3, [r3, #12]
 564 0054 4FF00002 		mov	r2, #0
 565 0058 1A60     		str	r2, [r3, #0]
 425:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->NewCountMatch  = 0x00U;
 566              		.loc 1 425 0
 567 005a 7B68     		ldr	r3, [r7, #4]
 568 005c DB68     		ldr	r3, [r3, #12]
 569 005e 4FF00002 		mov	r2, #0
 570 0062 5A60     		str	r2, [r3, #4]
 426:../Dave/Generated/src/CNT001/CNT001.c ****     HandlePtr->DynamicHandlePtr->State = CNT001_INITIALIZED;
 571              		.loc 1 426 0
 572 0064 7B68     		ldr	r3, [r7, #4]
 573 0066 DB68     		ldr	r3, [r3, #12]
 574 0068 4FF00102 		mov	r2, #1
 575 006c 1A72     		strb	r2, [r3, #8]
 427:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 576              		.loc 1 427 0
 577 006e 4FF00003 		mov	r3, #0
 578 0072 7B61     		str	r3, [r7, #20]
 579              	.L17:
 428:../Dave/Generated/src/CNT001/CNT001.c ****     }
 429:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 430:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 580              		.loc 1 430 0
 581 0074 7B69     		ldr	r3, [r7, #20]
 431:../Dave/Generated/src/CNT001/CNT001.c **** }
 582              		.loc 1 431 0
 583 0076 1846     		mov	r0, r3
 584 0078 07F11C07 		add	r7, r7, #28
 585 007c BD46     		mov	sp, r7
 586 007e 80BC     		pop	{r7}
 587 0080 7047     		bx	lr
 588              		.cfi_endproc
 589              	.LFE121:
 591 0082 00BF     		.section	.text.CNT001_GetEvtCountValue,"ax",%progbits
 592              		.align	2
 593              		.global	CNT001_GetEvtCountValue
 594              		.thumb
 595              		.thumb_func
 597              	CNT001_GetEvtCountValue:
 598              	.LFB122:
 432:../Dave/Generated/src/CNT001/CNT001.c **** 
 433:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function gets the timer count value which is the number of events counted till now */
 434:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_GetEvtCountValue(const CNT001_HandleType *HandlePtr, uint32_t *NumEvents )
 435:../Dave/Generated/src/CNT001/CNT001.c **** {
 599              		.loc 1 435 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 16
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0000 80B4     		push	{r7}
 605              	.LCFI15:
 606              		.cfi_def_cfa_offset 4
 607              		.cfi_offset 7, -4
 608 0002 85B0     		sub	sp, sp, #20
 609              	.LCFI16:
 610              		.cfi_def_cfa_offset 24
 611 0004 00AF     		add	r7, sp, #0
 612              	.LCFI17:
 613              		.cfi_def_cfa_register 7
 614 0006 7860     		str	r0, [r7, #4]
 615 0008 3960     		str	r1, [r7, #0]
 436:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 616              		.loc 1 436 0
 617 000a 4FF00103 		mov	r3, #1
 618 000e FB60     		str	r3, [r7, #12]
 437:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;               /* Pointer to the CCU4 Register set */
 438:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 619              		.loc 1 438 0
 620 0010 7B68     		ldr	r3, [r7, #4]
 621 0012 5B69     		ldr	r3, [r3, #20]
 622 0014 BB60     		str	r3, [r7, #8]
 439:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 440:../Dave/Generated/src/CNT001/CNT001.c ****   
 441:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_5_1>>>*/
 442:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 623              		.loc 1 442 0
 624 0016 7B68     		ldr	r3, [r7, #4]
 625 0018 DB68     		ldr	r3, [r3, #12]
 626 001a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 627 001c 002B     		cmp	r3, #0
 628 001e 0AD0     		beq	.L20
 443:../Dave/Generated/src/CNT001/CNT001.c ****     {
 444:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 445:../Dave/Generated/src/CNT001/CNT001.c ****     }
 446:../Dave/Generated/src/CNT001/CNT001.c ****     else
 447:../Dave/Generated/src/CNT001/CNT001.c ****     {
 448:../Dave/Generated/src/CNT001/CNT001.c ****     *NumEvents = RD_REG(CCU4Ptr->TIMER, (uint32_t)CCU4_CC4_TIMER_TVAL_Msk,\
 629              		.loc 1 448 0
 630 0020 BB68     		ldr	r3, [r7, #8]
 631 0022 1B6F     		ldr	r3, [r3, #112]
 632 0024 4FEA0343 		lsl	r3, r3, #16
 633 0028 4FEA1343 		lsr	r3, r3, #16
 634 002c 3A68     		ldr	r2, [r7, #0]
 635 002e 1360     		str	r3, [r2, #0]
 449:../Dave/Generated/src/CNT001/CNT001.c **** 	                                         (uint32_t)CCU4_CC4_TIMER_TVAL_Pos);
 450:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 636              		.loc 1 450 0
 637 0030 4FF00003 		mov	r3, #0
 638 0034 FB60     		str	r3, [r7, #12]
 639              	.L20:
 451:../Dave/Generated/src/CNT001/CNT001.c ****     }
 452:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 453:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 640              		.loc 1 453 0
 641 0036 FB68     		ldr	r3, [r7, #12]
 454:../Dave/Generated/src/CNT001/CNT001.c **** }
 642              		.loc 1 454 0
 643 0038 1846     		mov	r0, r3
 644 003a 07F11407 		add	r7, r7, #20
 645 003e BD46     		mov	sp, r7
 646 0040 80BC     		pop	{r7}
 647 0042 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE122:
 651              		.section	.text.CNT001_GetCountMatch,"ax",%progbits
 652              		.align	2
 653              		.global	CNT001_GetCountMatch
 654              		.thumb
 655              		.thumb_func
 657              	CNT001_GetCountMatch:
 658              	.LFB123:
 455:../Dave/Generated/src/CNT001/CNT001.c **** 
 456:../Dave/Generated/src/CNT001/CNT001.c **** 
 457:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function reads the Count Match value. At this value, compare match interrupt is generated
 458:../Dave/Generated/src/CNT001/CNT001.c ****  *  if it is enabled */
 459:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_GetCountMatch(const CNT001_HandleType *HandlePtr, uint32_t* CompRegVal)
 460:../Dave/Generated/src/CNT001/CNT001.c **** {
 659              		.loc 1 460 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 80B4     		push	{r7}
 665              	.LCFI18:
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 7, -4
 668 0002 85B0     		sub	sp, sp, #20
 669              	.LCFI19:
 670              		.cfi_def_cfa_offset 24
 671 0004 00AF     		add	r7, sp, #0
 672              	.LCFI20:
 673              		.cfi_def_cfa_register 7
 674 0006 7860     		str	r0, [r7, #4]
 675 0008 3960     		str	r1, [r7, #0]
 461:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 676              		.loc 1 461 0
 677 000a 4FF00103 		mov	r3, #1
 678 000e FB60     		str	r3, [r7, #12]
 462:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 463:../Dave/Generated/src/CNT001/CNT001.c **** 
 464:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_6_1>>>  */
 465:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 679              		.loc 1 465 0
 680 0010 7B68     		ldr	r3, [r7, #4]
 681 0012 DB68     		ldr	r3, [r3, #12]
 682 0014 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 683 0016 002B     		cmp	r3, #0
 684 0018 07D0     		beq	.L23
 466:../Dave/Generated/src/CNT001/CNT001.c ****     {
 467:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 468:../Dave/Generated/src/CNT001/CNT001.c ****     }
 469:../Dave/Generated/src/CNT001/CNT001.c ****     else
 470:../Dave/Generated/src/CNT001/CNT001.c ****     {
 471:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_6_2>>>  */
 472:../Dave/Generated/src/CNT001/CNT001.c ****     *CompRegVal = HandlePtr->DynamicHandlePtr->NewCountMatch;
 685              		.loc 1 472 0
 686 001a 7B68     		ldr	r3, [r7, #4]
 687 001c DB68     		ldr	r3, [r3, #12]
 688 001e 5A68     		ldr	r2, [r3, #4]
 689 0020 3B68     		ldr	r3, [r7, #0]
 690 0022 1A60     		str	r2, [r3, #0]
 473:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 691              		.loc 1 473 0
 692 0024 4FF00003 		mov	r3, #0
 693 0028 FB60     		str	r3, [r7, #12]
 694              	.L23:
 474:../Dave/Generated/src/CNT001/CNT001.c ****     }
 475:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 476:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 695              		.loc 1 476 0
 696 002a FB68     		ldr	r3, [r7, #12]
 477:../Dave/Generated/src/CNT001/CNT001.c **** }
 697              		.loc 1 477 0
 698 002c 1846     		mov	r0, r3
 699 002e 07F11407 		add	r7, r7, #20
 700 0032 BD46     		mov	sp, r7
 701 0034 80BC     		pop	{r7}
 702 0036 7047     		bx	lr
 703              		.cfi_endproc
 704              	.LFE123:
 706              		.section	.text.CNT001_SetCountMatch,"ax",%progbits
 707              		.align	2
 708              		.global	CNT001_SetCountMatch
 709              		.thumb
 710              		.thumb_func
 712              	CNT001_SetCountMatch:
 713              	.LFB124:
 478:../Dave/Generated/src/CNT001/CNT001.c **** 
 479:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function sets the event Count Match. This is the compare register value of the CCU4x_CCy sl
 480:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_SetCountMatch(const CNT001_HandleType *HandlePtr, uint32_t CountMatch)
 481:../Dave/Generated/src/CNT001/CNT001.c **** {
 714              		.loc 1 481 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 24
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              	.LCFI21:
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 7, -4
 723 0002 87B0     		sub	sp, sp, #28
 724              	.LCFI22:
 725              		.cfi_def_cfa_offset 32
 726 0004 00AF     		add	r7, sp, #0
 727              	.LCFI23:
 728              		.cfi_def_cfa_register 7
 729 0006 7860     		str	r0, [r7, #4]
 730 0008 3960     		str	r1, [r7, #0]
 482:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 731              		.loc 1 482 0
 732 000a 4FF00103 		mov	r3, #1
 733 000e 7B61     		str	r3, [r7, #20]
 483:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;            /* Pointer to the CCU4 Register set */
 484:../Dave/Generated/src/CNT001/CNT001.c **** 
 485:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_GLOBAL_TypeDef *CCU4KernelPtr; /* Pointer to the CCU4 Kernel Register set */
 486:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 734              		.loc 1 486 0
 735 0010 7B68     		ldr	r3, [r7, #4]
 736 0012 5B69     		ldr	r3, [r3, #20]
 737 0014 3B61     		str	r3, [r7, #16]
 487:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4KernelPtr = HandlePtr->CC4KernalPtr;
 738              		.loc 1 487 0
 739 0016 7B68     		ldr	r3, [r7, #4]
 740 0018 1B69     		ldr	r3, [r3, #16]
 741 001a FB60     		str	r3, [r7, #12]
 488:../Dave/Generated/src/CNT001/CNT001.c **** 
 489:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 490:../Dave/Generated/src/CNT001/CNT001.c **** 
 491:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_7_1>>>*/
 492:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State != CNT001_INITIALIZED)
 742              		.loc 1 492 0
 743 001c 7B68     		ldr	r3, [r7, #4]
 744 001e DB68     		ldr	r3, [r3, #12]
 745 0020 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 746 0022 012B     		cmp	r3, #1
 747 0024 2AD1     		bne	.L26
 493:../Dave/Generated/src/CNT001/CNT001.c ****     {
 494:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 495:../Dave/Generated/src/CNT001/CNT001.c ****     }
 496:../Dave/Generated/src/CNT001/CNT001.c ****     else if( CountMatch > CNT001_EVENT_COUNT_MAX   )
 748              		.loc 1 496 0
 749 0026 3A68     		ldr	r2, [r7, #0]
 750 0028 4FF6FF73 		movw	r3, #65535
 751 002c 9A42     		cmp	r2, r3
 752 002e 03D9     		bls	.L27
 497:../Dave/Generated/src/CNT001/CNT001.c ****     {
 498:../Dave/Generated/src/CNT001/CNT001.c ****       status = (uint32_t)CNT001_OUT_OF_RANGE_ERROR;
 753              		.loc 1 498 0
 754 0030 4FF00303 		mov	r3, #3
 755 0034 7B61     		str	r3, [r7, #20]
 756 0036 21E0     		b	.L26
 757              	.L27:
 499:../Dave/Generated/src/CNT001/CNT001.c ****     }
 500:../Dave/Generated/src/CNT001/CNT001.c ****     else
 501:../Dave/Generated/src/CNT001/CNT001.c ****     {
 502:../Dave/Generated/src/CNT001/CNT001.c ****       /*<<<DD_CNT001_API_7_5>>>*/
 503:../Dave/Generated/src/CNT001/CNT001.c ****       /* Update the Count match value in CRS Register */
 504:../Dave/Generated/src/CNT001/CNT001.c ****       WR_REG(CCU4Ptr->CRS, (uint32_t)CCU4_CC4_CRS_CRS_Msk, \
 758              		.loc 1 504 0
 759 0038 3B68     		ldr	r3, [r7, #0]
 760 003a 4FEA0342 		lsl	r2, r3, #16
 761 003e 4FEA1242 		lsr	r2, r2, #16
 762 0042 3B69     		ldr	r3, [r7, #16]
 763 0044 DB6B     		ldr	r3, [r3, #60]
 764 0046 4FEA1343 		lsr	r3, r3, #16
 765 004a 4FEA0343 		lsl	r3, r3, #16
 766 004e 1A43     		orrs	r2, r2, r3
 767 0050 3B69     		ldr	r3, [r7, #16]
 768 0052 DA63     		str	r2, [r3, #60]
 505:../Dave/Generated/src/CNT001/CNT001.c **** 	                                 (uint32_t)CCU4_CC4_CRS_CRS_Pos,CountMatch);
 506:../Dave/Generated/src/CNT001/CNT001.c ****   
 507:../Dave/Generated/src/CNT001/CNT001.c ****       /* Request SW Shadow Transfer */
 508:../Dave/Generated/src/CNT001/CNT001.c ****       CCU4KernelPtr->GCSS |=
 769              		.loc 1 508 0
 770 0054 FB68     		ldr	r3, [r7, #12]
 771 0056 1A69     		ldr	r2, [r3, #16]
 509:../Dave/Generated/src/CNT001/CNT001.c ****           (uint32_t)((0x01UL << ((uint32_t)4 * (uint32_t)HandlePtr->CCUInUse)));
 772              		.loc 1 509 0
 773 0058 7B68     		ldr	r3, [r7, #4]
 774 005a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 775 005c 4FEA8303 		lsl	r3, r3, #2
 776 0060 4FF00101 		mov	r1, #1
 777 0064 01FA03F3 		lsl	r3, r1, r3
 508:../Dave/Generated/src/CNT001/CNT001.c ****       CCU4KernelPtr->GCSS |=
 778              		.loc 1 508 0
 779 0068 1A43     		orrs	r2, r2, r3
 780 006a FB68     		ldr	r3, [r7, #12]
 781 006c 1A61     		str	r2, [r3, #16]
 510:../Dave/Generated/src/CNT001/CNT001.c ****   
 511:../Dave/Generated/src/CNT001/CNT001.c ****       /* Update the Dynamic HandlePtr */
 512:../Dave/Generated/src/CNT001/CNT001.c ****       HandlePtr->DynamicHandlePtr ->NewCountMatch = CountMatch;
 782              		.loc 1 512 0
 783 006e 7B68     		ldr	r3, [r7, #4]
 784 0070 DB68     		ldr	r3, [r3, #12]
 785 0072 3A68     		ldr	r2, [r7, #0]
 786 0074 5A60     		str	r2, [r3, #4]
 513:../Dave/Generated/src/CNT001/CNT001.c ****       status = (uint32_t)DAVEApp_SUCCESS;
 787              		.loc 1 513 0
 788 0076 4FF00003 		mov	r3, #0
 789 007a 7B61     		str	r3, [r7, #20]
 790              	.L26:
 514:../Dave/Generated/src/CNT001/CNT001.c ****     }
 515:../Dave/Generated/src/CNT001/CNT001.c **** 
 516:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 517:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 791              		.loc 1 517 0
 792 007c 7B69     		ldr	r3, [r7, #20]
 518:../Dave/Generated/src/CNT001/CNT001.c **** }
 793              		.loc 1 518 0
 794 007e 1846     		mov	r0, r3
 795 0080 07F11C07 		add	r7, r7, #28
 796 0084 BD46     		mov	sp, r7
 797 0086 80BC     		pop	{r7}
 798 0088 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE124:
 802 008a 00BF     		.section	.text.CNT001_GetTimerStatus,"ax",%progbits
 803              		.align	2
 804              		.global	CNT001_GetTimerStatus
 805              		.thumb
 806              		.thumb_func
 808              	CNT001_GetTimerStatus:
 809              	.LFB125:
 519:../Dave/Generated/src/CNT001/CNT001.c **** 
 520:../Dave/Generated/src/CNT001/CNT001.c **** /* This Function reads the timer status */
 521:../Dave/Generated/src/CNT001/CNT001.c **** status_t  CNT001_GetTimerStatus(const CNT001_HandleType *HandlePtr, uint32_t* Status)
 522:../Dave/Generated/src/CNT001/CNT001.c **** {
 810              		.loc 1 522 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 16
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 80B4     		push	{r7}
 816              	.LCFI24:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 7, -4
 819 0002 85B0     		sub	sp, sp, #20
 820              	.LCFI25:
 821              		.cfi_def_cfa_offset 24
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI26:
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 826 0008 3960     		str	r1, [r7, #0]
 523:../Dave/Generated/src/CNT001/CNT001.c ****   status_t status = (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 827              		.loc 1 523 0
 828 000a 4FF00103 		mov	r3, #1
 829 000e FB60     		str	r3, [r7, #12]
 524:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef *CCU4Ptr;                 /* Pointer to the CCU4 Register set */
 525:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4Ptr = HandlePtr->CC4Ptr;
 830              		.loc 1 525 0
 831 0010 7B68     		ldr	r3, [r7, #4]
 832 0012 5B69     		ldr	r3, [r3, #20]
 833 0014 BB60     		str	r3, [r7, #8]
 526:../Dave/Generated/src/CNT001/CNT001.c **** 
 527:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 528:../Dave/Generated/src/CNT001/CNT001.c **** 
 529:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_8_1>>> */
 530:../Dave/Generated/src/CNT001/CNT001.c ****     if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 834              		.loc 1 530 0
 835 0016 7B68     		ldr	r3, [r7, #4]
 836 0018 DB68     		ldr	r3, [r3, #12]
 837 001a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 838 001c 002B     		cmp	r3, #0
 839 001e 08D0     		beq	.L30
 531:../Dave/Generated/src/CNT001/CNT001.c ****     {
 532:../Dave/Generated/src/CNT001/CNT001.c ****       DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 533:../Dave/Generated/src/CNT001/CNT001.c ****     }
 534:../Dave/Generated/src/CNT001/CNT001.c ****     else
 535:../Dave/Generated/src/CNT001/CNT001.c ****     {
 536:../Dave/Generated/src/CNT001/CNT001.c ****     /*<<<DD_CNT001_API_8_2>>> */
 537:../Dave/Generated/src/CNT001/CNT001.c ****     /* Get the Status of the Timer */
 538:../Dave/Generated/src/CNT001/CNT001.c ****     *Status = RD_REG( CCU4Ptr->TCST, (uint32_t)CCU4_CC4_TCST_TRB_Msk,\
 840              		.loc 1 538 0
 841 0020 BB68     		ldr	r3, [r7, #8]
 842 0022 9B68     		ldr	r3, [r3, #8]
 843 0024 03F00102 		and	r2, r3, #1
 844 0028 3B68     		ldr	r3, [r7, #0]
 845 002a 1A60     		str	r2, [r3, #0]
 539:../Dave/Generated/src/CNT001/CNT001.c **** 	                                           (uint32_t)CCU4_CC4_TCST_TRB_Pos);
 540:../Dave/Generated/src/CNT001/CNT001.c ****     status = (uint32_t)DAVEApp_SUCCESS;
 846              		.loc 1 540 0
 847 002c 4FF00003 		mov	r3, #0
 848 0030 FB60     		str	r3, [r7, #12]
 849              	.L30:
 541:../Dave/Generated/src/CNT001/CNT001.c ****     }
 542:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 543:../Dave/Generated/src/CNT001/CNT001.c ****   return status;
 850              		.loc 1 543 0
 851 0032 FB68     		ldr	r3, [r7, #12]
 544:../Dave/Generated/src/CNT001/CNT001.c **** }
 852              		.loc 1 544 0
 853 0034 1846     		mov	r0, r3
 854 0036 07F11407 		add	r7, r7, #20
 855 003a BD46     		mov	sp, r7
 856 003c 80BC     		pop	{r7}
 857 003e 7047     		bx	lr
 858              		.cfi_endproc
 859              	.LFE125:
 861              		.section	.text.CNT001_EnableEvent,"ax",%progbits
 862              		.align	2
 863              		.global	CNT001_EnableEvent
 864              		.thumb
 865              		.thumb_func
 867              	CNT001_EnableEvent:
 868              	.LFB126:
 545:../Dave/Generated/src/CNT001/CNT001.c **** 
 546:../Dave/Generated/src/CNT001/CNT001.c **** /* This function enables the given event */
 547:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_EnableEvent
 548:../Dave/Generated/src/CNT001/CNT001.c **** (
 549:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_HandleType * HandlePtr,
 550:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_EventNameType Event
 551:../Dave/Generated/src/CNT001/CNT001.c **** )
 552:../Dave/Generated/src/CNT001/CNT001.c **** {
 869              		.loc 1 552 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 16
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 0000 80B4     		push	{r7}
 875              	.LCFI27:
 876              		.cfi_def_cfa_offset 4
 877              		.cfi_offset 7, -4
 878 0002 85B0     		sub	sp, sp, #20
 879              	.LCFI28:
 880              		.cfi_def_cfa_offset 24
 881 0004 00AF     		add	r7, sp, #0
 882              	.LCFI29:
 883              		.cfi_def_cfa_register 7
 884 0006 7860     		str	r0, [r7, #4]
 885 0008 0B46     		mov	r3, r1
 886 000a FB70     		strb	r3, [r7, #3]
 553:../Dave/Generated/src/CNT001/CNT001.c ****   status_t Status =  (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 887              		.loc 1 553 0
 888 000c 4FF00103 		mov	r3, #1
 889 0010 FB60     		str	r3, [r7, #12]
 554:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef* CC4yRegsPtr = HandlePtr->CC4Ptr;
 890              		.loc 1 554 0
 891 0012 7B68     		ldr	r3, [r7, #4]
 892 0014 5B69     		ldr	r3, [r3, #20]
 893 0016 BB60     		str	r3, [r7, #8]
 555:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 556:../Dave/Generated/src/CNT001/CNT001.c **** 
 557:../Dave/Generated/src/CNT001/CNT001.c ****   if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 894              		.loc 1 557 0
 895 0018 7B68     		ldr	r3, [r7, #4]
 896 001a DB68     		ldr	r3, [r3, #12]
 897 001c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 898 001e 002B     		cmp	r3, #0
 899 0020 0ED0     		beq	.L33
 558:../Dave/Generated/src/CNT001/CNT001.c ****   {
 559:../Dave/Generated/src/CNT001/CNT001.c **** 	DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 560:../Dave/Generated/src/CNT001/CNT001.c ****   }
 561:../Dave/Generated/src/CNT001/CNT001.c ****   else
 562:../Dave/Generated/src/CNT001/CNT001.c ****   {
 563:../Dave/Generated/src/CNT001/CNT001.c ****     SET_BIT(CC4yRegsPtr->INTE, (uint8_t) Event);
 900              		.loc 1 563 0
 901 0022 BB68     		ldr	r3, [r7, #8]
 902 0024 D3F8A420 		ldr	r2, [r3, #164]
 903 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 904 002a 4FF00101 		mov	r1, #1
 905 002e 01FA03F3 		lsl	r3, r1, r3
 906 0032 1A43     		orrs	r2, r2, r3
 907 0034 BB68     		ldr	r3, [r7, #8]
 908 0036 C3F8A420 		str	r2, [r3, #164]
 564:../Dave/Generated/src/CNT001/CNT001.c ****     Status =  (uint32_t)DAVEApp_SUCCESS;
 909              		.loc 1 564 0
 910 003a 4FF00003 		mov	r3, #0
 911 003e FB60     		str	r3, [r7, #12]
 912              	.L33:
 565:../Dave/Generated/src/CNT001/CNT001.c ****   }
 566:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 567:../Dave/Generated/src/CNT001/CNT001.c ****   return (Status);
 913              		.loc 1 567 0
 914 0040 FB68     		ldr	r3, [r7, #12]
 568:../Dave/Generated/src/CNT001/CNT001.c **** }
 915              		.loc 1 568 0
 916 0042 1846     		mov	r0, r3
 917 0044 07F11407 		add	r7, r7, #20
 918 0048 BD46     		mov	sp, r7
 919 004a 80BC     		pop	{r7}
 920 004c 7047     		bx	lr
 921              		.cfi_endproc
 922              	.LFE126:
 924 004e 00BF     		.section	.text.CNT001_DisableEvent,"ax",%progbits
 925              		.align	2
 926              		.global	CNT001_DisableEvent
 927              		.thumb
 928              		.thumb_func
 930              	CNT001_DisableEvent:
 931              	.LFB127:
 569:../Dave/Generated/src/CNT001/CNT001.c **** 
 570:../Dave/Generated/src/CNT001/CNT001.c **** /**
 571:../Dave/Generated/src/CNT001/CNT001.c ****  * This function clears the enable event bit for the event given in the argument.
 572:../Dave/Generated/src/CNT001/CNT001.c ****  */
 573:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_DisableEvent
 574:../Dave/Generated/src/CNT001/CNT001.c **** (
 575:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_HandleType * HandlePtr,
 576:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_EventNameType Event
 577:../Dave/Generated/src/CNT001/CNT001.c **** )
 578:../Dave/Generated/src/CNT001/CNT001.c **** {
 932              		.loc 1 578 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 16
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI30:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 85B0     		sub	sp, sp, #20
 942              	.LCFI31:
 943              		.cfi_def_cfa_offset 24
 944 0004 00AF     		add	r7, sp, #0
 945              	.LCFI32:
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 948 0008 0B46     		mov	r3, r1
 949 000a FB70     		strb	r3, [r7, #3]
 579:../Dave/Generated/src/CNT001/CNT001.c ****   status_t Status = (uint32_t) CNT001_OPER_NOT_ALLOWED_ERROR;
 950              		.loc 1 579 0
 951 000c 4FF00103 		mov	r3, #1
 952 0010 FB60     		str	r3, [r7, #12]
 580:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef* CC4yRegsPtr = HandlePtr->CC4Ptr;
 953              		.loc 1 580 0
 954 0012 7B68     		ldr	r3, [r7, #4]
 955 0014 5B69     		ldr	r3, [r3, #20]
 956 0016 BB60     		str	r3, [r7, #8]
 581:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 582:../Dave/Generated/src/CNT001/CNT001.c **** 
 583:../Dave/Generated/src/CNT001/CNT001.c ****   if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 957              		.loc 1 583 0
 958 0018 7B68     		ldr	r3, [r7, #4]
 959 001a DB68     		ldr	r3, [r3, #12]
 960 001c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 961 001e 002B     		cmp	r3, #0
 962 0020 10D0     		beq	.L36
 584:../Dave/Generated/src/CNT001/CNT001.c ****   {
 585:../Dave/Generated/src/CNT001/CNT001.c **** 	DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 586:../Dave/Generated/src/CNT001/CNT001.c ****   }
 587:../Dave/Generated/src/CNT001/CNT001.c ****   else
 588:../Dave/Generated/src/CNT001/CNT001.c ****   {
 589:../Dave/Generated/src/CNT001/CNT001.c ****     CLR_BIT(CC4yRegsPtr->INTE, (uint8_t) Event);
 963              		.loc 1 589 0
 964 0022 BB68     		ldr	r3, [r7, #8]
 965 0024 D3F8A420 		ldr	r2, [r3, #164]
 966 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 967 002a 4FF00101 		mov	r1, #1
 968 002e 01FA03F3 		lsl	r3, r1, r3
 969 0032 6FEA0303 		mvn	r3, r3
 970 0036 1A40     		ands	r2, r2, r3
 971 0038 BB68     		ldr	r3, [r7, #8]
 972 003a C3F8A420 		str	r2, [r3, #164]
 590:../Dave/Generated/src/CNT001/CNT001.c ****     Status = (uint32_t) DAVEApp_SUCCESS;
 973              		.loc 1 590 0
 974 003e 4FF00003 		mov	r3, #0
 975 0042 FB60     		str	r3, [r7, #12]
 976              	.L36:
 591:../Dave/Generated/src/CNT001/CNT001.c ****   }
 592:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 593:../Dave/Generated/src/CNT001/CNT001.c ****   return (Status);
 977              		.loc 1 593 0
 978 0044 FB68     		ldr	r3, [r7, #12]
 594:../Dave/Generated/src/CNT001/CNT001.c **** }
 979              		.loc 1 594 0
 980 0046 1846     		mov	r0, r3
 981 0048 07F11407 		add	r7, r7, #20
 982 004c BD46     		mov	sp, r7
 983 004e 80BC     		pop	{r7}
 984 0050 7047     		bx	lr
 985              		.cfi_endproc
 986              	.LFE127:
 988 0052 00BF     		.section	.text.CNT001_ClearPendingEvent,"ax",%progbits
 989              		.align	2
 990              		.global	CNT001_ClearPendingEvent
 991              		.thumb
 992              		.thumb_func
 994              	CNT001_ClearPendingEvent:
 995              	.LFB128:
 595:../Dave/Generated/src/CNT001/CNT001.c **** 
 596:../Dave/Generated/src/CNT001/CNT001.c **** /**
 597:../Dave/Generated/src/CNT001/CNT001.c ****  * This function clears the interrupt by software.
 598:../Dave/Generated/src/CNT001/CNT001.c ****  */
 599:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_ClearPendingEvent
 600:../Dave/Generated/src/CNT001/CNT001.c **** (
 601:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_HandleType * HandlePtr,
 602:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_EventNameType Event
 603:../Dave/Generated/src/CNT001/CNT001.c **** )
 604:../Dave/Generated/src/CNT001/CNT001.c **** {
 996              		.loc 1 604 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 16
 999              		@ frame_needed = 1, uses_anonymous_args = 0
 1000              		@ link register save eliminated.
 1001 0000 80B4     		push	{r7}
 1002              	.LCFI33:
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 0002 85B0     		sub	sp, sp, #20
 1006              	.LCFI34:
 1007              		.cfi_def_cfa_offset 24
 1008 0004 00AF     		add	r7, sp, #0
 1009              	.LCFI35:
 1010              		.cfi_def_cfa_register 7
 1011 0006 7860     		str	r0, [r7, #4]
 1012 0008 0B46     		mov	r3, r1
 1013 000a FB70     		strb	r3, [r7, #3]
 605:../Dave/Generated/src/CNT001/CNT001.c ****   status_t Status =  (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 1014              		.loc 1 605 0
 1015 000c 4FF00103 		mov	r3, #1
 1016 0010 FB60     		str	r3, [r7, #12]
 606:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef* CC4yRegsPtr = HandlePtr->CC4Ptr;
 1017              		.loc 1 606 0
 1018 0012 7B68     		ldr	r3, [r7, #4]
 1019 0014 5B69     		ldr	r3, [r3, #20]
 1020 0016 BB60     		str	r3, [r7, #8]
 607:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 608:../Dave/Generated/src/CNT001/CNT001.c **** 
 609:../Dave/Generated/src/CNT001/CNT001.c ****   if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 1021              		.loc 1 609 0
 1022 0018 7B68     		ldr	r3, [r7, #4]
 1023 001a DB68     		ldr	r3, [r3, #12]
 1024 001c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1025 001e 002B     		cmp	r3, #0
 1026 0020 0ED0     		beq	.L39
 610:../Dave/Generated/src/CNT001/CNT001.c ****   {
 611:../Dave/Generated/src/CNT001/CNT001.c **** 	DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 612:../Dave/Generated/src/CNT001/CNT001.c ****   }
 613:../Dave/Generated/src/CNT001/CNT001.c ****   else
 614:../Dave/Generated/src/CNT001/CNT001.c ****   {
 615:../Dave/Generated/src/CNT001/CNT001.c ****     SET_BIT(CC4yRegsPtr->SWR,  (uint8_t)Event);
 1027              		.loc 1 615 0
 1028 0022 BB68     		ldr	r3, [r7, #8]
 1029 0024 D3F8B020 		ldr	r2, [r3, #176]
 1030 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1031 002a 4FF00101 		mov	r1, #1
 1032 002e 01FA03F3 		lsl	r3, r1, r3
 1033 0032 1A43     		orrs	r2, r2, r3
 1034 0034 BB68     		ldr	r3, [r7, #8]
 1035 0036 C3F8B020 		str	r2, [r3, #176]
 616:../Dave/Generated/src/CNT001/CNT001.c ****     Status =  (uint32_t)DAVEApp_SUCCESS;
 1036              		.loc 1 616 0
 1037 003a 4FF00003 		mov	r3, #0
 1038 003e FB60     		str	r3, [r7, #12]
 1039              	.L39:
 617:../Dave/Generated/src/CNT001/CNT001.c ****   }
 618:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 619:../Dave/Generated/src/CNT001/CNT001.c ****   return (Status);
 1040              		.loc 1 619 0
 1041 0040 FB68     		ldr	r3, [r7, #12]
 620:../Dave/Generated/src/CNT001/CNT001.c **** }
 1042              		.loc 1 620 0
 1043 0042 1846     		mov	r0, r3
 1044 0044 07F11407 		add	r7, r7, #20
 1045 0048 BD46     		mov	sp, r7
 1046 004a 80BC     		pop	{r7}
 1047 004c 7047     		bx	lr
 1048              		.cfi_endproc
 1049              	.LFE128:
 1051 004e 00BF     		.section	.text.CNT001_SetPendingEvent,"ax",%progbits
 1052              		.align	2
 1053              		.global	CNT001_SetPendingEvent
 1054              		.thumb
 1055              		.thumb_func
 1057              	CNT001_SetPendingEvent:
 1058              	.LFB129:
 621:../Dave/Generated/src/CNT001/CNT001.c **** 
 622:../Dave/Generated/src/CNT001/CNT001.c **** /**
 623:../Dave/Generated/src/CNT001/CNT001.c ****  * This function sets the interrupt by software Interrupt pulse is generated
 624:../Dave/Generated/src/CNT001/CNT001.c ****  * if source is enabled.
 625:../Dave/Generated/src/CNT001/CNT001.c ****  */
 626:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_SetPendingEvent
 627:../Dave/Generated/src/CNT001/CNT001.c **** (
 628:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_HandleType * HandlePtr,
 629:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_EventNameType Event
 630:../Dave/Generated/src/CNT001/CNT001.c **** )
 631:../Dave/Generated/src/CNT001/CNT001.c **** {
 1059              		.loc 1 631 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 16
 1062              		@ frame_needed = 1, uses_anonymous_args = 0
 1063              		@ link register save eliminated.
 1064 0000 80B4     		push	{r7}
 1065              	.LCFI36:
 1066              		.cfi_def_cfa_offset 4
 1067              		.cfi_offset 7, -4
 1068 0002 85B0     		sub	sp, sp, #20
 1069              	.LCFI37:
 1070              		.cfi_def_cfa_offset 24
 1071 0004 00AF     		add	r7, sp, #0
 1072              	.LCFI38:
 1073              		.cfi_def_cfa_register 7
 1074 0006 7860     		str	r0, [r7, #4]
 1075 0008 0B46     		mov	r3, r1
 1076 000a FB70     		strb	r3, [r7, #3]
 632:../Dave/Generated/src/CNT001/CNT001.c ****   status_t Status =  (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 1077              		.loc 1 632 0
 1078 000c 4FF00103 		mov	r3, #1
 1079 0010 FB60     		str	r3, [r7, #12]
 633:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef* CC4yRegsPtr = HandlePtr->CC4Ptr;
 1080              		.loc 1 633 0
 1081 0012 7B68     		ldr	r3, [r7, #4]
 1082 0014 5B69     		ldr	r3, [r3, #20]
 1083 0016 BB60     		str	r3, [r7, #8]
 634:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 635:../Dave/Generated/src/CNT001/CNT001.c **** 
 636:../Dave/Generated/src/CNT001/CNT001.c ****   if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 1084              		.loc 1 636 0
 1085 0018 7B68     		ldr	r3, [r7, #4]
 1086 001a DB68     		ldr	r3, [r3, #12]
 1087 001c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1088 001e 002B     		cmp	r3, #0
 1089 0020 0ED0     		beq	.L42
 637:../Dave/Generated/src/CNT001/CNT001.c ****   {
 638:../Dave/Generated/src/CNT001/CNT001.c **** 	DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 639:../Dave/Generated/src/CNT001/CNT001.c ****   }
 640:../Dave/Generated/src/CNT001/CNT001.c ****   else
 641:../Dave/Generated/src/CNT001/CNT001.c ****   {
 642:../Dave/Generated/src/CNT001/CNT001.c ****     SET_BIT(CC4yRegsPtr->SWS,  (uint8_t)Event);
 1090              		.loc 1 642 0
 1091 0022 BB68     		ldr	r3, [r7, #8]
 1092 0024 D3F8AC20 		ldr	r2, [r3, #172]
 1093 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1094 002a 4FF00101 		mov	r1, #1
 1095 002e 01FA03F3 		lsl	r3, r1, r3
 1096 0032 1A43     		orrs	r2, r2, r3
 1097 0034 BB68     		ldr	r3, [r7, #8]
 1098 0036 C3F8AC20 		str	r2, [r3, #172]
 643:../Dave/Generated/src/CNT001/CNT001.c ****     Status =  (uint32_t)DAVEApp_SUCCESS;
 1099              		.loc 1 643 0
 1100 003a 4FF00003 		mov	r3, #0
 1101 003e FB60     		str	r3, [r7, #12]
 1102              	.L42:
 644:../Dave/Generated/src/CNT001/CNT001.c ****   }
 645:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 646:../Dave/Generated/src/CNT001/CNT001.c ****   return (Status);
 1103              		.loc 1 646 0
 1104 0040 FB68     		ldr	r3, [r7, #12]
 647:../Dave/Generated/src/CNT001/CNT001.c **** }
 1105              		.loc 1 647 0
 1106 0042 1846     		mov	r0, r3
 1107 0044 07F11407 		add	r7, r7, #20
 1108 0048 BD46     		mov	sp, r7
 1109 004a 80BC     		pop	{r7}
 1110 004c 7047     		bx	lr
 1111              		.cfi_endproc
 1112              	.LFE129:
 1114 004e 00BF     		.section	.text.CNT001_GetPendingEvent,"ax",%progbits
 1115              		.align	2
 1116              		.global	CNT001_GetPendingEvent
 1117              		.thumb
 1118              		.thumb_func
 1120              	CNT001_GetPendingEvent:
 1121              	.LFB130:
 648:../Dave/Generated/src/CNT001/CNT001.c **** 
 649:../Dave/Generated/src/CNT001/CNT001.c **** /**
 650:../Dave/Generated/src/CNT001/CNT001.c ****  * This function checks whether given interrupt is set
 651:../Dave/Generated/src/CNT001/CNT001.c ****  */
 652:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_GetPendingEvent
 653:../Dave/Generated/src/CNT001/CNT001.c **** (
 654:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_HandleType * HandlePtr,
 655:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_EventNameType Event,
 656:../Dave/Generated/src/CNT001/CNT001.c ****     uint8_t* EvtStatus
 657:../Dave/Generated/src/CNT001/CNT001.c **** )
 658:../Dave/Generated/src/CNT001/CNT001.c **** {
 1122              		.loc 1 658 0
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 24
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126              		@ link register save eliminated.
 1127 0000 80B4     		push	{r7}
 1128              	.LCFI39:
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 87B0     		sub	sp, sp, #28
 1132              	.LCFI40:
 1133              		.cfi_def_cfa_offset 32
 1134 0004 00AF     		add	r7, sp, #0
 1135              	.LCFI41:
 1136              		.cfi_def_cfa_register 7
 1137 0006 F860     		str	r0, [r7, #12]
 1138 0008 0B46     		mov	r3, r1
 1139 000a 7A60     		str	r2, [r7, #4]
 1140 000c FB72     		strb	r3, [r7, #11]
 659:../Dave/Generated/src/CNT001/CNT001.c ****   status_t Status =  (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 1141              		.loc 1 659 0
 1142 000e 4FF00103 		mov	r3, #1
 1143 0012 7B61     		str	r3, [r7, #20]
 660:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef* CC4yRegsPtr = HandlePtr->CC4Ptr;
 1144              		.loc 1 660 0
 1145 0014 FB68     		ldr	r3, [r7, #12]
 1146 0016 5B69     		ldr	r3, [r3, #20]
 1147 0018 3B61     		str	r3, [r7, #16]
 661:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 662:../Dave/Generated/src/CNT001/CNT001.c **** 
 663:../Dave/Generated/src/CNT001/CNT001.c ****   if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 1148              		.loc 1 663 0
 1149 001a FB68     		ldr	r3, [r7, #12]
 1150 001c DB68     		ldr	r3, [r3, #12]
 1151 001e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1152 0020 002B     		cmp	r3, #0
 1153 0022 19D0     		beq	.L45
 664:../Dave/Generated/src/CNT001/CNT001.c ****   {
 665:../Dave/Generated/src/CNT001/CNT001.c **** 	 DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 666:../Dave/Generated/src/CNT001/CNT001.c ****   }
 667:../Dave/Generated/src/CNT001/CNT001.c ****   else
 668:../Dave/Generated/src/CNT001/CNT001.c ****   {
 669:../Dave/Generated/src/CNT001/CNT001.c ****     if(RD_REG(CC4yRegsPtr->INTS, ((uint32_t)0x01<<(uint8_t)Event),(uint8_t)Event))
 1154              		.loc 1 669 0
 1155 0024 3B69     		ldr	r3, [r7, #16]
 1156 0026 D3F8A020 		ldr	r2, [r3, #160]
 1157 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1158 002c 4FF00101 		mov	r1, #1
 1159 0030 01FA03F3 		lsl	r3, r1, r3
 1160 0034 1A40     		ands	r2, r2, r3
 1161 0036 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1162 0038 22FA03F3 		lsr	r3, r2, r3
 1163 003c 002B     		cmp	r3, #0
 1164 003e 04D0     		beq	.L46
 670:../Dave/Generated/src/CNT001/CNT001.c ****     {
 671:../Dave/Generated/src/CNT001/CNT001.c ****       *EvtStatus = (uint8_t)SET;
 1165              		.loc 1 671 0
 1166 0040 7B68     		ldr	r3, [r7, #4]
 1167 0042 4FF00102 		mov	r2, #1
 1168 0046 1A70     		strb	r2, [r3, #0]
 1169 0048 03E0     		b	.L47
 1170              	.L46:
 672:../Dave/Generated/src/CNT001/CNT001.c ****     }
 673:../Dave/Generated/src/CNT001/CNT001.c ****     else
 674:../Dave/Generated/src/CNT001/CNT001.c ****     {
 675:../Dave/Generated/src/CNT001/CNT001.c ****       *EvtStatus = (uint8_t)RESET;
 1171              		.loc 1 675 0
 1172 004a 7B68     		ldr	r3, [r7, #4]
 1173 004c 4FF00002 		mov	r2, #0
 1174 0050 1A70     		strb	r2, [r3, #0]
 1175              	.L47:
 676:../Dave/Generated/src/CNT001/CNT001.c ****     }
 677:../Dave/Generated/src/CNT001/CNT001.c ****     /* *EvtStatus = RD_REG(CC4yRegsPtr->INTS,  (0x01<<(uint8_t)Event),(uint8_t)Event) ?\
 678:../Dave/Generated/src/CNT001/CNT001.c **** 	 (uint8_t)SET : (uint8_t)RESET;	*/
 679:../Dave/Generated/src/CNT001/CNT001.c ****     Status =  (uint32_t)DAVEApp_SUCCESS;
 1176              		.loc 1 679 0
 1177 0052 4FF00003 		mov	r3, #0
 1178 0056 7B61     		str	r3, [r7, #20]
 1179              	.L45:
 680:../Dave/Generated/src/CNT001/CNT001.c ****   }
 681:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 682:../Dave/Generated/src/CNT001/CNT001.c ****   return (Status);
 1180              		.loc 1 682 0
 1181 0058 7B69     		ldr	r3, [r7, #20]
 683:../Dave/Generated/src/CNT001/CNT001.c **** }
 1182              		.loc 1 683 0
 1183 005a 1846     		mov	r0, r3
 1184 005c 07F11C07 		add	r7, r7, #28
 1185 0060 BD46     		mov	sp, r7
 1186 0062 80BC     		pop	{r7}
 1187 0064 7047     		bx	lr
 1188              		.cfi_endproc
 1189              	.LFE130:
 1191 0066 00BF     		.section	.text.CNT001_ResetCounter,"ax",%progbits
 1192              		.align	2
 1193              		.global	CNT001_ResetCounter
 1194              		.thumb
 1195              		.thumb_func
 1197              	CNT001_ResetCounter:
 1198              	.LFB131:
 684:../Dave/Generated/src/CNT001/CNT001.c **** 
 685:../Dave/Generated/src/CNT001/CNT001.c **** /**
 686:../Dave/Generated/src/CNT001/CNT001.c ****  * This function resets the timer to zero.
 687:../Dave/Generated/src/CNT001/CNT001.c ****  */
 688:../Dave/Generated/src/CNT001/CNT001.c **** status_t CNT001_ResetCounter
 689:../Dave/Generated/src/CNT001/CNT001.c **** (
 690:../Dave/Generated/src/CNT001/CNT001.c ****     const CNT001_HandleType * HandlePtr
 691:../Dave/Generated/src/CNT001/CNT001.c **** )
 692:../Dave/Generated/src/CNT001/CNT001.c **** {
 1199              		.loc 1 692 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 16
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203              		@ link register save eliminated.
 1204 0000 80B4     		push	{r7}
 1205              	.LCFI42:
 1206              		.cfi_def_cfa_offset 4
 1207              		.cfi_offset 7, -4
 1208 0002 85B0     		sub	sp, sp, #20
 1209              	.LCFI43:
 1210              		.cfi_def_cfa_offset 24
 1211 0004 00AF     		add	r7, sp, #0
 1212              	.LCFI44:
 1213              		.cfi_def_cfa_register 7
 1214 0006 7860     		str	r0, [r7, #4]
 693:../Dave/Generated/src/CNT001/CNT001.c ****   status_t Status =  (uint32_t)CNT001_OPER_NOT_ALLOWED_ERROR;
 1215              		.loc 1 693 0
 1216 0008 4FF00103 		mov	r3, #1
 1217 000c FB60     		str	r3, [r7, #12]
 694:../Dave/Generated/src/CNT001/CNT001.c ****   CCU4_CC4_TypeDef* CC4yRegsPtr = HandlePtr->CC4Ptr;
 1218              		.loc 1 694 0
 1219 000e 7B68     		ldr	r3, [r7, #4]
 1220 0010 5B69     		ldr	r3, [r3, #20]
 1221 0012 BB60     		str	r3, [r7, #8]
 695:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_ENTRY(APP_GID, (uint32_t)CNT001_FUNCTION_ENTRY);
 696:../Dave/Generated/src/CNT001/CNT001.c ****   /* This function is not allowed in the UNINITIALIZED state */
 697:../Dave/Generated/src/CNT001/CNT001.c ****   if (HandlePtr->DynamicHandlePtr->State == CNT001_UNINITIALIZED)
 1222              		.loc 1 697 0
 1223 0014 7B68     		ldr	r3, [r7, #4]
 1224 0016 DB68     		ldr	r3, [r3, #12]
 1225 0018 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1226 001a 002B     		cmp	r3, #0
 1227 001c 08D0     		beq	.L50
 698:../Dave/Generated/src/CNT001/CNT001.c ****   {
 699:../Dave/Generated/src/CNT001/CNT001.c **** 	DBG002_INFO(APP_GID, DBG002_MESSAGEID_LITERAL, CNT001_STATUS_LEN, &status);
 700:../Dave/Generated/src/CNT001/CNT001.c ****   }
 701:../Dave/Generated/src/CNT001/CNT001.c ****   /* Clear the timer in TCCLR register */
 702:../Dave/Generated/src/CNT001/CNT001.c ****   else
 703:../Dave/Generated/src/CNT001/CNT001.c ****   {
 704:../Dave/Generated/src/CNT001/CNT001.c ****     CC4yRegsPtr->TCCLR |=  CNT001_CLEAR_COUNTER;
 1228              		.loc 1 704 0
 1229 001e BB68     		ldr	r3, [r7, #8]
 1230 0020 1B69     		ldr	r3, [r3, #16]
 1231 0022 43F00202 		orr	r2, r3, #2
 1232 0026 BB68     		ldr	r3, [r7, #8]
 1233 0028 1A61     		str	r2, [r3, #16]
 705:../Dave/Generated/src/CNT001/CNT001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1234              		.loc 1 705 0
 1235 002a 4FF00003 		mov	r3, #0
 1236 002e FB60     		str	r3, [r7, #12]
 1237              	.L50:
 706:../Dave/Generated/src/CNT001/CNT001.c ****   }
 707:../Dave/Generated/src/CNT001/CNT001.c ****   DBG002_FUNCTION_EXIT(APP_GID, (uint32_t)CNT001_FUNCTION_EXIT);
 708:../Dave/Generated/src/CNT001/CNT001.c ****   return (Status);
 1238              		.loc 1 708 0
 1239 0030 FB68     		ldr	r3, [r7, #12]
 709:../Dave/Generated/src/CNT001/CNT001.c **** 
 710:../Dave/Generated/src/CNT001/CNT001.c **** }
 1240              		.loc 1 710 0
 1241 0032 1846     		mov	r0, r3
 1242 0034 07F11407 		add	r7, r7, #20
 1243 0038 BD46     		mov	sp, r7
 1244 003a 80BC     		pop	{r7}
 1245 003c 7047     		bx	lr
 1246              		.cfi_endproc
 1247              	.LFE131:
 1249 003e 00BF     		.text
 1250              	.Letext0:
 1251              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 1252              		.file 3 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1253              		.file 4 "C:\\DAVE3_workspace\\ws3.1.10\\ControleInterno-Spartacus\\Dave\\Generated\\inc\\DAVESuppo
 1254              		.file 5 "C:\\DAVE3_workspace\\ws3.1.10\\ControleInterno-Spartacus\\Dave\\Generated\\inc\\DAVESuppo
 1255              		.file 6 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1256              		.file 7 "C:\\DAVE3_workspace\\ws3.1.10\\ControleInterno-Spartacus\\Dave\\Generated\\inc\\DAVESuppo
DEFINED SYMBOLS
                            *ABS*:00000000 CNT001.c
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:20     .text.CNT001_Init:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:25     .text.CNT001_Init:00000000 CNT001_Init
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:82     .text.CNT001_lInit:00000000 CNT001_lInit
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:427    .text.CNT001_Start:00000000 CNT001_Start
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:77     .text.CNT001_lInit:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:304    .text.CNT001_Deinit:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:309    .text.CNT001_Deinit:00000000 CNT001_Deinit
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:422    .text.CNT001_Start:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:499    .text.CNT001_Stop:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:504    .text.CNT001_Stop:00000000 CNT001_Stop
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:592    .text.CNT001_GetEvtCountValue:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:597    .text.CNT001_GetEvtCountValue:00000000 CNT001_GetEvtCountValue
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:652    .text.CNT001_GetCountMatch:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:657    .text.CNT001_GetCountMatch:00000000 CNT001_GetCountMatch
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:707    .text.CNT001_SetCountMatch:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:712    .text.CNT001_SetCountMatch:00000000 CNT001_SetCountMatch
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:803    .text.CNT001_GetTimerStatus:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:808    .text.CNT001_GetTimerStatus:00000000 CNT001_GetTimerStatus
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:862    .text.CNT001_EnableEvent:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:867    .text.CNT001_EnableEvent:00000000 CNT001_EnableEvent
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:925    .text.CNT001_DisableEvent:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:930    .text.CNT001_DisableEvent:00000000 CNT001_DisableEvent
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:989    .text.CNT001_ClearPendingEvent:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:994    .text.CNT001_ClearPendingEvent:00000000 CNT001_ClearPendingEvent
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:1052   .text.CNT001_SetPendingEvent:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:1057   .text.CNT001_SetPendingEvent:00000000 CNT001_SetPendingEvent
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:1115   .text.CNT001_GetPendingEvent:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:1120   .text.CNT001_GetPendingEvent:00000000 CNT001_GetPendingEvent
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:1192   .text.CNT001_ResetCounter:00000000 $t
C:\Users\JMASS_~1\AppData\Local\Temp\cc5Lp6RB.s:1197   .text.CNT001_ResetCounter:00000000 CNT001_ResetCounter
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e3bdd798bb23f70d94471cb7157fa38f
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.6a563b5a45d32cec26f5b514b510065d
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.2b7f5ec7311f4adf3e25cf7854109544
                           .group:00000000 wm4.CCU4Global_Conf.h.63.10a5fc586e1563647b9633c45b1b739e
                           .group:00000000 wm4.PWMSP001.h.57.29b732b86baf3e81f49153f5f495912e
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.CNT001.h.53.54b2229008e37b1970e63d1faf193d82
                           .group:00000000 wm4.SYSTM002_Conf.h.70.e893767dc4d518b087b4a20e349ac4d8
                           .group:00000000 wm4.SYSTM002.h.98.0f398400b32186dea0837ac3b6c1ddcb
                           .group:00000000 wm4.IO002_Conf.h.51.87e2c8c60b647393fe9ced2cae198f63
                           .group:00000000 wm4.ERU001_Conf.h.69.cbf5f28f16df40bf2ec07157d45ebab0
                           .group:00000000 wm4.ERU002_Conf.h.49.2f1d75b23a08c83bd296d7c11c7e280b
                           .group:00000000 wm4.NVIC002_Conf.h.63.13943eb720fa25e7207fa08ab410f2a7

UNDEFINED SYMBOLS
CCU4GLOBAL_Init
CNT001_Handle0
