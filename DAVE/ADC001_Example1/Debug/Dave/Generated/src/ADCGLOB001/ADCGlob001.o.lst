   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ADCGlob001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADCGLOB001_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADCGLOB001_Init
  22              		.thumb
  23              		.thumb_func
  25              	ADCGLOB001_Init:
  26              	.LFB117:
  27              		.file 1 "../Dave/Generated/src/ADCGLOB001/ADCGlob001.c"
   1:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
   2:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  DAVE App Name : ADCGLOB001       App Version: 1.0.26               
   3:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
   6:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
   7:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
   8:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
   9:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  Copyright (c) 2013, Infineon Technologies AG                                 **
  10:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  All rights reserved.                                                         **
  11:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  12:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  Redistribution and use in source and binary forms, with or without           **
  13:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  modification,are permitted provided that the following conditions are met:   **
  14:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  15:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  16:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  this list of conditions and the following disclaimer.                        **
  17:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  18:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  this list of conditions and the following disclaimer in the documentation    **
  19:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  and/or other materials provided with the distribution.                       **
  20:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  21:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  may be used to endorse or promote products derived from this software without**
  22:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  specific prior written permission.                                           **
  23:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  24:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  25:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  26:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  27:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  28:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  29:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  30:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  31:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  32:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  33:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  34:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  35:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  36:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  To improve the quality of the software, users are encouraged to share        **
  37:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  38:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  dave@infineon.com).                                                          **
  39:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                                                                               **
  40:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *******************************************************************************
  41:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  42:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  43:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** PLATFORM : Infineon XMC4000/XMC1000 Series                                **
  44:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  45:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** COMPILER : Compiler Independent                                           **
  46:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  47:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** AUTHOR : App Developer                                                    **
  48:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  49:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** MAY BE CHANGED BY USER [yes/no]: Yes                                      **
  50:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  51:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** MODIFICATION DATE : Jan 29, 2014                                          **
  52:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  53:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
  54:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  55:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  56:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                       Author(s) Identity                                  **
  57:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *******************************************************************************
  58:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                                                                           **
  59:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** Initials           Name                                                   **
  60:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** --------------------------------------------------------------------------**
  61:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** Neelakanta        App Developer                                           **
  62:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** SSAM              Sridhar Sampath                                         **
  63:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
  64:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  65:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
  66:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @file ADCGLOB001.c
  67:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *
  68:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @brief
  69:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This is global ADC App which allows the sharing of global ADC resources.
  70:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *
  71:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Change History:
  72:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Date       version       Details
  73:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 12-Dec-2012   1.0.5    Initial code added for XMC1000
  74:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 18-Jan-2013   1.0.6    Merging with XMC1000 done
  75:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 24-Apr-2013   1.0.12   Ported to XMC4500 step AB and
  76:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        Source Result selection Feature added
  77:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 10-Jun-2013   1.0.14   1. Supported for XMC1100 device,
  78:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        2. Comment in header section - the Device series name is
  79:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                           made as XMC1000
  80:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 27-Jun-2013   1.0.16   Global limits made unavailable for adc004 app
  81:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 29-Aug-2013   1.0.18   XMC1200/XMC1300 New Sofware IDS added.
  82:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        Unused code removed
  83:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 31-Oct-2013   1.0.20   1. The macro name ADCGLOB001_DBG002_FUNCTION_ENTRY is
  84:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        corrected as ADCGLOB001_FUNCTION_ENTRY
  85:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        2. Analog Clock divider value minimum 1 was generated
  86:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        and now it is made as 0 for XMC1000 devices.
  87:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 14-Nov-2013   1.0.22   CLK001_Init() for XMC4000 devices CLK002_Init() for
  88:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        XMC1000 devices is removed in ADCGLOB001_Init()
  89:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        function, since this CLK00x_Init() function is called
  90:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        at the beginning  of the DAVE_Init() function.
  91:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * 29-Jan-2014   1.0.24   Error codes are added in various functions, that can
  92:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *                        be logged with DBG002 App.
  93:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
  94:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  95:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
  96:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ** INCLUDE FILES                                                             **
  97:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  ******************************************************************************/
  98:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
  99:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #include <DAVE3.h>
 100:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 101:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 102:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*****************************************************************************
 103:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 104:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *****************************************************************************/
 105:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*These definitions are included here to avoid compilation errors,
 106:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 107:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  as empty*/
 108:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #ifndef _DBG002_H_
 109:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 110:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_RegisterCallBack(A,B,C)
 111:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_I(e)
 112:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IG(e,g)
 113:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IH(e,h)
 114:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IP(e,p)
 115:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IGH(e,g,h)
 116:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IGP(e,g,p)
 117:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IHP(e,h,p)
 118:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IGHP(e,g,h,p)
 119:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_N(e)
 120:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NG(e,g)
 121:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NH(e,h)
 122:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NP(e,p)
 123:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NGH(e,g,h)
 124:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NGP(e,g,p)
 125:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NHP(e,h,p)
 126:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_NGHP(e,g,h,p)
 127:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_ID(e)
 128:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_IS(e)
 129:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_ISG(e,g)
 130:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 131:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 132:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 133:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 134:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 135:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 136:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status)
 137:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_FUNCTION_EXIT(GID, Status)
 138:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 139:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define DBG002_MESSAGEID_LITERAL
 140:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 141:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #endif/* End of defintions of dummy Debug Log macros*/
 142:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 143:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 144:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
 145:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** **                      Private Macro Definitions                             **
 146:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** *******************************************************************************/
 147:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** #define APP_GID DBG002_GID_ADCGLOB001
 148:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 149:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * @cond INTERNAL_DOCS
 150:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 151:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /*******************************************************************************
 152:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  **                              API DEFINITION
 153:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *******************************************************************************/
 154:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 155:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 156:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  *This function initialize all VADC Global registers based on GUI configuration.
 157:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 158:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** void ADCGLOB001_Init(void)
 159:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
  28              		.loc 1 159 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 160:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
  43              		.loc 1 160 0
  44 0006 4FF00103 		mov	r3, #1
  45 000a 7B60     		str	r3, [r7, #4]
 161:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 162:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(ADCGLOB001_Handle0.kDynamicDataPtr->StateType == ADCGLOB001_UNINITIALIZED )
  46              		.loc 1 162 0
  47 000c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  48 0010 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  49 0014 5B68     		ldr	r3, [r3, #4]
  50 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  51 0018 002B     		cmp	r3, #0
  52 001a 40F0C580 		bne	.L1
 163:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {        
 164:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring ADC Module Out of Reset
 165:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          *  This is not applicable for XMC1000
 166:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 167:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         RESET001_DeassertReset(PER0_VADC);
  53              		.loc 1 167 0
  54 001e 4FF00100 		mov	r0, #1
  55 0022 FFF7FEFF 		bl	RESET001_DeassertReset
 168:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module out of disabled state.*/
 169:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( ADCGLOB001_Handle0.kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
  56              		.loc 1 169 0
  57 0026 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  58 002a C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  59 002e 1A68     		ldr	r2, [r3, #0]
  60 0030 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  61 0034 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  62 0038 1B68     		ldr	r3, [r3, #0]
  63 003a 1B68     		ldr	r3, [r3, #0]
  64 003c 23F00103 		bic	r3, r3, #1
  65 0040 1360     		str	r3, [r2, #0]
 170:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /**
 171:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Make divider bit fields writable.
 172:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Divider Factor for the Analog Internal Clock.
 173:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Divider Factor for the Arbiter Clock.
 174:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Double Clock for the MSB Conversion.
 175:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 176:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG = \
  66              		.loc 1 176 0
  67 0042 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  68 0046 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  69 004a 1A68     		ldr	r2, [r3, #0]
 177:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)(((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)| \
 178:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kArbiterClkDivider <<VADC_GLOBCFG_DIVD_Pos) 
  70              		.loc 1 178 0
  71 004c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  72 0050 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  73 0054 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
  74 0056 4FEA0323 		lsl	r3, r3, #8
  75 005a 03F44071 		and	r1, r3, #768
 179:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.keDoubleClkMSBConver <<VADC_GLOBCFG_DCMSB_Po
  76              		.loc 1 179 0
  77 005e 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  78 0062 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  79 0066 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
  80 0068 4FEAC313 		lsl	r3, r3, #7
  81 006c DBB2     		uxtb	r3, r3
 178:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kArbiterClkDivider <<VADC_GLOBCFG_DIVD_Pos) 
  82              		.loc 1 178 0
  83 006e 1943     		orrs	r1, r1, r3
 180:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kAnalogClkDivider <<VADC_GLOBCFG_DIVA_Pos)&V
  84              		.loc 1 180 0
  85 0070 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  86 0074 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  87 0078 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  88 007a 03F01F03 		and	r3, r3, #31
 177:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)(((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)| \
  89              		.loc 1 177 0
  90 007e 0B43     		orrs	r3, r3, r1
  91 0080 43F40043 		orr	r3, r3, #32768
 176:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG = \
  92              		.loc 1 176 0
  93 0084 C2F88030 		str	r3, [r2, #128]
 181:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Make the divider bit fields write protected */
 182:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG, VADC_GLOBCFG_DIVWC_Pos);
  94              		.loc 1 182 0
  95 0088 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  96 008c C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
  97 0090 1A68     		ldr	r2, [r3, #0]
  98 0092 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
  99 0096 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 100 009a 1B68     		ldr	r3, [r3, #0]
 101 009c D3F88030 		ldr	r3, [r3, #128]
 102 00a0 23F40043 		bic	r3, r3, #32768
 103 00a4 C2F88030 		str	r3, [r2, #128]
 183:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 184:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /**
 185:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for Standard Conversion.
 186:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for EMUX Conversion.
 187:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Conversion Mode for Standard Conversion.
 188:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Conversion Mode for EMUX Conversion.
 189:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 190:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[0] = \
 104              		.loc 1 190 0
 105 00a8 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 106 00ac C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 107 00b0 1A68     		ldr	r2, [r3, #0]
 191:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 108              		.loc 1 191 0
 109 00b2 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 110 00b6 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 111 00ba 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 112 00bc 4FEA0363 		lsl	r3, r3, #24
 113 00c0 03F0E061 		and	r1, r3, #117440512
 192:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass0 <<VADC_GLOBICLA
 114              		.loc 1 192 0
 115 00c4 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 116 00c8 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 117 00cc 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 118 00ce 4FEA0343 		lsl	r3, r3, #16
 119 00d2 03F4F813 		and	r3, r3, #2031616
 191:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 120              		.loc 1 191 0
 121 00d6 1943     		orrs	r1, r1, r3
 193:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kConversionModeClass0 <<VADC_GLOBICLASS_CMS_
 122              		.loc 1 193 0
 123 00d8 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 124 00dc C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 125 00e0 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 126 00e2 4FEA0323 		lsl	r3, r3, #8
 127 00e6 03F4E063 		and	r3, r3, #1792
 192:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass0 <<VADC_GLOBICLA
 128              		.loc 1 192 0
 129 00ea 1943     		orrs	r1, r1, r3
 194:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kSampleTimeControlClass0 <<VADC_GLOBICLASS_S
 130              		.loc 1 194 0
 131 00ec 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 132 00f0 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 133 00f4 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 134 00f6 03F01F03 		and	r3, r3, #31
 191:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass0 << VADC_GLOBICL
 135              		.loc 1 191 0
 136 00fa 0B43     		orrs	r3, r3, r1
 190:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[0] = \
 137              		.loc 1 190 0
 138 00fc C2F8A030 		str	r3, [r2, #160]
 195:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /**
 196:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for Standard Conversion.
 197:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for EMUX Conversion.
 198:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Conversion Mode for Standard Conversion.
 199:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Conversion Mode for EMUX Conversion.
 200:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 201:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[1] = \
 139              		.loc 1 201 0
 140 0100 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 141 0104 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 142 0108 1A68     		ldr	r2, [r3, #0]
 202:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 143              		.loc 1 202 0
 144 010a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 145 010e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 146 0112 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
 147 0114 4FEA0363 		lsl	r3, r3, #24
 148 0118 03F0E061 		and	r1, r3, #117440512
 203:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass1 <<VADC_GLOBICLA
 149              		.loc 1 203 0
 150 011c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 151 0120 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 152 0124 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 153 0126 4FEA0343 		lsl	r3, r3, #16
 154 012a 03F4F813 		and	r3, r3, #2031616
 202:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 155              		.loc 1 202 0
 156 012e 1943     		orrs	r1, r1, r3
 204:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kConversionModeClass1 <<VADC_GLOBICLASS_CMS_
 157              		.loc 1 204 0
 158 0130 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 159 0134 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 160 0138 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 161 013a 4FEA0323 		lsl	r3, r3, #8
 162 013e 03F4E063 		and	r3, r3, #1792
 203:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kEMUXSampleTimeControlClass1 <<VADC_GLOBICLA
 163              		.loc 1 203 0
 164 0142 1943     		orrs	r1, r1, r3
 205:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.kSampleTimeControlClass1<<VADC_GLOBICLASS_ST
 165              		.loc 1 205 0
 166 0144 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 167 0148 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 168 014c DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 169 014e 03F01F03 		and	r3, r3, #31
 202:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.kEMUXConversionModeClass1 << VADC_GLOBICL
 170              		.loc 1 202 0
 171 0152 0B43     		orrs	r3, r3, r1
 201:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBICLASS[1] = \
 172              		.loc 1 201 0
 173 0154 C2F8A430 		str	r3, [r2, #164]
 206:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 207:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Configure the lower and upper boundary based on the GUI configuration.*/
 208:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBBOUND = \
 174              		.loc 1 208 0
 175 0158 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 176 015c C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 177 0160 1968     		ldr	r1, [r3, #0]
 209:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.KGlobBoundary1 <<VADC_GLOBBOUND_BOUNDARY1
 178              		.loc 1 209 0
 179 0162 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 180 0166 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 181 016a 5B89     		ldrh	r3, [r3, #10]
 182 016c 4FEA0342 		lsl	r2, r3, #16
 183 0170 4FF00003 		mov	r3, #0
 184 0174 C0F6FF73 		movt	r3, 4095
 185 0178 1340     		ands	r3, r3, r2
 210:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (((uint32_t)ADCGLOB001_Handle0.KGlobBoundary0 <<VADC_GLOBBOUND_BOUNDARY0_Po
 186              		.loc 1 210 0
 187 017a 40F20002 		movw	r2, #:lower16:ADCGLOB001_Handle0
 188 017e C0F20002 		movt	r2, #:upper16:ADCGLOB001_Handle0
 189 0182 1289     		ldrh	r2, [r2, #8]
 190 0184 4FEA0252 		lsl	r2, r2, #20
 191 0188 4FEA1252 		lsr	r2, r2, #20
 209:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (uint32_t)((((uint32_t)ADCGLOB001_Handle0.KGlobBoundary1 <<VADC_GLOBBOUND_BOUNDARY1
 192              		.loc 1 209 0
 193 018c 1343     		orrs	r3, r3, r2
 208:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kGlobalPtr->GLOBBOUND = \
 194              		.loc 1 208 0
 195 018e C1F8B830 		str	r3, [r1, #184]
 211:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_Handle0.kDynamicDataPtr->StateType = ADCGLOB001_INITIALIZED;
 196              		.loc 1 211 0
 197 0192 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 198 0196 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 199 019a 5B68     		ldr	r3, [r3, #4]
 200 019c 4FF00102 		mov	r2, #1
 201 01a0 1A70     		strb	r2, [r3, #0]
 212:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status &= (uint32_t)DAVEApp_SUCCESS;
 202              		.loc 1 212 0
 203 01a2 4FF00003 		mov	r3, #0
 204 01a6 7B60     		str	r3, [r7, #4]
 205              	.L1:
 213:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {
 214:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 215:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 216:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 217:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 206              		.loc 1 217 0
 207 01a8 07F10807 		add	r7, r7, #8
 208 01ac BD46     		mov	sp, r7
 209 01ae 80BD     		pop	{r7, pc}
 210              		.cfi_endproc
 211              	.LFE117:
 213              		.section	.text.ADCGLOB001_DeInit,"ax",%progbits
 214              		.align	2
 215              		.global	ADCGLOB001_DeInit
 216              		.thumb
 217              		.thumb_func
 219              	ADCGLOB001_DeInit:
 220              	.LFB118:
 218:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 219:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 220:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function will de-initialize VADC Global registers.
 221:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 222:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_DeInit(const ADCGLOB001_HandleType * HandlePtr)
 223:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 221              		.loc 1 223 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 16
 224              		@ frame_needed = 1, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226 0000 80B4     		push	{r7}
 227              	.LCFI3:
 228              		.cfi_def_cfa_offset 4
 229              		.cfi_offset 7, -4
 230 0002 85B0     		sub	sp, sp, #20
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 24
 233 0004 00AF     		add	r7, sp, #0
 234              	.LCFI5:
 235              		.cfi_def_cfa_register 7
 236 0006 7860     		str	r0, [r7, #4]
 224:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 237              		.loc 1 224 0
 238 0008 4FF00103 		mov	r3, #1
 239 000c FB60     		str	r3, [r7, #12]
 225:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 226:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED )
 240              		.loc 1 226 0
 241 000e 7B68     		ldr	r3, [r7, #4]
 242 0010 5B68     		ldr	r3, [r3, #4]
 243 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 244 0014 012B     		cmp	r3, #1
 245 0016 37D1     		bne	.L4
 227:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 228:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module out of disabled state */
 229:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 246              		.loc 1 229 0
 247 0018 7B68     		ldr	r3, [r7, #4]
 248 001a 1B68     		ldr	r3, [r3, #0]
 249 001c 7A68     		ldr	r2, [r7, #4]
 250 001e 1268     		ldr	r2, [r2, #0]
 251 0020 1268     		ldr	r2, [r2, #0]
 252 0022 22F00102 		bic	r2, r2, #1
 253 0026 1A60     		str	r2, [r3, #0]
 230:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 231:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Make divider bit fields writable and deconfigure Analog Internal Clock,
 232:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****      Arbiter Clock & MSB Conversion bits.*/
 233:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBCFG = \
 254              		.loc 1 233 0
 255 0028 7B68     		ldr	r3, [r7, #4]
 256 002a 1A68     		ldr	r2, [r3, #0]
 257 002c 4FF66043 		movw	r3, #64608
 258 0030 CFF6FF73 		movt	r3, 65535
 259 0034 C2F88030 		str	r3, [r2, #128]
 234:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (((uint32_t)1<<VADC_GLOBCFG_DIVWC_Pos)|((~(VADC_GLOBCFG_DIVD_Msk))& \
 235:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (~(VADC_GLOBCFG_DCMSB_Msk)) & (~(VADC_GLOBCFG_DIVA_Msk))));
 236:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 237:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Again make the divider bit fields write protected */
 238:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->GLOBCFG, VADC_GLOBCFG_DIVWC_Pos);
 260              		.loc 1 238 0
 261 0038 7B68     		ldr	r3, [r7, #4]
 262 003a 1B68     		ldr	r3, [r3, #0]
 263 003c 7A68     		ldr	r2, [r7, #4]
 264 003e 1268     		ldr	r2, [r2, #0]
 265 0040 D2F88020 		ldr	r2, [r2, #128]
 266 0044 22F40042 		bic	r2, r2, #32768
 267 0048 C3F88020 		str	r2, [r3, #128]
 239:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 240:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*
 241:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for Standard Conversion into default
 242:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          *  mode.
 243:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Conversion Mode for Standard Conversion into default mode.
 244:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0 Sample Time Control for EMUX Conversion into default mode.
 245:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class0  Conversion Mode for EMUX Conversion into default mode.
 246:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 247:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBICLASS[0] = \
 268              		.loc 1 247 0
 269 004c 7B68     		ldr	r3, [r7, #4]
 270 004e 1A68     		ldr	r2, [r3, #0]
 271 0050 4FF6E003 		movw	r3, #63712
 272 0054 CFF6E003 		movt	r3, 63712
 273 0058 C2F8A030 		str	r3, [r2, #160]
 248:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBICLASS_CME_Msk))&(~(VADC_GLOBICLASS_STCE_Msk))& \
 249:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (~(VADC_GLOBICLASS_CMS_Msk))&(~(VADC_GLOBICLASS_STCS_Msk)));
 250:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*
 251:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for Standard Conversion into default
 252:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          *  mode.
 253:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Conversion Mode for Standard Conversion into default mode.
 254:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1 Sample Time Control for EMUX Conversion into default mode.
 255:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Configure Class1  Conversion Mode for EMUX Conversion into default mode.
 256:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          */
 257:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBICLASS[1] = \
 274              		.loc 1 257 0
 275 005c 7B68     		ldr	r3, [r7, #4]
 276 005e 1A68     		ldr	r2, [r3, #0]
 277 0060 4FF6E003 		movw	r3, #63712
 278 0064 CFF6E003 		movt	r3, 63712
 279 0068 C2F8A430 		str	r3, [r2, #164]
 258:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBICLASS_CME_Msk))&(~(VADC_GLOBICLASS_STCE_Msk))& \
 259:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                         (~(VADC_GLOBICLASS_CMS_Msk))&(~(VADC_GLOBICLASS_STCS_Msk)));
 260:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 261:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Configure global lower and upper boundary value into default value.*/
 262:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBBOUND = \
 280              		.loc 1 262 0
 281 006c 7B68     		ldr	r3, [r7, #4]
 282 006e 1B68     		ldr	r3, [r3, #0]
 283 0070 4FF0F022 		mov	r2, #-268374016
 284 0074 C3F8B820 		str	r2, [r3, #184]
 263:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 ((~(VADC_GLOBBOUND_BOUNDARY1_Msk))&(~(VADC_GLOBBOUND_BOUNDARY0_Msk)));
 264:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 265:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kDynamicDataPtr->StateType = ADCGLOB001_UNINITIALIZED;
 285              		.loc 1 265 0
 286 0078 7B68     		ldr	r3, [r7, #4]
 287 007a 5B68     		ldr	r3, [r3, #4]
 288 007c 4FF00002 		mov	r2, #0
 289 0080 1A70     		strb	r2, [r3, #0]
 266:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 290              		.loc 1 266 0
 291 0082 4FF00003 		mov	r3, #0
 292 0086 FB60     		str	r3, [r7, #12]
 293              	.L4:
 267:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     } else {
 268:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 269:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 270:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 271:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 294              		.loc 1 271 0
 295 0088 FB68     		ldr	r3, [r7, #12]
 272:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 296              		.loc 1 272 0
 297 008a 1846     		mov	r0, r3
 298 008c 07F11407 		add	r7, r7, #20
 299 0090 BD46     		mov	sp, r7
 300 0092 80BC     		pop	{r7}
 301 0094 7047     		bx	lr
 302              		.cfi_endproc
 303              	.LFE118:
 305 0096 00BF     		.section	.text.ADCGLOB001_CLKRequestDisable,"ax",%progbits
 306              		.align	2
 307              		.global	ADCGLOB001_CLKRequestDisable
 308              		.thumb
 309              		.thumb_func
 311              	ADCGLOB001_CLKRequestDisable:
 312              	.LFB119:
 273:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 274:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 275:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function disable the control of the module.
 276:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 277:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_CLKRequestDisable(const ADCGLOB001_HandleType * HandlePtr)
 278:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 313              		.loc 1 278 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 16
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318 0000 80B4     		push	{r7}
 319              	.LCFI6:
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 7, -4
 322 0002 85B0     		sub	sp, sp, #20
 323              	.LCFI7:
 324              		.cfi_def_cfa_offset 24
 325 0004 00AF     		add	r7, sp, #0
 326              	.LCFI8:
 327              		.cfi_def_cfa_register 7
 328 0006 7860     		str	r0, [r7, #4]
 279:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 329              		.loc 1 279 0
 330 0008 4FF00103 		mov	r3, #1
 331 000c FB60     		str	r3, [r7, #12]
 280:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 281:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 332              		.loc 1 281 0
 333 000e 7B68     		ldr	r3, [r7, #4]
 334 0010 5B68     		ldr	r3, [r3, #4]
 335 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 336 0014 012B     		cmp	r3, #1
 337 0016 0AD1     		bne	.L7
 282:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 283:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 284:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module in disabled state
 285:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * Module Disable Request Bit
 286:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * 0 : enable the module clock
 287:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****          * 1 : stop the module clock */
 288:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 289:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         SET_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 338              		.loc 1 289 0
 339 0018 7B68     		ldr	r3, [r7, #4]
 340 001a 1B68     		ldr	r3, [r3, #0]
 341 001c 7A68     		ldr	r2, [r7, #4]
 342 001e 1268     		ldr	r2, [r2, #0]
 343 0020 1268     		ldr	r2, [r2, #0]
 344 0022 42F00102 		orr	r2, r2, #1
 345 0026 1A60     		str	r2, [r3, #0]
 290:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 291:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 346              		.loc 1 291 0
 347 0028 4FF00003 		mov	r3, #0
 348 002c FB60     		str	r3, [r7, #12]
 349              	.L7:
 292:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 293:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 294:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 295:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 296:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 297:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 298:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 299:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 300:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 350              		.loc 1 300 0
 351 002e FB68     		ldr	r3, [r7, #12]
 301:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 352              		.loc 1 301 0
 353 0030 1846     		mov	r0, r3
 354 0032 07F11407 		add	r7, r7, #20
 355 0036 BD46     		mov	sp, r7
 356 0038 80BC     		pop	{r7}
 357 003a 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE119:
 361              		.section	.text.ADCGLOB001_CLKRequestEnable,"ax",%progbits
 362              		.align	2
 363              		.global	ADCGLOB001_CLKRequestEnable
 364              		.thumb
 365              		.thumb_func
 367              	ADCGLOB001_CLKRequestEnable:
 368              	.LFB120:
 302:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 303:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function enable the control of the module.
 304:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 305:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_CLKRequestEnable(const ADCGLOB001_HandleType * HandlePtr)
 306:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 369              		.loc 1 306 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              	.LCFI9:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 85B0     		sub	sp, sp, #20
 379              	.LCFI10:
 380              		.cfi_def_cfa_offset 24
 381 0004 00AF     		add	r7, sp, #0
 382              	.LCFI11:
 383              		.cfi_def_cfa_register 7
 384 0006 7860     		str	r0, [r7, #4]
 307:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 385              		.loc 1 307 0
 386 0008 4FF00103 		mov	r3, #1
 387 000c FB60     		str	r3, [r7, #12]
 308:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 309:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 388              		.loc 1 309 0
 389 000e 7B68     		ldr	r3, [r7, #4]
 390 0010 5B68     		ldr	r3, [r3, #4]
 391 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 392 0014 012B     		cmp	r3, #1
 393 0016 0AD1     		bne	.L10
 310:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 311:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Bring the module out of disabled state */
 312:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 313:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_DISR_Pos);
 394              		.loc 1 313 0
 395 0018 7B68     		ldr	r3, [r7, #4]
 396 001a 1B68     		ldr	r3, [r3, #0]
 397 001c 7A68     		ldr	r2, [r7, #4]
 398 001e 1268     		ldr	r2, [r2, #0]
 399 0020 1268     		ldr	r2, [r2, #0]
 400 0022 22F00102 		bic	r2, r2, #1
 401 0026 1A60     		str	r2, [r3, #0]
 314:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 315:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 402              		.loc 1 315 0
 403 0028 4FF00003 		mov	r3, #0
 404 002c FB60     		str	r3, [r7, #12]
 405              	.L10:
 316:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 317:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 318:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 319:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 320:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 321:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 322:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 323:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 406              		.loc 1 323 0
 407 002e FB68     		ldr	r3, [r7, #12]
 324:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 408              		.loc 1 324 0
 409 0030 1846     		mov	r0, r3
 410 0032 07F11407 		add	r7, r7, #20
 411 0036 BD46     		mov	sp, r7
 412 0038 80BC     		pop	{r7}
 413 003a 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE120:
 417              		.section	.text.ADCGLOB001_SetStartUpCalibration,"ax",%progbits
 418              		.align	2
 419              		.global	ADCGLOB001_SetStartUpCalibration
 420              		.thumb
 421              		.thumb_func
 423              	ADCGLOB001_SetStartUpCalibration:
 424              	.LFB121:
 325:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 326:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Initiate the start-up calibration phase.
 327:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 328:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 329:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetStartUpCalibration(
 330:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType *HandlePtr
 331:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 332:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 425              		.loc 1 332 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 16
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI12:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 85B0     		sub	sp, sp, #20
 435              	.LCFI13:
 436              		.cfi_def_cfa_offset 24
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI14:
 439              		.cfi_def_cfa_register 7
 440 0006 7860     		str	r0, [r7, #4]
 333:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 441              		.loc 1 333 0
 442 0008 4FF00103 		mov	r3, #1
 443 000c FB60     		str	r3, [r7, #12]
 334:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 335:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 444              		.loc 1 335 0
 445 000e 7B68     		ldr	r3, [r7, #4]
 446 0010 5B68     		ldr	r3, [r3, #4]
 447 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 448 0014 012B     		cmp	r3, #1
 449 0016 0CD1     		bne	.L13
 336:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 337:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Initiate Start-Up Calibration */
 338:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 339:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         SET_BIT( HandlePtr->kGlobalPtr->GLOBCFG, VADC_GLOBCFG_SUCAL_Pos);
 450              		.loc 1 339 0
 451 0018 7B68     		ldr	r3, [r7, #4]
 452 001a 1B68     		ldr	r3, [r3, #0]
 453 001c 7A68     		ldr	r2, [r7, #4]
 454 001e 1268     		ldr	r2, [r2, #0]
 455 0020 D2F88020 		ldr	r2, [r2, #128]
 456 0024 42F00042 		orr	r2, r2, #-2147483648
 457 0028 C3F88020 		str	r2, [r3, #128]
 340:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 341:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 458              		.loc 1 341 0
 459 002c 4FF00003 		mov	r3, #0
 460 0030 FB60     		str	r3, [r7, #12]
 461              	.L13:
 342:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 343:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 344:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 345:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 346:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 347:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 348:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 349:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 462              		.loc 1 349 0
 463 0032 FB68     		ldr	r3, [r7, #12]
 350:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 464              		.loc 1 350 0
 465 0034 1846     		mov	r0, r3
 466 0036 07F11407 		add	r7, r7, #20
 467 003a BD46     		mov	sp, r7
 468 003c 80BC     		pop	{r7}
 469 003e 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE121:
 473              		.section	.text.ADCGLOB001_StartUpCalibrationInit,"ax",%progbits
 474              		.align	2
 475              		.global	ADCGLOB001_StartUpCalibrationInit
 476              		.thumb
 477              		.thumb_func
 479              	ADCGLOB001_StartUpCalibrationInit:
 480              	.LFB122:
 351:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 352:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Initialise the calibration based on GUI configuration.
 353:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 354:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_StartUpCalibrationInit(void)
 355:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 481              		.loc 1 355 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              	.LCFI15:
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
 491              	.LCFI16:
 492              		.cfi_def_cfa_offset 16
 493 0004 00AF     		add	r7, sp, #0
 494              	.LCFI17:
 495              		.cfi_def_cfa_register 7
 356:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 496              		.loc 1 356 0
 497 0006 4FF00103 		mov	r3, #1
 498 000a 7B60     		str	r3, [r7, #4]
 357:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 358:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if(ADCGLOB001_Handle0.kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED )
 499              		.loc 1 358 0
 500 000c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 501 0010 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 502 0014 5B68     		ldr	r3, [r3, #4]
 503 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 504 0018 012B     		cmp	r3, #1
 505 001a 19D1     		bne	.L16
 359:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 360:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Initialise Calibration */
 361:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 362:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(ADCGLOB001_Handle0.keStartCalib == (uint8_t)1)
 506              		.loc 1 362 0
 507 001c 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 508 0020 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 509 0024 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 510 0026 012B     		cmp	r3, #1
 511 0028 0FD1     		bne	.L17
 363:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 364:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Initiate Start-Up Calibration */
 365:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             SET_BIT( ADCGLOB001_Handle0.kGlobalPtr->GLOBCFG, VADC_GLOBCFG_SUCAL_Pos);
 512              		.loc 1 365 0
 513 002a 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 514 002e C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 515 0032 1A68     		ldr	r2, [r3, #0]
 516 0034 40F20003 		movw	r3, #:lower16:ADCGLOB001_Handle0
 517 0038 C0F20003 		movt	r3, #:upper16:ADCGLOB001_Handle0
 518 003c 1B68     		ldr	r3, [r3, #0]
 519 003e D3F88030 		ldr	r3, [r3, #128]
 520 0042 43F00043 		orr	r3, r3, #-2147483648
 521 0046 C2F88030 		str	r3, [r2, #128]
 522              	.L17:
 366:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 367:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 368:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 523              		.loc 1 368 0
 524 004a 4FF00003 		mov	r3, #0
 525 004e 7B60     		str	r3, [r7, #4]
 526              	.L16:
 369:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 370:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 371:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 372:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 373:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 374:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 375:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 376:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 527              		.loc 1 376 0
 528 0050 7B68     		ldr	r3, [r7, #4]
 377:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 529              		.loc 1 377 0
 530 0052 1846     		mov	r0, r3
 531 0054 07F10C07 		add	r7, r7, #12
 532 0058 BD46     		mov	sp, r7
 533 005a 80BC     		pop	{r7}
 534 005c 7047     		bx	lr
 535              		.cfi_endproc
 536              	.LFE122:
 538 005e 00BF     		.section	.text.ADCGLOB001_EnableSleepModeControl,"ax",%progbits
 539              		.align	2
 540              		.global	ADCGLOB001_EnableSleepModeControl
 541              		.thumb
 542              		.thumb_func
 544              	ADCGLOB001_EnableSleepModeControl:
 545              	.LFB123:
 378:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 379:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 380:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function Enables Sleep Mode Control.Which is used to control module?s
 381:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * reaction to sleep mode.
 382:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 383:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_EnableSleepModeControl(
 384:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 385:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 386:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 546              		.loc 1 386 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 16
 549              		@ frame_needed = 1, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551 0000 80B4     		push	{r7}
 552              	.LCFI18:
 553              		.cfi_def_cfa_offset 4
 554              		.cfi_offset 7, -4
 555 0002 85B0     		sub	sp, sp, #20
 556              	.LCFI19:
 557              		.cfi_def_cfa_offset 24
 558 0004 00AF     		add	r7, sp, #0
 559              	.LCFI20:
 560              		.cfi_def_cfa_register 7
 561 0006 7860     		str	r0, [r7, #4]
 387:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 562              		.loc 1 387 0
 563 0008 4FF00103 		mov	r3, #1
 564 000c FB60     		str	r3, [r7, #12]
 388:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 389:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 565              		.loc 1 389 0
 566 000e 7B68     		ldr	r3, [r7, #4]
 567 0010 5B68     		ldr	r3, [r3, #4]
 568 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 569 0014 012B     		cmp	r3, #1
 570 0016 0AD1     		bne	.L20
 390:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 391:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* Reset  Sleep Mode Enable Control bit*/
 392:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_EDIS_Pos);
 571              		.loc 1 392 0
 572 0018 7B68     		ldr	r3, [r7, #4]
 573 001a 1B68     		ldr	r3, [r3, #0]
 574 001c 7A68     		ldr	r2, [r7, #4]
 575 001e 1268     		ldr	r2, [r2, #0]
 576 0020 1268     		ldr	r2, [r2, #0]
 577 0022 22F00802 		bic	r2, r2, #8
 578 0026 1A60     		str	r2, [r3, #0]
 393:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 394:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 579              		.loc 1 394 0
 580 0028 4FF00003 		mov	r3, #0
 581 002c FB60     		str	r3, [r7, #12]
 582              	.L20:
 395:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 396:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 397:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 398:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 399:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****       DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 400:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 401:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 402:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 583              		.loc 1 402 0
 584 002e FB68     		ldr	r3, [r7, #12]
 403:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 585              		.loc 1 403 0
 586 0030 1846     		mov	r0, r3
 587 0032 07F11407 		add	r7, r7, #20
 588 0036 BD46     		mov	sp, r7
 589 0038 80BC     		pop	{r7}
 590 003a 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE123:
 594              		.section	.text.ADCGLOB001_DisregardSleepModeControl,"ax",%progbits
 595              		.align	2
 596              		.global	ADCGLOB001_DisregardSleepModeControl
 597              		.thumb
 598              		.thumb_func
 600              	ADCGLOB001_DisregardSleepModeControl:
 601              	.LFB124:
 404:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 405:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function disregards Sleep Mode Control.
 406:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 407:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_DisregardSleepModeControl(
 408:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 409:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 410:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 602              		.loc 1 410 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 16
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607 0000 80B4     		push	{r7}
 608              	.LCFI21:
 609              		.cfi_def_cfa_offset 4
 610              		.cfi_offset 7, -4
 611 0002 85B0     		sub	sp, sp, #20
 612              	.LCFI22:
 613              		.cfi_def_cfa_offset 24
 614 0004 00AF     		add	r7, sp, #0
 615              	.LCFI23:
 616              		.cfi_def_cfa_register 7
 617 0006 7860     		str	r0, [r7, #4]
 411:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 618              		.loc 1 411 0
 619 0008 4FF00103 		mov	r3, #1
 620 000c FB60     		str	r3, [r7, #12]
 412:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 413:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 621              		.loc 1 413 0
 622 000e 7B68     		ldr	r3, [r7, #4]
 623 0010 5B68     		ldr	r3, [r3, #4]
 624 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 625 0014 012B     		cmp	r3, #1
 626 0016 0AD1     		bne	.L23
 414:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 415:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /* set  Sleep Mode Enable Control bit*/
 416:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         SET_BIT( HandlePtr->kGlobalPtr->CLC, VADC_CLC_EDIS_Pos);
 627              		.loc 1 416 0
 628 0018 7B68     		ldr	r3, [r7, #4]
 629 001a 1B68     		ldr	r3, [r3, #0]
 630 001c 7A68     		ldr	r2, [r7, #4]
 631 001e 1268     		ldr	r2, [r2, #0]
 632 0020 1268     		ldr	r2, [r2, #0]
 633 0022 42F00802 		orr	r2, r2, #8
 634 0026 1A60     		str	r2, [r3, #0]
 417:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 418:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 635              		.loc 1 418 0
 636 0028 4FF00003 		mov	r3, #0
 637 002c FB60     		str	r3, [r7, #12]
 638              	.L23:
 419:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 420:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 421:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 422:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 423:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 424:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 425:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 426:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 639              		.loc 1 426 0
 640 002e FB68     		ldr	r3, [r7, #12]
 427:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 641              		.loc 1 427 0
 642 0030 1846     		mov	r0, r3
 643 0032 07F11407 		add	r7, r7, #20
 644 0036 BD46     		mov	sp, r7
 645 0038 80BC     		pop	{r7}
 646 003a 7047     		bx	lr
 647              		.cfi_endproc
 648              	.LFE124:
 650              		.section	.text.ADCGLOB001_SetGlobClass0ConvMode,"ax",%progbits
 651              		.align	2
 652              		.global	ADCGLOB001_SetGlobClass0ConvMode
 653              		.thumb
 654              		.thumb_func
 656              	ADCGLOB001_SetGlobClass0ConvMode:
 657              	.LFB125:
 428:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 429:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 430:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 conversion mode for standard conversions.
 431:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 432:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0ConvMode(
 433:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 434:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 435:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 436:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 658              		.loc 1 436 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 16
 661              		@ frame_needed = 1, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663 0000 80B4     		push	{r7}
 664              	.LCFI24:
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 7, -4
 667 0002 85B0     		sub	sp, sp, #20
 668              	.LCFI25:
 669              		.cfi_def_cfa_offset 24
 670 0004 00AF     		add	r7, sp, #0
 671              	.LCFI26:
 672              		.cfi_def_cfa_register 7
 673 0006 7860     		str	r0, [r7, #4]
 674 0008 0B46     		mov	r3, r1
 675 000a FB70     		strb	r3, [r7, #3]
 437:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 676              		.loc 1 437 0
 677 000c 4FF00103 		mov	r3, #1
 678 0010 FB60     		str	r3, [r7, #12]
 438:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 439:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 679              		.loc 1 439 0
 680 0012 7B68     		ldr	r3, [r7, #4]
 681 0014 5B68     		ldr	r3, [r3, #4]
 682 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 683 0018 012B     		cmp	r3, #1
 684 001a 1CD1     		bne	.L26
 440:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 441:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 685              		.loc 1 441 0
 686 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 687 001e 022B     		cmp	r3, #2
 688 0020 02D9     		bls	.L27
 689              		.loc 1 441 0 is_stmt 0 discriminator 1
 690 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 691 0024 052B     		cmp	r3, #5
 692 0026 13D1     		bne	.L28
 693              	.L27:
 442:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 443:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 conversion mode */
 444:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 694              		.loc 1 444 0 is_stmt 1
 695 0028 7B68     		ldr	r3, [r7, #4]
 696 002a 1B68     		ldr	r3, [r3, #0]
 697 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 698 002e 4FEA0222 		lsl	r2, r2, #8
 699 0032 02F4E061 		and	r1, r2, #1792
 700 0036 7A68     		ldr	r2, [r7, #4]
 701 0038 1268     		ldr	r2, [r2, #0]
 702 003a D2F8A020 		ldr	r2, [r2, #160]
 703 003e 22F4E062 		bic	r2, r2, #1792
 704 0042 0A43     		orrs	r2, r2, r1
 705 0044 C3F8A020 		str	r2, [r3, #160]
 445:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Msk,
 446:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Pos,
 447:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 448:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 449:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 450:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 706              		.loc 1 450 0
 707 0048 4FF00003 		mov	r3, #0
 708 004c FB60     		str	r3, [r7, #12]
 709 004e 02E0     		b	.L26
 710              	.L28:
 451:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 452:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 453:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 454:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 711              		.loc 1 454 0
 712 0050 4FF00203 		mov	r3, #2
 713 0054 FB60     		str	r3, [r7, #12]
 714              	.L26:
 455:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 456:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 457:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 458:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 459:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 460:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 461:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 462:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 463:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 464:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 715              		.loc 1 464 0
 716 0056 FB68     		ldr	r3, [r7, #12]
 465:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 717              		.loc 1 465 0
 718 0058 1846     		mov	r0, r3
 719 005a 07F11407 		add	r7, r7, #20
 720 005e BD46     		mov	sp, r7
 721 0060 80BC     		pop	{r7}
 722 0062 7047     		bx	lr
 723              		.cfi_endproc
 724              	.LFE125:
 726              		.section	.text.ADCGLOB001_SetGlobClass0SampleTime,"ax",%progbits
 727              		.align	2
 728              		.global	ADCGLOB001_SetGlobClass0SampleTime
 729              		.thumb
 730              		.thumb_func
 732              	ADCGLOB001_SetGlobClass0SampleTime:
 733              	.LFB126:
 466:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 467:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Sample Time Control for Standard
 468:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Conversions.
 469:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 470:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 471:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0SampleTime(
 472:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 473:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 474:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 475:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 734              		.loc 1 475 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 16
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738              		@ link register save eliminated.
 739 0000 80B4     		push	{r7}
 740              	.LCFI27:
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 7, -4
 743 0002 85B0     		sub	sp, sp, #20
 744              	.LCFI28:
 745              		.cfi_def_cfa_offset 24
 746 0004 00AF     		add	r7, sp, #0
 747              	.LCFI29:
 748              		.cfi_def_cfa_register 7
 749 0006 7860     		str	r0, [r7, #4]
 750 0008 0B46     		mov	r3, r1
 751 000a FB70     		strb	r3, [r7, #3]
 476:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 752              		.loc 1 476 0
 753 000c 4FF00103 		mov	r3, #1
 754 0010 FB60     		str	r3, [r7, #12]
 477:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 478:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 755              		.loc 1 478 0
 756 0012 7B68     		ldr	r3, [r7, #4]
 757 0014 5B68     		ldr	r3, [r3, #4]
 758 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 759 0018 012B     		cmp	r3, #1
 760 001a 17D1     		bne	.L31
 479:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 480:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 761              		.loc 1 480 0
 762 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 763 001e 1F2B     		cmp	r3, #31
 764 0020 11D8     		bhi	.L32
 481:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 Sample Time */
 482:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 765              		.loc 1 482 0
 766 0022 7B68     		ldr	r3, [r7, #4]
 767 0024 1B68     		ldr	r3, [r3, #0]
 768 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 769 0028 02F01F01 		and	r1, r2, #31
 770 002c 7A68     		ldr	r2, [r7, #4]
 771 002e 1268     		ldr	r2, [r2, #0]
 772 0030 D2F8A020 		ldr	r2, [r2, #160]
 773 0034 22F01F02 		bic	r2, r2, #31
 774 0038 0A43     		orrs	r2, r2, r1
 775 003a C3F8A020 		str	r2, [r3, #160]
 483:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Msk,
 484:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Pos,
 485:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 486:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 487:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 488:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 776              		.loc 1 488 0
 777 003e 4FF00003 		mov	r3, #0
 778 0042 FB60     		str	r3, [r7, #12]
 779 0044 02E0     		b	.L31
 780              	.L32:
 489:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 490:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 491:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 492:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 781              		.loc 1 492 0
 782 0046 4FF00203 		mov	r3, #2
 783 004a FB60     		str	r3, [r7, #12]
 784              	.L31:
 493:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 494:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 495:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 496:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 497:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 498:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 499:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 500:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 501:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 502:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 785              		.loc 1 502 0
 786 004c FB68     		ldr	r3, [r7, #12]
 503:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 504:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 787              		.loc 1 504 0
 788 004e 1846     		mov	r0, r3
 789 0050 07F11407 		add	r7, r7, #20
 790 0054 BD46     		mov	sp, r7
 791 0056 80BC     		pop	{r7}
 792 0058 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE126:
 796 005a 00BF     		.section	.text.ADCGLOB001_SetGlobClass0EmuxConvMode,"ax",%progbits
 797              		.align	2
 798              		.global	ADCGLOB001_SetGlobClass0EmuxConvMode
 799              		.thumb
 800              		.thumb_func
 802              	ADCGLOB001_SetGlobClass0EmuxConvMode:
 803              	.LFB127:
 505:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 506:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Conversion Mode for EMUX Conversions.
 507:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 508:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0EmuxConvMode(
 509:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 510:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 511:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 512:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 804              		.loc 1 512 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 16
 807              		@ frame_needed = 1, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809 0000 80B4     		push	{r7}
 810              	.LCFI30:
 811              		.cfi_def_cfa_offset 4
 812              		.cfi_offset 7, -4
 813 0002 85B0     		sub	sp, sp, #20
 814              	.LCFI31:
 815              		.cfi_def_cfa_offset 24
 816 0004 00AF     		add	r7, sp, #0
 817              	.LCFI32:
 818              		.cfi_def_cfa_register 7
 819 0006 7860     		str	r0, [r7, #4]
 820 0008 0B46     		mov	r3, r1
 821 000a FB70     		strb	r3, [r7, #3]
 513:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 822              		.loc 1 513 0
 823 000c 4FF00103 		mov	r3, #1
 824 0010 FB60     		str	r3, [r7, #12]
 514:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 515:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 825              		.loc 1 515 0
 826 0012 7B68     		ldr	r3, [r7, #4]
 827 0014 5B68     		ldr	r3, [r3, #4]
 828 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 829 0018 012B     		cmp	r3, #1
 830 001a 1CD1     		bne	.L35
 516:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 517:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 831              		.loc 1 517 0
 832 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 833 001e 022B     		cmp	r3, #2
 834 0020 02D9     		bls	.L36
 835              		.loc 1 517 0 is_stmt 0 discriminator 1
 836 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 837 0024 052B     		cmp	r3, #5
 838 0026 13D1     		bne	.L37
 839              	.L36:
 518:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 519:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 External Multiplexer conversion mode*/
 520:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 840              		.loc 1 520 0 is_stmt 1
 841 0028 7B68     		ldr	r3, [r7, #4]
 842 002a 1B68     		ldr	r3, [r3, #0]
 843 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 844 002e 4FEA0262 		lsl	r2, r2, #24
 845 0032 02F0E061 		and	r1, r2, #117440512
 846 0036 7A68     		ldr	r2, [r7, #4]
 847 0038 1268     		ldr	r2, [r2, #0]
 848 003a D2F8A020 		ldr	r2, [r2, #160]
 849 003e 22F0E062 		bic	r2, r2, #117440512
 850 0042 0A43     		orrs	r2, r2, r1
 851 0044 C3F8A020 		str	r2, [r3, #160]
 521:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Msk,
 522:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Pos,
 523:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 524:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 525:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 852              		.loc 1 525 0
 853 0048 4FF00003 		mov	r3, #0
 854 004c FB60     		str	r3, [r7, #12]
 855 004e 02E0     		b	.L35
 856              	.L37:
 526:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 527:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 528:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 529:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 530:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 857              		.loc 1 530 0
 858 0050 4FF00203 		mov	r3, #2
 859 0054 FB60     		str	r3, [r7, #12]
 860              	.L35:
 531:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 532:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 533:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 534:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 535:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 536:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 537:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 538:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 539:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 540:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 861              		.loc 1 540 0
 862 0056 FB68     		ldr	r3, [r7, #12]
 541:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 542:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 863              		.loc 1 542 0
 864 0058 1846     		mov	r0, r3
 865 005a 07F11407 		add	r7, r7, #20
 866 005e BD46     		mov	sp, r7
 867 0060 80BC     		pop	{r7}
 868 0062 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE127:
 872              		.section	.text.ADCGLOB001_SetGlobClass0EmuxSampleTime,"ax",%progbits
 873              		.align	2
 874              		.global	ADCGLOB001_SetGlobClass0EmuxSampleTime
 875              		.thumb
 876              		.thumb_func
 878              	ADCGLOB001_SetGlobClass0EmuxSampleTime:
 879              	.LFB128:
 543:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 544:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 545:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 0 Sample Time Control for EMUX Conversions.
 546:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 547:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass0EmuxSampleTime(
 548:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 549:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 550:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 551:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 880              		.loc 1 551 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 16
 883              		@ frame_needed = 1, uses_anonymous_args = 0
 884              		@ link register save eliminated.
 885 0000 80B4     		push	{r7}
 886              	.LCFI33:
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 0002 85B0     		sub	sp, sp, #20
 890              	.LCFI34:
 891              		.cfi_def_cfa_offset 24
 892 0004 00AF     		add	r7, sp, #0
 893              	.LCFI35:
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 896 0008 0B46     		mov	r3, r1
 897 000a FB70     		strb	r3, [r7, #3]
 552:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 898              		.loc 1 552 0
 899 000c 4FF00103 		mov	r3, #1
 900 0010 FB60     		str	r3, [r7, #12]
 553:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 554:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 901              		.loc 1 554 0
 902 0012 7B68     		ldr	r3, [r7, #4]
 903 0014 5B68     		ldr	r3, [r3, #4]
 904 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 905 0018 012B     		cmp	r3, #1
 906 001a 19D1     		bne	.L40
 555:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 556:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 907              		.loc 1 556 0
 908 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 909 001e 1F2B     		cmp	r3, #31
 910 0020 13D8     		bhi	.L41
 557:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 558:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class0 External Multiplexer Sample Time */
 559:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[0],
 911              		.loc 1 559 0
 912 0022 7B68     		ldr	r3, [r7, #4]
 913 0024 1B68     		ldr	r3, [r3, #0]
 914 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 915 0028 4FEA0242 		lsl	r2, r2, #16
 916 002c 02F4F811 		and	r1, r2, #2031616
 917 0030 7A68     		ldr	r2, [r7, #4]
 918 0032 1268     		ldr	r2, [r2, #0]
 919 0034 D2F8A020 		ldr	r2, [r2, #160]
 920 0038 22F4F812 		bic	r2, r2, #2031616
 921 003c 0A43     		orrs	r2, r2, r1
 922 003e C3F8A020 		str	r2, [r3, #160]
 560:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Msk,
 561:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Pos,
 562:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 563:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 564:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 565:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 923              		.loc 1 565 0
 924 0042 4FF00003 		mov	r3, #0
 925 0046 FB60     		str	r3, [r7, #12]
 926 0048 02E0     		b	.L40
 927              	.L41:
 566:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 567:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 568:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 569:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 570:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 928              		.loc 1 570 0
 929 004a 4FF00203 		mov	r3, #2
 930 004e FB60     		str	r3, [r7, #12]
 931              	.L40:
 571:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 572:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 573:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 574:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 575:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 576:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 577:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 578:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 579:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 580:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 932              		.loc 1 580 0
 933 0050 FB68     		ldr	r3, [r7, #12]
 581:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 934              		.loc 1 581 0
 935 0052 1846     		mov	r0, r3
 936 0054 07F11407 		add	r7, r7, #20
 937 0058 BD46     		mov	sp, r7
 938 005a 80BC     		pop	{r7}
 939 005c 7047     		bx	lr
 940              		.cfi_endproc
 941              	.LFE128:
 943 005e 00BF     		.section	.text.ADCGLOB001_SetGlobClass1ConvMode,"ax",%progbits
 944              		.align	2
 945              		.global	ADCGLOB001_SetGlobClass1ConvMode
 946              		.thumb
 947              		.thumb_func
 949              	ADCGLOB001_SetGlobClass1ConvMode:
 950              	.LFB129:
 582:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 583:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 conversion mode for standard conversions.
 584:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 585:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1ConvMode(
 586:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 587:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 588:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 589:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 951              		.loc 1 589 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 16
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956 0000 80B4     		push	{r7}
 957              	.LCFI36:
 958              		.cfi_def_cfa_offset 4
 959              		.cfi_offset 7, -4
 960 0002 85B0     		sub	sp, sp, #20
 961              	.LCFI37:
 962              		.cfi_def_cfa_offset 24
 963 0004 00AF     		add	r7, sp, #0
 964              	.LCFI38:
 965              		.cfi_def_cfa_register 7
 966 0006 7860     		str	r0, [r7, #4]
 967 0008 0B46     		mov	r3, r1
 968 000a FB70     		strb	r3, [r7, #3]
 590:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 969              		.loc 1 590 0
 970 000c 4FF00103 		mov	r3, #1
 971 0010 FB60     		str	r3, [r7, #12]
 591:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 592:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 972              		.loc 1 592 0
 973 0012 7B68     		ldr	r3, [r7, #4]
 974 0014 5B68     		ldr	r3, [r3, #4]
 975 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 976 0018 012B     		cmp	r3, #1
 977 001a 1CD1     		bne	.L44
 593:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 594:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 978              		.loc 1 594 0
 979 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 980 001e 022B     		cmp	r3, #2
 981 0020 02D9     		bls	.L45
 982              		.loc 1 594 0 is_stmt 0 discriminator 1
 983 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 984 0024 052B     		cmp	r3, #5
 985 0026 13D1     		bne	.L46
 986              	.L45:
 595:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 596:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Set the global class 1 conversion mode */
 597:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 987              		.loc 1 597 0 is_stmt 1
 988 0028 7B68     		ldr	r3, [r7, #4]
 989 002a 1B68     		ldr	r3, [r3, #0]
 990 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 991 002e 4FEA0222 		lsl	r2, r2, #8
 992 0032 02F4E061 		and	r1, r2, #1792
 993 0036 7A68     		ldr	r2, [r7, #4]
 994 0038 1268     		ldr	r2, [r2, #0]
 995 003a D2F8A420 		ldr	r2, [r2, #164]
 996 003e 22F4E062 		bic	r2, r2, #1792
 997 0042 0A43     		orrs	r2, r2, r1
 998 0044 C3F8A420 		str	r2, [r3, #164]
 598:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Msk,
 599:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CMS_Pos,
 600:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 601:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 602:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 603:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 999              		.loc 1 603 0
 1000 0048 4FF00003 		mov	r3, #0
 1001 004c FB60     		str	r3, [r7, #12]
 1002 004e 02E0     		b	.L44
 1003              	.L46:
 604:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 605:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 606:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 607:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 608:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1004              		.loc 1 608 0
 1005 0050 4FF00203 		mov	r3, #2
 1006 0054 FB60     		str	r3, [r7, #12]
 1007              	.L44:
 609:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 610:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 611:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 612:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 613:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 614:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 615:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 616:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 617:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 618:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1008              		.loc 1 618 0
 1009 0056 FB68     		ldr	r3, [r7, #12]
 619:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1010              		.loc 1 619 0
 1011 0058 1846     		mov	r0, r3
 1012 005a 07F11407 		add	r7, r7, #20
 1013 005e BD46     		mov	sp, r7
 1014 0060 80BC     		pop	{r7}
 1015 0062 7047     		bx	lr
 1016              		.cfi_endproc
 1017              	.LFE129:
 1019              		.section	.text.ADCGLOB001_SetGlobClass1SampleTime,"ax",%progbits
 1020              		.align	2
 1021              		.global	ADCGLOB001_SetGlobClass1SampleTime
 1022              		.thumb
 1023              		.thumb_func
 1025              	ADCGLOB001_SetGlobClass1SampleTime:
 1026              	.LFB130:
 620:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 621:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Sample Time Control for Standard
 622:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * Conversions.
 623:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 624:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1SampleTime(
 625:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 626:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 627:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 628:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1027              		.loc 1 628 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 16
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 1032 0000 80B4     		push	{r7}
 1033              	.LCFI39:
 1034              		.cfi_def_cfa_offset 4
 1035              		.cfi_offset 7, -4
 1036 0002 85B0     		sub	sp, sp, #20
 1037              	.LCFI40:
 1038              		.cfi_def_cfa_offset 24
 1039 0004 00AF     		add	r7, sp, #0
 1040              	.LCFI41:
 1041              		.cfi_def_cfa_register 7
 1042 0006 7860     		str	r0, [r7, #4]
 1043 0008 0B46     		mov	r3, r1
 1044 000a FB70     		strb	r3, [r7, #3]
 629:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1045              		.loc 1 629 0
 1046 000c 4FF00103 		mov	r3, #1
 1047 0010 FB60     		str	r3, [r7, #12]
 630:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 631:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1048              		.loc 1 631 0
 1049 0012 7B68     		ldr	r3, [r7, #4]
 1050 0014 5B68     		ldr	r3, [r3, #4]
 1051 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1052 0018 012B     		cmp	r3, #1
 1053 001a 17D1     		bne	.L49
 632:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 633:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 634:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 1054              		.loc 1 634 0
 1055 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1056 001e 1F2B     		cmp	r3, #31
 1057 0020 11D8     		bhi	.L50
 635:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the global class 1 Sample Time */
 636:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1058              		.loc 1 636 0
 1059 0022 7B68     		ldr	r3, [r7, #4]
 1060 0024 1B68     		ldr	r3, [r3, #0]
 1061 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1062 0028 02F01F01 		and	r1, r2, #31
 1063 002c 7A68     		ldr	r2, [r7, #4]
 1064 002e 1268     		ldr	r2, [r2, #0]
 1065 0030 D2F8A420 		ldr	r2, [r2, #164]
 1066 0034 22F01F02 		bic	r2, r2, #31
 1067 0038 0A43     		orrs	r2, r2, r1
 1068 003a C3F8A420 		str	r2, [r3, #164]
 637:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Msk,
 638:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCS_Pos,
 639:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 640:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 641:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 642:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1069              		.loc 1 642 0
 1070 003e 4FF00003 		mov	r3, #0
 1071 0042 FB60     		str	r3, [r7, #12]
 1072 0044 02E0     		b	.L49
 1073              	.L50:
 643:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 644:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 645:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 646:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 647:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1074              		.loc 1 647 0
 1075 0046 4FF00203 		mov	r3, #2
 1076 004a FB60     		str	r3, [r7, #12]
 1077              	.L49:
 648:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 649:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 650:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 651:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 652:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 653:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 654:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 655:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 656:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 657:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1078              		.loc 1 657 0
 1079 004c FB68     		ldr	r3, [r7, #12]
 658:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1080              		.loc 1 658 0
 1081 004e 1846     		mov	r0, r3
 1082 0050 07F11407 		add	r7, r7, #20
 1083 0054 BD46     		mov	sp, r7
 1084 0056 80BC     		pop	{r7}
 1085 0058 7047     		bx	lr
 1086              		.cfi_endproc
 1087              	.LFE130:
 1089 005a 00BF     		.section	.text.ADCGLOB001_SetGlobClass1EmuxConvMode,"ax",%progbits
 1090              		.align	2
 1091              		.global	ADCGLOB001_SetGlobClass1EmuxConvMode
 1092              		.thumb
 1093              		.thumb_func
 1095              	ADCGLOB001_SetGlobClass1EmuxConvMode:
 1096              	.LFB131:
 659:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 660:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 661:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Conversion Mode for EMUX Conversions.
 662:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 663:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1EmuxConvMode(
 664:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 665:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         ADCGLOB001_ConversionMode ConversionModeVal
 666:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 667:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1097              		.loc 1 667 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 16
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 1102 0000 80B4     		push	{r7}
 1103              	.LCFI42:
 1104              		.cfi_def_cfa_offset 4
 1105              		.cfi_offset 7, -4
 1106 0002 85B0     		sub	sp, sp, #20
 1107              	.LCFI43:
 1108              		.cfi_def_cfa_offset 24
 1109 0004 00AF     		add	r7, sp, #0
 1110              	.LCFI44:
 1111              		.cfi_def_cfa_register 7
 1112 0006 7860     		str	r0, [r7, #4]
 1113 0008 0B46     		mov	r3, r1
 1114 000a FB70     		strb	r3, [r7, #3]
 668:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1115              		.loc 1 668 0
 1116 000c 4FF00103 		mov	r3, #1
 1117 0010 FB60     		str	r3, [r7, #12]
 669:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 670:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1118              		.loc 1 670 0
 1119 0012 7B68     		ldr	r3, [r7, #4]
 1120 0014 5B68     		ldr	r3, [r3, #4]
 1121 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1122 0018 012B     		cmp	r3, #1
 1123 001a 1CD1     		bne	.L53
 671:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 672:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if((ConversionModeVal < (ADCGLOB001_ConversionMode)3) ||
 1124              		.loc 1 672 0
 1125 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1126 001e 022B     		cmp	r3, #2
 1127 0020 02D9     		bls	.L54
 1128              		.loc 1 672 0 is_stmt 0 discriminator 1
 1129 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1130 0024 052B     		cmp	r3, #5
 1131 0026 13D1     		bne	.L55
 1132              	.L54:
 673:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (ConversionModeVal ==(ADCGLOB001_ConversionMode)5)) {
 674:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the global class1 External Multiplexer conversion mode */
 675:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 676:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1133              		.loc 1 676 0 is_stmt 1
 1134 0028 7B68     		ldr	r3, [r7, #4]
 1135 002a 1B68     		ldr	r3, [r3, #0]
 1136 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1137 002e 4FEA0262 		lsl	r2, r2, #24
 1138 0032 02F0E061 		and	r1, r2, #117440512
 1139 0036 7A68     		ldr	r2, [r7, #4]
 1140 0038 1268     		ldr	r2, [r2, #0]
 1141 003a D2F8A420 		ldr	r2, [r2, #164]
 1142 003e 22F0E062 		bic	r2, r2, #117440512
 1143 0042 0A43     		orrs	r2, r2, r1
 1144 0044 C3F8A420 		str	r2, [r3, #164]
 677:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Msk,
 678:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_CME_Pos,
 679:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)ConversionModeVal
 680:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 681:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1145              		.loc 1 681 0
 1146 0048 4FF00003 		mov	r3, #0
 1147 004c FB60     		str	r3, [r7, #12]
 1148 004e 02E0     		b	.L53
 1149              	.L55:
 682:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 683:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 684:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 685:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1150              		.loc 1 685 0
 1151 0050 4FF00203 		mov	r3, #2
 1152 0054 FB60     		str	r3, [r7, #12]
 1153              	.L53:
 686:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 687:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 688:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 689:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 690:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 691:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 692:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 693:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 694:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 695:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1154              		.loc 1 695 0
 1155 0056 FB68     		ldr	r3, [r7, #12]
 696:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1156              		.loc 1 696 0
 1157 0058 1846     		mov	r0, r3
 1158 005a 07F11407 		add	r7, r7, #20
 1159 005e BD46     		mov	sp, r7
 1160 0060 80BC     		pop	{r7}
 1161 0062 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE131:
 1165              		.section	.text.ADCGLOB001_SetGlobClass1EmuxSampleTime,"ax",%progbits
 1166              		.align	2
 1167              		.global	ADCGLOB001_SetGlobClass1EmuxSampleTime
 1168              		.thumb
 1169              		.thumb_func
 1171              	ADCGLOB001_SetGlobClass1EmuxSampleTime:
 1172              	.LFB132:
 697:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 698:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 699:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the class 1 Sample Time Control for EMUX Conversions.
 700:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 701:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_SetGlobClass1EmuxSampleTime(
 702:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 703:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SampleTime
 704:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 705:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1173              		.loc 1 705 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 16
 1176              		@ frame_needed = 1, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 1178 0000 80B4     		push	{r7}
 1179              	.LCFI45:
 1180              		.cfi_def_cfa_offset 4
 1181              		.cfi_offset 7, -4
 1182 0002 85B0     		sub	sp, sp, #20
 1183              	.LCFI46:
 1184              		.cfi_def_cfa_offset 24
 1185 0004 00AF     		add	r7, sp, #0
 1186              	.LCFI47:
 1187              		.cfi_def_cfa_register 7
 1188 0006 7860     		str	r0, [r7, #4]
 1189 0008 0B46     		mov	r3, r1
 1190 000a FB70     		strb	r3, [r7, #3]
 706:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1191              		.loc 1 706 0
 1192 000c 4FF00103 		mov	r3, #1
 1193 0010 FB60     		str	r3, [r7, #12]
 707:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 708:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1194              		.loc 1 708 0
 1195 0012 7B68     		ldr	r3, [r7, #4]
 1196 0014 5B68     		ldr	r3, [r3, #4]
 1197 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1198 0018 012B     		cmp	r3, #1
 1199 001a 19D1     		bne	.L58
 709:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 710:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SampleTime < (uint8_t)32){
 1200              		.loc 1 710 0
 1201 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1202 001e 1F2B     		cmp	r3, #31
 1203 0020 13D8     		bhi	.L59
 711:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the global class1 External Multiplexer Sample Time */
 712:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             WR_REG( HandlePtr->kGlobalPtr->GLOBICLASS[1],
 1204              		.loc 1 712 0
 1205 0022 7B68     		ldr	r3, [r7, #4]
 1206 0024 1B68     		ldr	r3, [r3, #0]
 1207 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1208 0028 4FEA0242 		lsl	r2, r2, #16
 1209 002c 02F4F811 		and	r1, r2, #2031616
 1210 0030 7A68     		ldr	r2, [r7, #4]
 1211 0032 1268     		ldr	r2, [r2, #0]
 1212 0034 D2F8A420 		ldr	r2, [r2, #164]
 1213 0038 22F4F812 		bic	r2, r2, #2031616
 1214 003c 0A43     		orrs	r2, r2, r1
 1215 003e C3F8A420 		str	r2, [r3, #164]
 713:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Msk,
 714:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     VADC_GLOBICLASS_STCE_Pos,
 715:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (uint32_t)SampleTime
 716:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             );
 717:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1216              		.loc 1 717 0
 1217 0042 4FF00003 		mov	r3, #0
 1218 0046 FB60     		str	r3, [r7, #12]
 1219 0048 02E0     		b	.L58
 1220              	.L59:
 718:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 719:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 720:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 721:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 722:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1221              		.loc 1 722 0
 1222 004a 4FF00203 		mov	r3, #2
 1223 004e FB60     		str	r3, [r7, #12]
 1224              	.L58:
 723:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 724:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 725:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 726:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 727:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 728:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 729:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 730:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 731:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 732:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1225              		.loc 1 732 0
 1226 0050 FB68     		ldr	r3, [r7, #12]
 733:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1227              		.loc 1 733 0
 1228 0052 1846     		mov	r0, r3
 1229 0054 07F11407 		add	r7, r7, #20
 1230 0058 BD46     		mov	sp, r7
 1231 005a 80BC     		pop	{r7}
 1232 005c 7047     		bx	lr
 1233              		.cfi_endproc
 1234              	.LFE132:
 1236 005e 00BF     		.section	.text.ADCGLOB001_GetDisableBitStatus,"ax",%progbits
 1237              		.align	2
 1238              		.global	ADCGLOB001_GetDisableBitStatus
 1239              		.thumb
 1240              		.thumb_func
 1242              	ADCGLOB001_GetDisableBitStatus:
 1243              	.LFB133:
 734:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 735:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function gives the status of Module Disable bit.
 736:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 737:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GetDisableBitStatus(
 738:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 739:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t *StatusValue
 740:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 741:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1244              		.loc 1 741 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 16
 1247              		@ frame_needed = 1, uses_anonymous_args = 0
 1248              		@ link register save eliminated.
 1249 0000 80B4     		push	{r7}
 1250              	.LCFI48:
 1251              		.cfi_def_cfa_offset 4
 1252              		.cfi_offset 7, -4
 1253 0002 85B0     		sub	sp, sp, #20
 1254              	.LCFI49:
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              	.LCFI50:
 1258              		.cfi_def_cfa_register 7
 1259 0006 7860     		str	r0, [r7, #4]
 1260 0008 3960     		str	r1, [r7, #0]
 742:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1261              		.loc 1 742 0
 1262 000a 4FF00103 		mov	r3, #1
 1263 000e FB60     		str	r3, [r7, #12]
 743:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 744:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1264              		.loc 1 744 0
 1265 0010 7B68     		ldr	r3, [r7, #4]
 1266 0012 5B68     		ldr	r3, [r3, #4]
 1267 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1268 0016 012B     		cmp	r3, #1
 1269 0018 0CD1     		bne	.L62
 745:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 746:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Read the status value */
 747:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 748:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         *StatusValue = (uint8_t) RD_REG( HandlePtr->kGlobalPtr->CLC,
 1270              		.loc 1 748 0
 1271 001a 7B68     		ldr	r3, [r7, #4]
 1272 001c 1B68     		ldr	r3, [r3, #0]
 1273 001e 1B68     		ldr	r3, [r3, #0]
 1274 0020 03F00203 		and	r3, r3, #2
 1275 0024 4FEA5303 		lsr	r3, r3, #1
 1276 0028 DAB2     		uxtb	r2, r3
 1277 002a 3B68     		ldr	r3, [r7, #0]
 1278 002c 1A70     		strb	r2, [r3, #0]
 749:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_CLC_DISS_Msk,
 750:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 VADC_CLC_DISS_Pos
 751:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         );
 752:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1279              		.loc 1 752 0
 1280 002e 4FF00003 		mov	r3, #0
 1281 0032 FB60     		str	r3, [r7, #12]
 1282              	.L62:
 753:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 754:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 755:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 756:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 757:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 758:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 759:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 760:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1283              		.loc 1 760 0
 1284 0034 FB68     		ldr	r3, [r7, #12]
 761:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1285              		.loc 1 761 0
 1286 0036 1846     		mov	r0, r3
 1287 0038 07F11407 		add	r7, r7, #20
 1288 003c BD46     		mov	sp, r7
 1289 003e 80BC     		pop	{r7}
 1290 0040 7047     		bx	lr
 1291              		.cfi_endproc
 1292              	.LFE133:
 1294 0042 00BF     		.section	.text.ADCGLOB001_GetIdValue,"ax",%progbits
 1295              		.align	2
 1296              		.global	ADCGLOB001_GetIdValue
 1297              		.thumb
 1298              		.thumb_func
 1300              	ADCGLOB001_GetIdValue:
 1301              	.LFB134:
 762:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 763:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function gives the Id Value.
 764:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 765:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 766:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GetIdValue(
 767:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 768:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint32_t *IDValue
 769:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 770:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1302              		.loc 1 770 0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 16
 1305              		@ frame_needed = 1, uses_anonymous_args = 0
 1306              		@ link register save eliminated.
 1307 0000 80B4     		push	{r7}
 1308              	.LCFI51:
 1309              		.cfi_def_cfa_offset 4
 1310              		.cfi_offset 7, -4
 1311 0002 85B0     		sub	sp, sp, #20
 1312              	.LCFI52:
 1313              		.cfi_def_cfa_offset 24
 1314 0004 00AF     		add	r7, sp, #0
 1315              	.LCFI53:
 1316              		.cfi_def_cfa_register 7
 1317 0006 7860     		str	r0, [r7, #4]
 1318 0008 3960     		str	r1, [r7, #0]
 771:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1319              		.loc 1 771 0
 1320 000a 4FF00103 		mov	r3, #1
 1321 000e FB60     		str	r3, [r7, #12]
 772:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 773:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1322              		.loc 1 773 0
 1323 0010 7B68     		ldr	r3, [r7, #4]
 1324 0012 5B68     		ldr	r3, [r3, #4]
 1325 0014 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1326 0016 012B     		cmp	r3, #1
 1327 0018 07D1     		bne	.L65
 774:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 775:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Read the ID value */
 776:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         *IDValue =(uint32_t)HandlePtr->kGlobalPtr->ID;
 1328              		.loc 1 776 0
 1329 001a 7B68     		ldr	r3, [r7, #4]
 1330 001c 1B68     		ldr	r3, [r3, #0]
 1331 001e 9A68     		ldr	r2, [r3, #8]
 1332 0020 3B68     		ldr	r3, [r7, #0]
 1333 0022 1A60     		str	r2, [r3, #0]
 777:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 778:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1334              		.loc 1 778 0
 1335 0024 4FF00003 		mov	r3, #0
 1336 0028 FB60     		str	r3, [r7, #12]
 1337              	.L65:
 779:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 780:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 781:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 782:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 783:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 784:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 785:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 786:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1338              		.loc 1 786 0
 1339 002a FB68     		ldr	r3, [r7, #12]
 787:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1340              		.loc 1 787 0
 1341 002c 1846     		mov	r0, r3
 1342 002e 07F11407 		add	r7, r7, #20
 1343 0032 BD46     		mov	sp, r7
 1344 0034 80BC     		pop	{r7}
 1345 0036 7047     		bx	lr
 1346              		.cfi_endproc
 1347              	.LFE134:
 1349              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoGrp,"ax",%progbits
 1350              		.align	2
 1351              		.global	ADCGLOB001_GTFRConvtrDiagnoGrp
 1352              		.thumb
 1353              		.thumb_func
 1355              	ADCGLOB001_GTFRConvtrDiagnoGrp:
 1356              	.LFB135:
 788:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 789:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the group number to be used for converter diagnostics
 790:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * conversions.
 791:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 792:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 793:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoGrp(const ADCGLOB001_HandleType * HandlePtr,
 794:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t GroupValue
 795:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 796:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1357              		.loc 1 796 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 16
 1360              		@ frame_needed = 1, uses_anonymous_args = 0
 1361              		@ link register save eliminated.
 1362 0000 80B4     		push	{r7}
 1363              	.LCFI54:
 1364              		.cfi_def_cfa_offset 4
 1365              		.cfi_offset 7, -4
 1366 0002 85B0     		sub	sp, sp, #20
 1367              	.LCFI55:
 1368              		.cfi_def_cfa_offset 24
 1369 0004 00AF     		add	r7, sp, #0
 1370              	.LCFI56:
 1371              		.cfi_def_cfa_register 7
 1372 0006 7860     		str	r0, [r7, #4]
 1373 0008 0B46     		mov	r3, r1
 1374 000a FB70     		strb	r3, [r7, #3]
 797:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1375              		.loc 1 797 0
 1376 000c 4FF00103 		mov	r3, #1
 1377 0010 FB60     		str	r3, [r7, #12]
 798:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 799:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1378              		.loc 1 799 0
 1379 0012 7B68     		ldr	r3, [r7, #4]
 1380 0014 5B68     		ldr	r3, [r3, #4]
 1381 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1382 0018 012B     		cmp	r3, #1
 1383 001a 30D1     		bne	.L68
 800:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 801:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(GroupValue < (uint8_t)16){
 1384              		.loc 1 801 0
 1385 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1386 001e 0F2B     		cmp	r3, #15
 1387 0020 2AD8     		bhi	.L69
 802:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*clear the group number.*/
 803:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1388              		.loc 1 803 0
 1389 0022 7B68     		ldr	r3, [r7, #4]
 1390 0024 1A68     		ldr	r2, [r3, #0]
 804:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     ((HandlePtr->kGlobalPtr->GLOBTF)& (~(VADC_GLOBTF_CDGR_Msk))));
 1391              		.loc 1 804 0
 1392 0026 7B68     		ldr	r3, [r7, #4]
 1393 0028 1B68     		ldr	r3, [r3, #0]
 1394 002a D3F86031 		ldr	r3, [r3, #352]
 803:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1395              		.loc 1 803 0
 1396 002e 23F40043 		bic	r3, r3, #32768
 1397 0032 23F0F003 		bic	r3, r3, #240
 1398 0036 43F40043 		orr	r3, r3, #32768
 1399 003a C2F86031 		str	r3, [r2, #352]
 805:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Write the group number to be used for converter diagnostics conversions.*/
 806:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1400              		.loc 1 806 0
 1401 003e 7B68     		ldr	r3, [r7, #4]
 1402 0040 1B68     		ldr	r3, [r3, #0]
 1403 0042 7A68     		ldr	r2, [r7, #4]
 1404 0044 1268     		ldr	r2, [r2, #0]
 1405 0046 D2F86011 		ldr	r1, [r2, #352]
 807:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (((uint32_t)GroupValue << VADC_GLOBTF_CDGR_Pos) & VADC_GLOBTF_CDGR_Msk));
 1406              		.loc 1 807 0
 1407 004a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1408 004c 4FEA0212 		lsl	r2, r2, #4
 1409 0050 D2B2     		uxtb	r2, r2
 806:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1410              		.loc 1 806 0
 1411 0052 0A43     		orrs	r2, r2, r1
 1412 0054 42F40042 		orr	r2, r2, #32768
 1413 0058 C3F86021 		str	r2, [r3, #352]
 808:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 809:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Clear the Write Control for Conversion Diagnostics*/
 810:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);
 1414              		.loc 1 810 0
 1415 005c 7B68     		ldr	r3, [r7, #4]
 1416 005e 1B68     		ldr	r3, [r3, #0]
 1417 0060 7A68     		ldr	r2, [r7, #4]
 1418 0062 1268     		ldr	r2, [r2, #0]
 1419 0064 D2F86021 		ldr	r2, [r2, #352]
 1420 0068 22F40042 		bic	r2, r2, #32768
 1421 006c C3F86021 		str	r2, [r3, #352]
 811:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1422              		.loc 1 811 0
 1423 0070 4FF00003 		mov	r3, #0
 1424 0074 FB60     		str	r3, [r7, #12]
 1425 0076 02E0     		b	.L68
 1426              	.L69:
 812:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 813:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 814:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 815:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1427              		.loc 1 815 0
 1428 0078 4FF00203 		mov	r3, #2
 1429 007c FB60     		str	r3, [r7, #12]
 1430              	.L68:
 816:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 817:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 818:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 819:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 820:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 821:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 822:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 823:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 824:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 825:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1431              		.loc 1 825 0
 1432 007e FB68     		ldr	r3, [r7, #12]
 826:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1433              		.loc 1 826 0
 1434 0080 1846     		mov	r0, r3
 1435 0082 07F11407 		add	r7, r7, #20
 1436 0086 BD46     		mov	sp, r7
 1437 0088 80BC     		pop	{r7}
 1438 008a 7047     		bx	lr
 1439              		.cfi_endproc
 1440              	.LFE135:
 1442              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoEnable,"ax",%progbits
 1443              		.align	2
 1444              		.global	ADCGLOB001_GTFRConvtrDiagnoEnable
 1445              		.thumb
 1446              		.thumb_func
 1448              	ADCGLOB001_GTFRConvtrDiagnoEnable:
 1449              	.LFB136:
 827:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 828:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Converter Diagnostics pull devices connected as
 829:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * selected by bitfield CDSEL.
 830:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 831:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoEnable(
 832:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 833:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 834:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1450              		.loc 1 834 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 16
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
 1455 0000 80B4     		push	{r7}
 1456              	.LCFI57:
 1457              		.cfi_def_cfa_offset 4
 1458              		.cfi_offset 7, -4
 1459 0002 85B0     		sub	sp, sp, #20
 1460              	.LCFI58:
 1461              		.cfi_def_cfa_offset 24
 1462 0004 00AF     		add	r7, sp, #0
 1463              	.LCFI59:
 1464              		.cfi_def_cfa_register 7
 1465 0006 7860     		str	r0, [r7, #4]
 835:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1466              		.loc 1 835 0
 1467 0008 4FF00103 		mov	r3, #1
 1468 000c FB60     		str	r3, [r7, #12]
 836:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 837:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1469              		.loc 1 837 0
 1470 000e 7B68     		ldr	r3, [r7, #4]
 1471 0010 5B68     		ldr	r3, [r3, #4]
 1472 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1473 0014 012B     		cmp	r3, #1
 1474 0016 16D1     		bne	.L72
 838:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 839:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Enable the Converter Diagnostics*/
 840:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBTF |=
 1475              		.loc 1 840 0
 1476 0018 7B68     		ldr	r3, [r7, #4]
 1477 001a 1B68     		ldr	r3, [r3, #0]
 1478 001c 7A68     		ldr	r2, [r7, #4]
 1479 001e 1268     		ldr	r2, [r2, #0]
 1480 0020 D2F86021 		ldr	r2, [r2, #352]
 1481 0024 42F40142 		orr	r2, r2, #33024
 1482 0028 C3F86021 		str	r2, [r3, #352]
 841:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (VADC_GLOBTF_CDWC_Msk | VADC_GLOBTF_CDEN_Msk);
 842:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Clear the Write Control for Conversion Diagnostics*/
 843:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);
 1483              		.loc 1 843 0
 1484 002c 7B68     		ldr	r3, [r7, #4]
 1485 002e 1B68     		ldr	r3, [r3, #0]
 1486 0030 7A68     		ldr	r2, [r7, #4]
 1487 0032 1268     		ldr	r2, [r2, #0]
 1488 0034 D2F86021 		ldr	r2, [r2, #352]
 1489 0038 22F40042 		bic	r2, r2, #32768
 1490 003c C3F86021 		str	r2, [r3, #352]
 844:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1491              		.loc 1 844 0
 1492 0040 4FF00003 		mov	r3, #0
 1493 0044 FB60     		str	r3, [r7, #12]
 1494              	.L72:
 845:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 846:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 847:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 848:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 849:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 850:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 851:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 852:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1495              		.loc 1 852 0
 1496 0046 FB68     		ldr	r3, [r7, #12]
 853:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1497              		.loc 1 853 0
 1498 0048 1846     		mov	r0, r3
 1499 004a 07F11407 		add	r7, r7, #20
 1500 004e BD46     		mov	sp, r7
 1501 0050 80BC     		pop	{r7}
 1502 0052 7047     		bx	lr
 1503              		.cfi_endproc
 1504              	.LFE136:
 1506              		.section	.text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect,"ax",%progbits
 1507              		.align	2
 1508              		.global	ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect
 1509              		.thumb
 1510              		.thumb_func
 1512              	ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:
 1513              	.LFB137:
 854:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 855:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Converter Diagnostics Pull-Devices Select value.
 856:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 857:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect(
 858:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr,
 859:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         uint8_t SelectValue
 860:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 861:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1514              		.loc 1 861 0
 1515              		.cfi_startproc
 1516              		@ args = 0, pretend = 0, frame = 16
 1517              		@ frame_needed = 1, uses_anonymous_args = 0
 1518              		@ link register save eliminated.
 1519 0000 80B4     		push	{r7}
 1520              	.LCFI60:
 1521              		.cfi_def_cfa_offset 4
 1522              		.cfi_offset 7, -4
 1523 0002 85B0     		sub	sp, sp, #20
 1524              	.LCFI61:
 1525              		.cfi_def_cfa_offset 24
 1526 0004 00AF     		add	r7, sp, #0
 1527              	.LCFI62:
 1528              		.cfi_def_cfa_register 7
 1529 0006 7860     		str	r0, [r7, #4]
 1530 0008 0B46     		mov	r3, r1
 1531 000a FB70     		strb	r3, [r7, #3]
 862:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1532              		.loc 1 862 0
 1533 000c 4FF00103 		mov	r3, #1
 1534 0010 FB60     		str	r3, [r7, #12]
 863:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 864:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1535              		.loc 1 864 0
 1536 0012 7B68     		ldr	r3, [r7, #4]
 1537 0014 5B68     		ldr	r3, [r3, #4]
 1538 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1539 0018 012B     		cmp	r3, #1
 1540 001a 2FD1     		bne	.L75
 865:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 866:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         if(SelectValue < (uint8_t)4){
 1541              		.loc 1 866 0
 1542 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1543 001e 032B     		cmp	r3, #3
 1544 0020 29D8     		bhi	.L76
 867:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Clear Converter Diagnostics Pull-Devices Select value  */
 868:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1545              		.loc 1 868 0
 1546 0022 7B68     		ldr	r3, [r7, #4]
 1547 0024 1B68     		ldr	r3, [r3, #0]
 869:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     ((HandlePtr->kGlobalPtr->GLOBTF)& (~(VADC_GLOBTF_CDSEL_Msk))));
 1548              		.loc 1 869 0
 1549 0026 7A68     		ldr	r2, [r7, #4]
 1550 0028 1268     		ldr	r2, [r2, #0]
 1551 002a D2F86021 		ldr	r2, [r2, #352]
 868:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF = (VADC_GLOBTF_CDWC_Msk|
 1552              		.loc 1 868 0
 1553 002e 22F40642 		bic	r2, r2, #34304
 1554 0032 42F40042 		orr	r2, r2, #32768
 1555 0036 C3F86021 		str	r2, [r3, #352]
 870:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 871:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /* Write the Converter Diagnostics Pull-Devices Select value */
 872:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1556              		.loc 1 872 0
 1557 003a 7B68     		ldr	r3, [r7, #4]
 1558 003c 1B68     		ldr	r3, [r3, #0]
 1559 003e 7A68     		ldr	r2, [r7, #4]
 1560 0040 1268     		ldr	r2, [r2, #0]
 1561 0042 D2F86011 		ldr	r1, [r2, #352]
 873:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                     (((uint32_t)SelectValue << VADC_GLOBTF_CDSEL_Pos) & VADC_GLOBTF_CDSEL_Msk));
 1562              		.loc 1 873 0
 1563 0046 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1564 0048 4FEA4222 		lsl	r2, r2, #9
 1565 004c 02F4C062 		and	r2, r2, #1536
 872:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             HandlePtr->kGlobalPtr->GLOBTF |= (VADC_GLOBTF_CDWC_Msk |
 1566              		.loc 1 872 0
 1567 0050 0A43     		orrs	r2, r2, r1
 1568 0052 42F40042 		orr	r2, r2, #32768
 1569 0056 C3F86021 		str	r2, [r3, #352]
 874:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             /*Clear the Write Control for Conversion Diagnostics*/
 875:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 876:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_CDWC_Pos);
 1570              		.loc 1 876 0
 1571 005a 7B68     		ldr	r3, [r7, #4]
 1572 005c 1B68     		ldr	r3, [r3, #0]
 1573 005e 7A68     		ldr	r2, [r7, #4]
 1574 0060 1268     		ldr	r2, [r2, #0]
 1575 0062 D2F86021 		ldr	r2, [r2, #352]
 1576 0066 22F40042 		bic	r2, r2, #32768
 1577 006a C3F86021 		str	r2, [r3, #352]
 877:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)DAVEApp_SUCCESS;
 1578              		.loc 1 877 0
 1579 006e 4FF00003 		mov	r3, #0
 1580 0072 FB60     		str	r3, [r7, #12]
 1581 0074 02E0     		b	.L75
 1582              	.L76:
 878:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 879:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         else
 880:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         {
 881:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             Status = (uint32_t)ADCGLOB001_INVALID_PARAM_ERROR;
 1583              		.loc 1 881 0
 1584 0076 4FF00203 		mov	r3, #2
 1585 007a FB60     		str	r3, [r7, #12]
 1586              	.L75:
 882:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****             DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 883:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         }
 884:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 885:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 886:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 887:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 888:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 889:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 890:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1587              		.loc 1 890 0
 1588 007c FB68     		ldr	r3, [r7, #12]
 891:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1589              		.loc 1 891 0
 1590 007e 1846     		mov	r0, r3
 1591 0080 07F11407 		add	r7, r7, #20
 1592 0084 BD46     		mov	sp, r7
 1593 0086 80BC     		pop	{r7}
 1594 0088 7047     		bx	lr
 1595              		.cfi_endproc
 1596              	.LFE137:
 1598 008a 00BF     		.section	.text.ADCGLOB001_GTFRPullDwnDiagnoEnable,"ax",%progbits
 1599              		.align	2
 1600              		.global	ADCGLOB001_GTFRPullDwnDiagnoEnable
 1601              		.thumb
 1602              		.thumb_func
 1604              	ADCGLOB001_GTFRPullDwnDiagnoEnable:
 1605              	.LFB138:
 892:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 893:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** /**
 894:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  * This function configure the Pull-Down Diagnostics Enable register.
 895:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****  */
 896:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** status_t ADCGLOB001_GTFRPullDwnDiagnoEnable(
 897:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         const ADCGLOB001_HandleType * HandlePtr
 898:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** )
 899:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** {
 1606              		.loc 1 899 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 16
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610              		@ link register save eliminated.
 1611 0000 80B4     		push	{r7}
 1612              	.LCFI63:
 1613              		.cfi_def_cfa_offset 4
 1614              		.cfi_offset 7, -4
 1615 0002 85B0     		sub	sp, sp, #20
 1616              	.LCFI64:
 1617              		.cfi_def_cfa_offset 24
 1618 0004 00AF     		add	r7, sp, #0
 1619              	.LCFI65:
 1620              		.cfi_def_cfa_register 7
 1621 0006 7860     		str	r0, [r7, #4]
 900:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     status_t Status = (uint32_t)ADCGLOB001_OPER_NOT_ALLOWED;
 1622              		.loc 1 900 0
 1623 0008 4FF00103 		mov	r3, #1
 1624 000c FB60     		str	r3, [r7, #12]
 901:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 902:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (HandlePtr->kDynamicDataPtr->StateType == ADCGLOB001_INITIALIZED)
 1625              		.loc 1 902 0
 1626 000e 7B68     		ldr	r3, [r7, #4]
 1627 0010 5B68     		ldr	r3, [r3, #4]
 1628 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1629 0014 012B     		cmp	r3, #1
 1630 0016 16D1     		bne	.L79
 903:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 904:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Enable the Pull-Down Diagnostics */
 905:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         HandlePtr->kGlobalPtr->GLOBTF |=
 1631              		.loc 1 905 0
 1632 0018 7B68     		ldr	r3, [r7, #4]
 1633 001a 1B68     		ldr	r3, [r3, #0]
 1634 001c 7A68     		ldr	r2, [r7, #4]
 1635 001e 1268     		ldr	r2, [r2, #0]
 1636 0020 D2F86021 		ldr	r2, [r2, #352]
 1637 0024 42F40102 		orr	r2, r2, #8454144
 1638 0028 C3F86021 		str	r2, [r3, #352]
 906:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****                 (VADC_GLOBTF_MDWC_Msk | VADC_GLOBTF_PDD_Msk);
 907:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         /*Clear the Write Control for Multiplexer Diagnostics*/
 908:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         CLR_BIT(HandlePtr->kGlobalPtr->GLOBTF, VADC_GLOBTF_MDWC_Pos);
 1639              		.loc 1 908 0
 1640 002c 7B68     		ldr	r3, [r7, #4]
 1641 002e 1B68     		ldr	r3, [r3, #0]
 1642 0030 7A68     		ldr	r2, [r7, #4]
 1643 0032 1268     		ldr	r2, [r2, #0]
 1644 0034 D2F86021 		ldr	r2, [r2, #352]
 1645 0038 22F40002 		bic	r2, r2, #8388608
 1646 003c C3F86021 		str	r2, [r3, #352]
 909:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 910:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         Status = (uint32_t)DAVEApp_SUCCESS;
 1647              		.loc 1 910 0
 1648 0040 4FF00003 		mov	r3, #0
 1649 0044 FB60     		str	r3, [r7, #12]
 1650              	.L79:
 911:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 912:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 913:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     if (Status != (uint32_t)DAVEApp_SUCCESS)
 914:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     {
 915:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****         DBG002_ERROR(APP_GID, DBG002_MESSAGEID_LITERAL, 1, &Status);
 916:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     }
 917:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** 
 918:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c ****     return Status;
 1651              		.loc 1 918 0
 1652 0046 FB68     		ldr	r3, [r7, #12]
 919:../Dave/Generated/src/ADCGLOB001/ADCGlob001.c **** }
 1653              		.loc 1 919 0
 1654 0048 1846     		mov	r0, r3
 1655 004a 07F11407 		add	r7, r7, #20
 1656 004e BD46     		mov	sp, r7
 1657 0050 80BC     		pop	{r7}
 1658 0052 7047     		bx	lr
 1659              		.cfi_endproc
 1660              	.LFE138:
 1662              		.text
 1663              	.Letext0:
 1664              		.file 2 "c:\\dave-3.1.10\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../ar
 1665              		.file 3 "C:\\DAVE-3.1.10\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.
 1666              		.file 4 "C:\\DAVE_3.1.10_Workspace\\ADC001_Example1\\Dave\\Generated\\inc\\DAVESupport/../../inc/L
 1667              		.file 5 "C:\\DAVE_3.1.10_Workspace\\ADC001_Example1\\Dave\\Generated\\inc\\DAVESupport/../../inc/R
 1668              		.file 6 "C:\\DAVE_3.1.10_Workspace\\ADC001_Example1\\Dave\\Generated\\inc\\DAVESupport/../../inc/A
 1669              		.file 7 "C:\\DAVE-3.1.10\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1670              		.file 8 "C:\\DAVE_3.1.10_Workspace\\ADC001_Example1\\Dave\\Generated\\inc\\DAVESupport/../../inc/A
DEFINED SYMBOLS
                            *ABS*:00000000 ADCGlob001.c
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:20     .text.ADCGLOB001_Init:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:25     .text.ADCGLOB001_Init:00000000 ADCGLOB001_Init
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:214    .text.ADCGLOB001_DeInit:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:219    .text.ADCGLOB001_DeInit:00000000 ADCGLOB001_DeInit
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:306    .text.ADCGLOB001_CLKRequestDisable:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:311    .text.ADCGLOB001_CLKRequestDisable:00000000 ADCGLOB001_CLKRequestDisable
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:362    .text.ADCGLOB001_CLKRequestEnable:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:367    .text.ADCGLOB001_CLKRequestEnable:00000000 ADCGLOB001_CLKRequestEnable
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:418    .text.ADCGLOB001_SetStartUpCalibration:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:423    .text.ADCGLOB001_SetStartUpCalibration:00000000 ADCGLOB001_SetStartUpCalibration
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:474    .text.ADCGLOB001_StartUpCalibrationInit:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:479    .text.ADCGLOB001_StartUpCalibrationInit:00000000 ADCGLOB001_StartUpCalibrationInit
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:539    .text.ADCGLOB001_EnableSleepModeControl:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:544    .text.ADCGLOB001_EnableSleepModeControl:00000000 ADCGLOB001_EnableSleepModeControl
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:595    .text.ADCGLOB001_DisregardSleepModeControl:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:600    .text.ADCGLOB001_DisregardSleepModeControl:00000000 ADCGLOB001_DisregardSleepModeControl
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:651    .text.ADCGLOB001_SetGlobClass0ConvMode:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:656    .text.ADCGLOB001_SetGlobClass0ConvMode:00000000 ADCGLOB001_SetGlobClass0ConvMode
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:727    .text.ADCGLOB001_SetGlobClass0SampleTime:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:732    .text.ADCGLOB001_SetGlobClass0SampleTime:00000000 ADCGLOB001_SetGlobClass0SampleTime
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:797    .text.ADCGLOB001_SetGlobClass0EmuxConvMode:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:802    .text.ADCGLOB001_SetGlobClass0EmuxConvMode:00000000 ADCGLOB001_SetGlobClass0EmuxConvMode
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:873    .text.ADCGLOB001_SetGlobClass0EmuxSampleTime:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:878    .text.ADCGLOB001_SetGlobClass0EmuxSampleTime:00000000 ADCGLOB001_SetGlobClass0EmuxSampleTime
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:944    .text.ADCGLOB001_SetGlobClass1ConvMode:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:949    .text.ADCGLOB001_SetGlobClass1ConvMode:00000000 ADCGLOB001_SetGlobClass1ConvMode
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1020   .text.ADCGLOB001_SetGlobClass1SampleTime:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1025   .text.ADCGLOB001_SetGlobClass1SampleTime:00000000 ADCGLOB001_SetGlobClass1SampleTime
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1090   .text.ADCGLOB001_SetGlobClass1EmuxConvMode:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1095   .text.ADCGLOB001_SetGlobClass1EmuxConvMode:00000000 ADCGLOB001_SetGlobClass1EmuxConvMode
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1166   .text.ADCGLOB001_SetGlobClass1EmuxSampleTime:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1171   .text.ADCGLOB001_SetGlobClass1EmuxSampleTime:00000000 ADCGLOB001_SetGlobClass1EmuxSampleTime
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1237   .text.ADCGLOB001_GetDisableBitStatus:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1242   .text.ADCGLOB001_GetDisableBitStatus:00000000 ADCGLOB001_GetDisableBitStatus
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1295   .text.ADCGLOB001_GetIdValue:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1300   .text.ADCGLOB001_GetIdValue:00000000 ADCGLOB001_GetIdValue
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1350   .text.ADCGLOB001_GTFRConvtrDiagnoGrp:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1355   .text.ADCGLOB001_GTFRConvtrDiagnoGrp:00000000 ADCGLOB001_GTFRConvtrDiagnoGrp
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1443   .text.ADCGLOB001_GTFRConvtrDiagnoEnable:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1448   .text.ADCGLOB001_GTFRConvtrDiagnoEnable:00000000 ADCGLOB001_GTFRConvtrDiagnoEnable
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1507   .text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1512   .text.ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect:00000000 ADCGLOB001_GTFRConvtrDiagnoPullDevicesSelect
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1599   .text.ADCGLOB001_GTFRPullDwnDiagnoEnable:00000000 $t
C:\Users\ThomasJu\AppData\Local\Temp\ccY5eUQ7.s:1604   .text.ADCGLOB001_GTFRPullDwnDiagnoEnable:00000000 ADCGLOB001_GTFRPullDwnDiagnoEnable
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.e9ce17ad1e95e60f9b7364a48ad252e4
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.uc_id.h.35.6a563b5a45d32cec26f5b514b510065d
                           .group:00000000 wm4.NVIC002_Conf.h.62.36db970f6153b5da024017b80c7220d8
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.ADCGROUP001.h.64.1a67eefa54ffa3e3b9429093742c873c
                           .group:00000000 wm4.IO001.h.49.4efcabb368feaef60c65bd7504b48505
                           .group:00000000 wm4.ADC001.h.72.a0f6b9479a18584b91fa95e6f862978d

UNDEFINED SYMBOLS
ADCGLOB001_Handle0
RESET001_DeassertReset
